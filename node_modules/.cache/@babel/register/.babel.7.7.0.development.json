{
  "{\"sourceRoot\":\"/app/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _morgan = _interopRequireDefault(require(\"morgan\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _helmet = _interopRequireDefault(require(\"helmet\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nrequire(\"./aws\");\n\nvar _routes = _interopRequireDefault(require(\"./routes\"));\n\nvar _storage = require(\"./lib/storage\");\n\nrequire(\"./models\");\n\nvar _pagination = require(\"./middlewares/pagination\");\n\n// import './redis'\n_mongoose[\"default\"].Promise = global.Promise;\nvar app = (0, _express[\"default\"])();\nvar PORT = process.env.PORT || 3000;\napp.use(_storage.bindCurrentNamespace);\napp.use((0, _cors[\"default\"])());\napp.use((0, _helmet[\"default\"])());\napp.use(_bodyParser[\"default\"].urlencoded({\n  extended: false\n}));\napp.use(_bodyParser[\"default\"].json());\napp.use((0, _pagination.pagination)({\n  page: 1,\n  limit: 25,\n  maxLimit: 100\n}));\nif (process.env.NODE_ENV === 'development') app.use((0, _morgan[\"default\"])('dev'));\n(0, _routes[\"default\"])(app);\n\nif (!process.env.MONGO_URI) {\n  console.error('ENV=MONGO_URI is not set');\n  process.exit(0);\n}\n\n_mongoose[\"default\"].connect(process.env.MONGO_URI, {\n  useCreateIndex: false,\n  useNewUrlParser: true,\n  autoReconnect: true,\n  useFindAndModify: false\n});\n\nif (process.env.NODE_ENV === 'development') _mongoose[\"default\"].set('debug', true);\napp.listen(PORT, function () {\n  console.log(\"Server started on port \".concat(PORT));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwiUHJvbWlzZSIsImdsb2JhbCIsImFwcCIsIlBPUlQiLCJwcm9jZXNzIiwiZW52IiwidXNlIiwiYmluZEN1cnJlbnROYW1lc3BhY2UiLCJib2R5UGFyc2VyIiwidXJsZW5jb2RlZCIsImV4dGVuZGVkIiwianNvbiIsInBhZ2UiLCJsaW1pdCIsIm1heExpbWl0IiwiTk9ERV9FTlYiLCJNT05HT19VUkkiLCJjb25zb2xlIiwiZXJyb3IiLCJleGl0IiwiY29ubmVjdCIsInVzZUNyZWF0ZUluZGV4IiwidXNlTmV3VXJsUGFyc2VyIiwiYXV0b1JlY29ubmVjdCIsInVzZUZpbmRBbmRNb2RpZnkiLCJzZXQiLCJsaXN0ZW4iLCJsb2ciXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFHQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFMQTtBQU9BQSxxQkFBU0MsT0FBVCxHQUFtQkMsTUFBTSxDQUFDRCxPQUExQjtBQUNBLElBQU1FLEdBQUcsR0FBRywwQkFBWjtBQUNBLElBQU1DLElBQUksR0FBR0MsT0FBTyxDQUFDQyxHQUFSLENBQVlGLElBQVosSUFBb0IsSUFBakM7QUFFQUQsR0FBRyxDQUFDSSxHQUFKLENBQVFDLDZCQUFSO0FBQ0FMLEdBQUcsQ0FBQ0ksR0FBSixDQUFRLHVCQUFSO0FBQ0FKLEdBQUcsQ0FBQ0ksR0FBSixDQUFRLHlCQUFSO0FBQ0FKLEdBQUcsQ0FBQ0ksR0FBSixDQUFRRSx1QkFBV0MsVUFBWCxDQUFzQjtBQUFFQyxFQUFBQSxRQUFRLEVBQUU7QUFBWixDQUF0QixDQUFSO0FBQ0FSLEdBQUcsQ0FBQ0ksR0FBSixDQUFRRSx1QkFBV0csSUFBWCxFQUFSO0FBQ0FULEdBQUcsQ0FBQ0ksR0FBSixDQUFRLDRCQUFXO0FBQUVNLEVBQUFBLElBQUksRUFBRSxDQUFSO0FBQVdDLEVBQUFBLEtBQUssRUFBRSxFQUFsQjtBQUFzQkMsRUFBQUEsUUFBUSxFQUFFO0FBQWhDLENBQVgsQ0FBUjtBQUNBLElBQUlWLE9BQU8sQ0FBQ0MsR0FBUixDQUFZVSxRQUFaLEtBQXlCLGFBQTdCLEVBQTRDYixHQUFHLENBQUNJLEdBQUosQ0FBUSx3QkFBTyxLQUFQLENBQVI7QUFFNUMsd0JBQWdCSixHQUFoQjs7QUFFQSxJQUFJLENBQUNFLE9BQU8sQ0FBQ0MsR0FBUixDQUFZVyxTQUFqQixFQUE0QjtBQUMxQkMsRUFBQUEsT0FBTyxDQUFDQyxLQUFSLENBQWMsMEJBQWQ7QUFDQWQsRUFBQUEsT0FBTyxDQUFDZSxJQUFSLENBQWEsQ0FBYjtBQUNEOztBQUVEcEIscUJBQVNxQixPQUFULENBQWlCaEIsT0FBTyxDQUFDQyxHQUFSLENBQVlXLFNBQTdCLEVBQXdDO0FBQUVLLEVBQUFBLGNBQWMsRUFBRSxLQUFsQjtBQUF5QkMsRUFBQUEsZUFBZSxFQUFFLElBQTFDO0FBQWdEQyxFQUFBQSxhQUFhLEVBQUUsSUFBL0Q7QUFBcUVDLEVBQUFBLGdCQUFnQixFQUFFO0FBQXZGLENBQXhDOztBQUNBLElBQUlwQixPQUFPLENBQUNDLEdBQVIsQ0FBWVUsUUFBWixLQUF5QixhQUE3QixFQUE0Q2hCLHFCQUFTMEIsR0FBVCxDQUFhLE9BQWIsRUFBc0IsSUFBdEI7QUFFNUN2QixHQUFHLENBQUN3QixNQUFKLENBQVd2QixJQUFYLEVBQWlCLFlBQU07QUFDckJjLEVBQUFBLE9BQU8sQ0FBQ1UsR0FBUixrQ0FBc0N4QixJQUF0QztBQUNELENBRkQiLCJzb3VyY2VSb290IjoiL2FwcC9zcmMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJ1xuaW1wb3J0IG1vcmdhbiBmcm9tICdtb3JnYW4nXG5pbXBvcnQgY29ycyBmcm9tICdjb3JzJ1xuaW1wb3J0IGhlbG1ldCBmcm9tICdoZWxtZXQnXG5pbXBvcnQgYm9keVBhcnNlciBmcm9tICdib2R5LXBhcnNlcidcbmltcG9ydCBtb25nb29zZSBmcm9tICdtb25nb29zZSdcbmltcG9ydCAnLi9hd3MnXG4vLyBpbXBvcnQgJy4vcmVkaXMnXG5cbmltcG9ydCBjb25maWd1cmVSb3V0ZXMgZnJvbSAnLi9yb3V0ZXMnXG5pbXBvcnQgeyBiaW5kQ3VycmVudE5hbWVzcGFjZSwgc2V0Q3VycmVudFRlbmFudElkIH0gZnJvbSAnLi9saWIvc3RvcmFnZSdcbmltcG9ydCAnLi9tb2RlbHMnXG5pbXBvcnQgeyBwYWdpbmF0aW9uIH0gZnJvbSAnLi9taWRkbGV3YXJlcy9wYWdpbmF0aW9uJztcblxubW9uZ29vc2UuUHJvbWlzZSA9IGdsb2JhbC5Qcm9taXNlXG5jb25zdCBhcHAgPSBleHByZXNzKClcbmNvbnN0IFBPUlQgPSBwcm9jZXNzLmVudi5QT1JUIHx8IDMwMDBcblxuYXBwLnVzZShiaW5kQ3VycmVudE5hbWVzcGFjZSlcbmFwcC51c2UoY29ycygpKVxuYXBwLnVzZShoZWxtZXQoKSlcbmFwcC51c2UoYm9keVBhcnNlci51cmxlbmNvZGVkKHsgZXh0ZW5kZWQ6IGZhbHNlIH0pKVxuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSlcbmFwcC51c2UocGFnaW5hdGlvbih7IHBhZ2U6IDEsIGxpbWl0OiAyNSwgbWF4TGltaXQ6IDEwMCB9KSlcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ2RldmVsb3BtZW50JykgYXBwLnVzZShtb3JnYW4oJ2RldicpKVxuXG5jb25maWd1cmVSb3V0ZXMoYXBwKVxuXG5pZiAoIXByb2Nlc3MuZW52Lk1PTkdPX1VSSSkge1xuICBjb25zb2xlLmVycm9yKCdFTlY9TU9OR09fVVJJIGlzIG5vdCBzZXQnKVxuICBwcm9jZXNzLmV4aXQoMClcbn1cblxubW9uZ29vc2UuY29ubmVjdChwcm9jZXNzLmVudi5NT05HT19VUkksIHsgdXNlQ3JlYXRlSW5kZXg6IGZhbHNlLCB1c2VOZXdVcmxQYXJzZXI6IHRydWUsIGF1dG9SZWNvbm5lY3Q6IHRydWUsIHVzZUZpbmRBbmRNb2RpZnk6IGZhbHNlIH0pXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdkZXZlbG9wbWVudCcpIG1vbmdvb3NlLnNldCgnZGVidWcnLCB0cnVlKVxuXG5hcHAubGlzdGVuKFBPUlQsICgpID0+IHtcbiAgY29uc29sZS5sb2coYFNlcnZlciBzdGFydGVkIG9uIHBvcnQgJHtQT1JUfWApXG59KVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "mongoose",
        "Promise",
        "global",
        "app",
        "PORT",
        "process",
        "env",
        "use",
        "bindCurrentNamespace",
        "bodyParser",
        "urlencoded",
        "extended",
        "json",
        "page",
        "limit",
        "maxLimit",
        "NODE_ENV",
        "MONGO_URI",
        "console",
        "error",
        "exit",
        "connect",
        "useCreateIndex",
        "useNewUrlParser",
        "autoReconnect",
        "useFindAndModify",
        "set",
        "listen",
        "log"
      ],
      "mappings": ";;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAGA;;AACA;;AACA;;AACA;;AALA;AAOAA,qBAASC,OAAT,GAAmBC,MAAM,CAACD,OAA1B;AACA,IAAME,GAAG,GAAG,0BAAZ;AACA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC;AAEAD,GAAG,CAACI,GAAJ,CAAQC,6BAAR;AACAL,GAAG,CAACI,GAAJ,CAAQ,uBAAR;AACAJ,GAAG,CAACI,GAAJ,CAAQ,yBAAR;AACAJ,GAAG,CAACI,GAAJ,CAAQE,uBAAWC,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AACAR,GAAG,CAACI,GAAJ,CAAQE,uBAAWG,IAAX,EAAR;AACAT,GAAG,CAACI,GAAJ,CAAQ,4BAAW;AAAEM,EAAAA,IAAI,EAAE,CAAR;AAAWC,EAAAA,KAAK,EAAE,EAAlB;AAAsBC,EAAAA,QAAQ,EAAE;AAAhC,CAAX,CAAR;AACA,IAAIV,OAAO,CAACC,GAAR,CAAYU,QAAZ,KAAyB,aAA7B,EAA4Cb,GAAG,CAACI,GAAJ,CAAQ,wBAAO,KAAP,CAAR;AAE5C,wBAAgBJ,GAAhB;;AAEA,IAAI,CAACE,OAAO,CAACC,GAAR,CAAYW,SAAjB,EAA4B;AAC1BC,EAAAA,OAAO,CAACC,KAAR,CAAc,0BAAd;AACAd,EAAAA,OAAO,CAACe,IAAR,CAAa,CAAb;AACD;;AAEDpB,qBAASqB,OAAT,CAAiBhB,OAAO,CAACC,GAAR,CAAYW,SAA7B,EAAwC;AAAEK,EAAAA,cAAc,EAAE,KAAlB;AAAyBC,EAAAA,eAAe,EAAE,IAA1C;AAAgDC,EAAAA,aAAa,EAAE,IAA/D;AAAqEC,EAAAA,gBAAgB,EAAE;AAAvF,CAAxC;;AACA,IAAIpB,OAAO,CAACC,GAAR,CAAYU,QAAZ,KAAyB,aAA7B,EAA4ChB,qBAAS0B,GAAT,CAAa,OAAb,EAAsB,IAAtB;AAE5CvB,GAAG,CAACwB,MAAJ,CAAWvB,IAAX,EAAiB,YAAM;AACrBc,EAAAA,OAAO,CAACU,GAAR,kCAAsCxB,IAAtC;AACD,CAFD",
      "sourceRoot": "/app/src",
      "sourcesContent": [
        "import express from 'express'\nimport morgan from 'morgan'\nimport cors from 'cors'\nimport helmet from 'helmet'\nimport bodyParser from 'body-parser'\nimport mongoose from 'mongoose'\nimport './aws'\n// import './redis'\n\nimport configureRoutes from './routes'\nimport { bindCurrentNamespace, setCurrentTenantId } from './lib/storage'\nimport './models'\nimport { pagination } from './middlewares/pagination';\n\nmongoose.Promise = global.Promise\nconst app = express()\nconst PORT = process.env.PORT || 3000\n\napp.use(bindCurrentNamespace)\napp.use(cors())\napp.use(helmet())\napp.use(bodyParser.urlencoded({ extended: false }))\napp.use(bodyParser.json())\napp.use(pagination({ page: 1, limit: 25, maxLimit: 100 }))\nif (process.env.NODE_ENV === 'development') app.use(morgan('dev'))\n\nconfigureRoutes(app)\n\nif (!process.env.MONGO_URI) {\n  console.error('ENV=MONGO_URI is not set')\n  process.exit(0)\n}\n\nmongoose.connect(process.env.MONGO_URI, { useCreateIndex: false, useNewUrlParser: true, autoReconnect: true, useFindAndModify: false })\nif (process.env.NODE_ENV === 'development') mongoose.set('debug', true)\n\napp.listen(PORT, () => {\n  console.log(`Server started on port ${PORT}`)\n})\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573021617939
  },
  "{\"sourceRoot\":\"/app/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/aws.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/aws.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/aws.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/aws.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src",
        "sourceFileName": "aws.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _awsSdk = _interopRequireDefault(require(\"aws-sdk\"));\n\n_awsSdk[\"default\"].config.update({\n  region: process.env.AWSRegion,\n  credentials: {\n    accessKeyId: process.env.AWSAccessKeyId,\n    secretAccessKey: process.env.AWSSecretKey\n  }\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF3cy5qcyJdLCJuYW1lcyI6WyJBV1MiLCJjb25maWciLCJ1cGRhdGUiLCJyZWdpb24iLCJwcm9jZXNzIiwiZW52IiwiQVdTUmVnaW9uIiwiY3JlZGVudGlhbHMiLCJhY2Nlc3NLZXlJZCIsIkFXU0FjY2Vzc0tleUlkIiwic2VjcmV0QWNjZXNzS2V5IiwiQVdTU2VjcmV0S2V5Il0sIm1hcHBpbmdzIjoiOzs7O0FBQUE7O0FBRUFBLG1CQUFJQyxNQUFKLENBQVdDLE1BQVgsQ0FBa0I7QUFDaEJDLEVBQUFBLE1BQU0sRUFBRUMsT0FBTyxDQUFDQyxHQUFSLENBQVlDLFNBREo7QUFFaEJDLEVBQUFBLFdBQVcsRUFBRTtBQUNYQyxJQUFBQSxXQUFXLEVBQUVKLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSSxjQURkO0FBRVhDLElBQUFBLGVBQWUsRUFBRU4sT0FBTyxDQUFDQyxHQUFSLENBQVlNO0FBRmxCO0FBRkcsQ0FBbEIiLCJzb3VyY2VSb290IjoiL2FwcC9zcmMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQVdTIGZyb20gJ2F3cy1zZGsnXG5cbkFXUy5jb25maWcudXBkYXRlKHtcbiAgcmVnaW9uOiBwcm9jZXNzLmVudi5BV1NSZWdpb24sXG4gIGNyZWRlbnRpYWxzOiB7XG4gICAgYWNjZXNzS2V5SWQ6IHByb2Nlc3MuZW52LkFXU0FjY2Vzc0tleUlkLFxuICAgIHNlY3JldEFjY2Vzc0tleTogcHJvY2Vzcy5lbnYuQVdTU2VjcmV0S2V5XG4gIH1cbn0pXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "aws.js"
      ],
      "names": [
        "AWS",
        "config",
        "update",
        "region",
        "process",
        "env",
        "AWSRegion",
        "credentials",
        "accessKeyId",
        "AWSAccessKeyId",
        "secretAccessKey",
        "AWSSecretKey"
      ],
      "mappings": ";;;;AAAA;;AAEAA,mBAAIC,MAAJ,CAAWC,MAAX,CAAkB;AAChBC,EAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC,SADJ;AAEhBC,EAAAA,WAAW,EAAE;AACXC,IAAAA,WAAW,EAAEJ,OAAO,CAACC,GAAR,CAAYI,cADd;AAEXC,IAAAA,eAAe,EAAEN,OAAO,CAACC,GAAR,CAAYM;AAFlB;AAFG,CAAlB",
      "sourceRoot": "/app/src",
      "sourcesContent": [
        "import AWS from 'aws-sdk'\n\nAWS.config.update({\n  region: process.env.AWSRegion,\n  credentials: {\n    accessKeyId: process.env.AWSAccessKeyId,\n    secretAccessKey: process.env.AWSSecretKey\n  }\n})\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573021617935
  },
  "{\"sourceRoot\":\"/app/src/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/routes/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/routes/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/routes/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/routes/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/routes",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _users = _interopRequireDefault(require(\"./users\"));\n\nvar _roles = _interopRequireDefault(require(\"./roles\"));\n\nvar _employees = _interopRequireDefault(require(\"./employees\"));\n\nvar _stores = _interopRequireDefault(require(\"./stores\"));\n\nvar _colors = _interopRequireDefault(require(\"./colors\"));\n\nvar _manufacturer = _interopRequireDefault(require(\"./manufacturer\"));\n\nvar _devices = _interopRequireDefault(require(\"./devices\"));\n\nvar _productCategories = _interopRequireDefault(require(\"./productCategories\"));\n\nvar _repairCategories = _interopRequireDefault(require(\"./repairCategories\"));\n\nvar _vendor = _interopRequireDefault(require(\"./vendor\"));\n\nvar _physicalLocations = _interopRequireDefault(require(\"./physicalLocations\"));\n\nvar _storage = _interopRequireDefault(require(\"./storage\"));\n\nvar _inventory = _interopRequireDefault(require(\"./inventory\"));\n\nvar _clients = _interopRequireDefault(require(\"./clients\"));\n\nvar _taxes = _interopRequireDefault(require(\"./taxes\"));\n\nvar _estimates = _interopRequireDefault(require(\"./estimates\"));\n\nvar _invoices = _interopRequireDefault(require(\"./invoices\"));\n\nvar _job = _interopRequireDefault(require(\"./job\"));\n\nvar _auth = require(\"../middlewares/auth\");\n\nvar configureRoutes = function configureRoutes(app) {\n  app.use('/users', _users[\"default\"]);\n  app.use('/roles', _auth.authenticate, (0, _auth.authorize)(), _roles[\"default\"]);\n  app.use('/employees', _auth.authenticate, (0, _auth.authorize)(), _employees[\"default\"]);\n  app.use('/stores', _auth.authenticate, (0, _auth.authorize)(), _stores[\"default\"]);\n  app.use('/manufacturers', _auth.authenticate, (0, _auth.authorize)(), _manufacturer[\"default\"]);\n  app.use('/colors', _auth.authenticate, (0, _auth.authorize)(), _colors[\"default\"]);\n  app.use('/devices', _auth.authenticate, (0, _auth.authorize)(), _devices[\"default\"]);\n  app.use('/product_categories', _auth.authenticate, (0, _auth.authorize)(), _productCategories[\"default\"]);\n  app.use('/repair_categories', _auth.authenticate, (0, _auth.authorize)(), _repairCategories[\"default\"]);\n  app.use('/vendors', _auth.authenticate, (0, _auth.authorize)(), _vendor[\"default\"]);\n  app.use('/physical_locations', _auth.authenticate, (0, _auth.authorize)(), _physicalLocations[\"default\"]);\n  app.use('/storage', _auth.authenticate, _storage[\"default\"]);\n  app.use('/inventories', _auth.authenticate, (0, _auth.authorize)(), _inventory[\"default\"]);\n  app.use('/clients', _auth.authenticate, (0, _auth.authorize)(), _clients[\"default\"]);\n  app.use('/taxes', _auth.authenticate, (0, _auth.authorize)(), _taxes[\"default\"]);\n  app.use('/estimates', _auth.authenticate, (0, _auth.authorize)(), _estimates[\"default\"]);\n  app.use('/invoices', _auth.authenticate, (0, _auth.authorize)(), _invoices[\"default\"]);\n  app.use('/jobs', _auth.authenticate, (0, _auth.authorize)(), _job[\"default\"]);\n  app.use('*', function (req, res, next) {\n    return res.status(404).json({\n      error: true,\n      reason: 'ROUTE_NOT_FOUND'\n    });\n  });\n};\n\nvar _default = configureRoutes;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImNvbmZpZ3VyZVJvdXRlcyIsImFwcCIsInVzZSIsInVzZXJSb3V0ZXMiLCJhdXRoZW50aWNhdGUiLCJyb2xlUm91dGVzIiwiZW1wbG95ZWVSb3V0ZXMiLCJzdG9yZVJvdXRlcyIsIm1hbnVmYWN0dXJlclJvdXRlcyIsImNvbG9yUm91dGVzIiwiZGV2aWNlUm91dGVzIiwicHJvZHVjdENhdGVnb3JpZXNSb3V0ZXMiLCJyZXBhaXJDYXRlZ29yaWVzUm91dGVzIiwidmVuZG9yUm91dGVzIiwicGh5c2ljYWxMb2NhdGlvbnNSb3V0ZXMiLCJzdG9yYWdlUm91dGVzIiwiaW52ZW50b3J5Um91dGVzIiwiY2xpZW50c1JvdXRlcyIsInRheGVzUm91dGVzIiwiZXN0aW1hdGVzUm91dGVzIiwiaW52b2ljZXNSb3V0ZXMiLCJqb2JzUm91dGVzIiwicmVxIiwicmVzIiwibmV4dCIsInN0YXR1cyIsImpzb24iLCJlcnJvciIsInJlYXNvbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBRUEsSUFBTUEsZUFBZSxHQUFHLFNBQWxCQSxlQUFrQixDQUFBQyxHQUFHLEVBQUk7QUFDN0JBLEVBQUFBLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLFFBQVIsRUFBa0JDLGlCQUFsQjtBQUNBRixFQUFBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSxRQUFSLEVBQWtCRSxrQkFBbEIsRUFBZ0Msc0JBQWhDLEVBQTZDQyxpQkFBN0M7QUFDQUosRUFBQUEsR0FBRyxDQUFDQyxHQUFKLENBQVEsWUFBUixFQUFzQkUsa0JBQXRCLEVBQW9DLHNCQUFwQyxFQUFpREUscUJBQWpEO0FBQ0FMLEVBQUFBLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLFNBQVIsRUFBbUJFLGtCQUFuQixFQUFpQyxzQkFBakMsRUFBOENHLGtCQUE5QztBQUNBTixFQUFBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSxnQkFBUixFQUEwQkUsa0JBQTFCLEVBQXdDLHNCQUF4QyxFQUFxREksd0JBQXJEO0FBQ0FQLEVBQUFBLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLFNBQVIsRUFBbUJFLGtCQUFuQixFQUFpQyxzQkFBakMsRUFBOENLLGtCQUE5QztBQUNBUixFQUFBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSxVQUFSLEVBQW9CRSxrQkFBcEIsRUFBa0Msc0JBQWxDLEVBQStDTSxtQkFBL0M7QUFDQVQsRUFBQUEsR0FBRyxDQUFDQyxHQUFKLENBQVEscUJBQVIsRUFBK0JFLGtCQUEvQixFQUE2QyxzQkFBN0MsRUFBMERPLDZCQUExRDtBQUNBVixFQUFBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSxvQkFBUixFQUE4QkUsa0JBQTlCLEVBQTRDLHNCQUE1QyxFQUF5RFEsNEJBQXpEO0FBQ0FYLEVBQUFBLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLFVBQVIsRUFBb0JFLGtCQUFwQixFQUFrQyxzQkFBbEMsRUFBK0NTLGtCQUEvQztBQUNBWixFQUFBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSxxQkFBUixFQUErQkUsa0JBQS9CLEVBQTZDLHNCQUE3QyxFQUEwRFUsNkJBQTFEO0FBQ0FiLEVBQUFBLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLFVBQVIsRUFBb0JFLGtCQUFwQixFQUFrQ1csbUJBQWxDO0FBQ0FkLEVBQUFBLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLGNBQVIsRUFBd0JFLGtCQUF4QixFQUFzQyxzQkFBdEMsRUFBbURZLHFCQUFuRDtBQUNBZixFQUFBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSxVQUFSLEVBQW9CRSxrQkFBcEIsRUFBa0Msc0JBQWxDLEVBQStDYSxtQkFBL0M7QUFDQWhCLEVBQUFBLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLFFBQVIsRUFBa0JFLGtCQUFsQixFQUFnQyxzQkFBaEMsRUFBNkNjLGlCQUE3QztBQUNBakIsRUFBQUEsR0FBRyxDQUFDQyxHQUFKLENBQVEsWUFBUixFQUFzQkUsa0JBQXRCLEVBQW9DLHNCQUFwQyxFQUFpRGUscUJBQWpEO0FBQ0FsQixFQUFBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSxXQUFSLEVBQXFCRSxrQkFBckIsRUFBbUMsc0JBQW5DLEVBQWdEZ0Isb0JBQWhEO0FBQ0FuQixFQUFBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSxPQUFSLEVBQWlCRSxrQkFBakIsRUFBK0Isc0JBQS9CLEVBQTRDaUIsZUFBNUM7QUFFQXBCLEVBQUFBLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLEdBQVIsRUFBYSxVQUFDb0IsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsRUFBb0I7QUFDL0IsV0FBT0QsR0FBRyxDQUFDRSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFBRUMsTUFBQUEsS0FBSyxFQUFFLElBQVQ7QUFBZUMsTUFBQUEsTUFBTSxFQUFFO0FBQXZCLEtBQXJCLENBQVA7QUFDRCxHQUZEO0FBR0QsQ0F2QkQ7O2VBeUJlNUIsZSIsInNvdXJjZVJvb3QiOiIvYXBwL3NyYy9yb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdXNlclJvdXRlcyBmcm9tICcuL3VzZXJzJ1xuaW1wb3J0IHJvbGVSb3V0ZXMgZnJvbSAnLi9yb2xlcydcbmltcG9ydCBlbXBsb3llZVJvdXRlcyBmcm9tICcuL2VtcGxveWVlcydcbmltcG9ydCBzdG9yZVJvdXRlcyBmcm9tICcuL3N0b3JlcydcbmltcG9ydCBjb2xvclJvdXRlcyBmcm9tICcuL2NvbG9ycydcbmltcG9ydCBtYW51ZmFjdHVyZXJSb3V0ZXMgZnJvbSAnLi9tYW51ZmFjdHVyZXInXG5pbXBvcnQgZGV2aWNlUm91dGVzIGZyb20gJy4vZGV2aWNlcydcbmltcG9ydCBwcm9kdWN0Q2F0ZWdvcmllc1JvdXRlcyBmcm9tICcuL3Byb2R1Y3RDYXRlZ29yaWVzJ1xuaW1wb3J0IHJlcGFpckNhdGVnb3JpZXNSb3V0ZXMgZnJvbSAnLi9yZXBhaXJDYXRlZ29yaWVzJ1xuaW1wb3J0IHZlbmRvclJvdXRlcyBmcm9tICcuL3ZlbmRvcidcbmltcG9ydCBwaHlzaWNhbExvY2F0aW9uc1JvdXRlcyBmcm9tICcuL3BoeXNpY2FsTG9jYXRpb25zJ1xuaW1wb3J0IHN0b3JhZ2VSb3V0ZXMgZnJvbSAnLi9zdG9yYWdlJ1xuaW1wb3J0IGludmVudG9yeVJvdXRlcyBmcm9tICcuL2ludmVudG9yeSdcbmltcG9ydCBjbGllbnRzUm91dGVzIGZyb20gJy4vY2xpZW50cydcbmltcG9ydCB0YXhlc1JvdXRlcyBmcm9tICcuL3RheGVzJ1xuaW1wb3J0IGVzdGltYXRlc1JvdXRlcyBmcm9tICcuL2VzdGltYXRlcydcbmltcG9ydCBpbnZvaWNlc1JvdXRlcyBmcm9tICcuL2ludm9pY2VzJ1xuaW1wb3J0IGpvYnNSb3V0ZXMgZnJvbSAnLi9qb2InXG5pbXBvcnQgeyBhdXRoZW50aWNhdGUsIGF1dGhvcml6ZSB9IGZyb20gJy4uL21pZGRsZXdhcmVzL2F1dGgnXG5cbmNvbnN0IGNvbmZpZ3VyZVJvdXRlcyA9IGFwcCA9PiB7XG4gIGFwcC51c2UoJy91c2VycycsIHVzZXJSb3V0ZXMpXG4gIGFwcC51c2UoJy9yb2xlcycsIGF1dGhlbnRpY2F0ZSwgYXV0aG9yaXplKCksIHJvbGVSb3V0ZXMpXG4gIGFwcC51c2UoJy9lbXBsb3llZXMnLCBhdXRoZW50aWNhdGUsIGF1dGhvcml6ZSgpLCBlbXBsb3llZVJvdXRlcylcbiAgYXBwLnVzZSgnL3N0b3JlcycsIGF1dGhlbnRpY2F0ZSwgYXV0aG9yaXplKCksIHN0b3JlUm91dGVzKVxuICBhcHAudXNlKCcvbWFudWZhY3R1cmVycycsIGF1dGhlbnRpY2F0ZSwgYXV0aG9yaXplKCksIG1hbnVmYWN0dXJlclJvdXRlcylcbiAgYXBwLnVzZSgnL2NvbG9ycycsIGF1dGhlbnRpY2F0ZSwgYXV0aG9yaXplKCksIGNvbG9yUm91dGVzKVxuICBhcHAudXNlKCcvZGV2aWNlcycsIGF1dGhlbnRpY2F0ZSwgYXV0aG9yaXplKCksIGRldmljZVJvdXRlcylcbiAgYXBwLnVzZSgnL3Byb2R1Y3RfY2F0ZWdvcmllcycsIGF1dGhlbnRpY2F0ZSwgYXV0aG9yaXplKCksIHByb2R1Y3RDYXRlZ29yaWVzUm91dGVzKVxuICBhcHAudXNlKCcvcmVwYWlyX2NhdGVnb3JpZXMnLCBhdXRoZW50aWNhdGUsIGF1dGhvcml6ZSgpLCByZXBhaXJDYXRlZ29yaWVzUm91dGVzKVxuICBhcHAudXNlKCcvdmVuZG9ycycsIGF1dGhlbnRpY2F0ZSwgYXV0aG9yaXplKCksIHZlbmRvclJvdXRlcylcbiAgYXBwLnVzZSgnL3BoeXNpY2FsX2xvY2F0aW9ucycsIGF1dGhlbnRpY2F0ZSwgYXV0aG9yaXplKCksIHBoeXNpY2FsTG9jYXRpb25zUm91dGVzKVxuICBhcHAudXNlKCcvc3RvcmFnZScsIGF1dGhlbnRpY2F0ZSwgc3RvcmFnZVJvdXRlcylcbiAgYXBwLnVzZSgnL2ludmVudG9yaWVzJywgYXV0aGVudGljYXRlLCBhdXRob3JpemUoKSwgaW52ZW50b3J5Um91dGVzKVxuICBhcHAudXNlKCcvY2xpZW50cycsIGF1dGhlbnRpY2F0ZSwgYXV0aG9yaXplKCksIGNsaWVudHNSb3V0ZXMpXG4gIGFwcC51c2UoJy90YXhlcycsIGF1dGhlbnRpY2F0ZSwgYXV0aG9yaXplKCksIHRheGVzUm91dGVzKVxuICBhcHAudXNlKCcvZXN0aW1hdGVzJywgYXV0aGVudGljYXRlLCBhdXRob3JpemUoKSwgZXN0aW1hdGVzUm91dGVzKVxuICBhcHAudXNlKCcvaW52b2ljZXMnLCBhdXRoZW50aWNhdGUsIGF1dGhvcml6ZSgpLCBpbnZvaWNlc1JvdXRlcylcbiAgYXBwLnVzZSgnL2pvYnMnLCBhdXRoZW50aWNhdGUsIGF1dGhvcml6ZSgpLCBqb2JzUm91dGVzKVxuXG4gIGFwcC51c2UoJyonLCAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDQpLmpzb24oeyBlcnJvcjogdHJ1ZSwgcmVhc29uOiAnUk9VVEVfTk9UX0ZPVU5EJyB9KVxuICB9KVxufVxuXG5leHBvcnQgZGVmYXVsdCBjb25maWd1cmVSb3V0ZXNcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "configureRoutes",
        "app",
        "use",
        "userRoutes",
        "authenticate",
        "roleRoutes",
        "employeeRoutes",
        "storeRoutes",
        "manufacturerRoutes",
        "colorRoutes",
        "deviceRoutes",
        "productCategoriesRoutes",
        "repairCategoriesRoutes",
        "vendorRoutes",
        "physicalLocationsRoutes",
        "storageRoutes",
        "inventoryRoutes",
        "clientsRoutes",
        "taxesRoutes",
        "estimatesRoutes",
        "invoicesRoutes",
        "jobsRoutes",
        "req",
        "res",
        "next",
        "status",
        "json",
        "error",
        "reason"
      ],
      "mappings": ";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,GAAG,EAAI;AAC7BA,EAAAA,GAAG,CAACC,GAAJ,CAAQ,QAAR,EAAkBC,iBAAlB;AACAF,EAAAA,GAAG,CAACC,GAAJ,CAAQ,QAAR,EAAkBE,kBAAlB,EAAgC,sBAAhC,EAA6CC,iBAA7C;AACAJ,EAAAA,GAAG,CAACC,GAAJ,CAAQ,YAAR,EAAsBE,kBAAtB,EAAoC,sBAApC,EAAiDE,qBAAjD;AACAL,EAAAA,GAAG,CAACC,GAAJ,CAAQ,SAAR,EAAmBE,kBAAnB,EAAiC,sBAAjC,EAA8CG,kBAA9C;AACAN,EAAAA,GAAG,CAACC,GAAJ,CAAQ,gBAAR,EAA0BE,kBAA1B,EAAwC,sBAAxC,EAAqDI,wBAArD;AACAP,EAAAA,GAAG,CAACC,GAAJ,CAAQ,SAAR,EAAmBE,kBAAnB,EAAiC,sBAAjC,EAA8CK,kBAA9C;AACAR,EAAAA,GAAG,CAACC,GAAJ,CAAQ,UAAR,EAAoBE,kBAApB,EAAkC,sBAAlC,EAA+CM,mBAA/C;AACAT,EAAAA,GAAG,CAACC,GAAJ,CAAQ,qBAAR,EAA+BE,kBAA/B,EAA6C,sBAA7C,EAA0DO,6BAA1D;AACAV,EAAAA,GAAG,CAACC,GAAJ,CAAQ,oBAAR,EAA8BE,kBAA9B,EAA4C,sBAA5C,EAAyDQ,4BAAzD;AACAX,EAAAA,GAAG,CAACC,GAAJ,CAAQ,UAAR,EAAoBE,kBAApB,EAAkC,sBAAlC,EAA+CS,kBAA/C;AACAZ,EAAAA,GAAG,CAACC,GAAJ,CAAQ,qBAAR,EAA+BE,kBAA/B,EAA6C,sBAA7C,EAA0DU,6BAA1D;AACAb,EAAAA,GAAG,CAACC,GAAJ,CAAQ,UAAR,EAAoBE,kBAApB,EAAkCW,mBAAlC;AACAd,EAAAA,GAAG,CAACC,GAAJ,CAAQ,cAAR,EAAwBE,kBAAxB,EAAsC,sBAAtC,EAAmDY,qBAAnD;AACAf,EAAAA,GAAG,CAACC,GAAJ,CAAQ,UAAR,EAAoBE,kBAApB,EAAkC,sBAAlC,EAA+Ca,mBAA/C;AACAhB,EAAAA,GAAG,CAACC,GAAJ,CAAQ,QAAR,EAAkBE,kBAAlB,EAAgC,sBAAhC,EAA6Cc,iBAA7C;AACAjB,EAAAA,GAAG,CAACC,GAAJ,CAAQ,YAAR,EAAsBE,kBAAtB,EAAoC,sBAApC,EAAiDe,qBAAjD;AACAlB,EAAAA,GAAG,CAACC,GAAJ,CAAQ,WAAR,EAAqBE,kBAArB,EAAmC,sBAAnC,EAAgDgB,oBAAhD;AACAnB,EAAAA,GAAG,CAACC,GAAJ,CAAQ,OAAR,EAAiBE,kBAAjB,EAA+B,sBAA/B,EAA4CiB,eAA5C;AAEApB,EAAAA,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAa,UAACoB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC/B,WAAOD,GAAG,CAACE,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,KAAK,EAAE,IAAT;AAAeC,MAAAA,MAAM,EAAE;AAAvB,KAArB,CAAP;AACD,GAFD;AAGD,CAvBD;;eAyBe5B,e",
      "sourceRoot": "/app/src/routes",
      "sourcesContent": [
        "import userRoutes from './users'\nimport roleRoutes from './roles'\nimport employeeRoutes from './employees'\nimport storeRoutes from './stores'\nimport colorRoutes from './colors'\nimport manufacturerRoutes from './manufacturer'\nimport deviceRoutes from './devices'\nimport productCategoriesRoutes from './productCategories'\nimport repairCategoriesRoutes from './repairCategories'\nimport vendorRoutes from './vendor'\nimport physicalLocationsRoutes from './physicalLocations'\nimport storageRoutes from './storage'\nimport inventoryRoutes from './inventory'\nimport clientsRoutes from './clients'\nimport taxesRoutes from './taxes'\nimport estimatesRoutes from './estimates'\nimport invoicesRoutes from './invoices'\nimport jobsRoutes from './job'\nimport { authenticate, authorize } from '../middlewares/auth'\n\nconst configureRoutes = app => {\n  app.use('/users', userRoutes)\n  app.use('/roles', authenticate, authorize(), roleRoutes)\n  app.use('/employees', authenticate, authorize(), employeeRoutes)\n  app.use('/stores', authenticate, authorize(), storeRoutes)\n  app.use('/manufacturers', authenticate, authorize(), manufacturerRoutes)\n  app.use('/colors', authenticate, authorize(), colorRoutes)\n  app.use('/devices', authenticate, authorize(), deviceRoutes)\n  app.use('/product_categories', authenticate, authorize(), productCategoriesRoutes)\n  app.use('/repair_categories', authenticate, authorize(), repairCategoriesRoutes)\n  app.use('/vendors', authenticate, authorize(), vendorRoutes)\n  app.use('/physical_locations', authenticate, authorize(), physicalLocationsRoutes)\n  app.use('/storage', authenticate, storageRoutes)\n  app.use('/inventories', authenticate, authorize(), inventoryRoutes)\n  app.use('/clients', authenticate, authorize(), clientsRoutes)\n  app.use('/taxes', authenticate, authorize(), taxesRoutes)\n  app.use('/estimates', authenticate, authorize(), estimatesRoutes)\n  app.use('/invoices', authenticate, authorize(), invoicesRoutes)\n  app.use('/jobs', authenticate, authorize(), jobsRoutes)\n\n  app.use('*', (req, res, next) => {\n    return res.status(404).json({ error: true, reason: 'ROUTE_NOT_FOUND' })\n  })\n}\n\nexport default configureRoutes\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1575001852214
  },
  "{\"sourceRoot\":\"/app/src/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/routes/users.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/routes/users.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/routes/users.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/routes/users.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/routes",
        "sourceFileName": "users.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _business = _interopRequireDefault(require(\"../models/business\"));\n\nvar _user = _interopRequireDefault(require(\"../models/user\"));\n\nvar _role = _interopRequireDefault(require(\"../models/role\"));\n\nvar _permission = _interopRequireDefault(require(\"../models/permission\"));\n\nvar _user2 = require(\"../controllers/user\");\n\nvar _auth = require(\"../middlewares/auth\");\n\nvar router = (0, _express.Router)();\nrouter.post('/login', _user2.loginController);\nrouter.post('/register', _user2.registerController);\nrouter.get('/verify/:token', _user2.verifyAccount);\nrouter.post('/update', _auth.authenticate, _user2.updateUser);\nrouter.get('/profile/me', _auth.authenticate, _user2.getUserProfile);\nrouter.post('/profile/me/update', _auth.authenticate, _user2.updateUserProfile);\nrouter.post('/profile/update_password', _auth.authenticate, _user2.updateUserPassword);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJzLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsInBvc3QiLCJsb2dpbkNvbnRyb2xsZXIiLCJyZWdpc3RlckNvbnRyb2xsZXIiLCJnZXQiLCJ2ZXJpZnlBY2NvdW50IiwiYXV0aGVudGljYXRlIiwidXBkYXRlVXNlciIsImdldFVzZXJQcm9maWxlIiwidXBkYXRlVXNlclByb2ZpbGUiLCJ1cGRhdGVVc2VyUGFzc3dvcmQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUVBLElBQU1BLE1BQU0sR0FBRyxzQkFBZjtBQUVBQSxNQUFNLENBQUNDLElBQVAsQ0FBWSxRQUFaLEVBQXNCQyxzQkFBdEI7QUFDQUYsTUFBTSxDQUFDQyxJQUFQLENBQVksV0FBWixFQUF5QkUseUJBQXpCO0FBQ0FILE1BQU0sQ0FBQ0ksR0FBUCxDQUFXLGdCQUFYLEVBQTZCQyxvQkFBN0I7QUFDQUwsTUFBTSxDQUFDQyxJQUFQLENBQVksU0FBWixFQUF1Qkssa0JBQXZCLEVBQXFDQyxpQkFBckM7QUFDQVAsTUFBTSxDQUFDSSxHQUFQLENBQVcsYUFBWCxFQUEwQkUsa0JBQTFCLEVBQXdDRSxxQkFBeEM7QUFDQVIsTUFBTSxDQUFDQyxJQUFQLENBQVksb0JBQVosRUFBa0NLLGtCQUFsQyxFQUFnREcsd0JBQWhEO0FBQ0FULE1BQU0sQ0FBQ0MsSUFBUCxDQUFZLDBCQUFaLEVBQXdDSyxrQkFBeEMsRUFBc0RJLHlCQUF0RDtlQUVlVixNIiwic291cmNlUm9vdCI6Ii9hcHAvc3JjL3JvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJvdXRlciB9IGZyb20gJ2V4cHJlc3MnXG5pbXBvcnQgX0J1c2luZXNzTW9kZWwgZnJvbSAnLi4vbW9kZWxzL2J1c2luZXNzJ1xuaW1wb3J0IF9Vc2VyTW9kZWwgZnJvbSAnLi4vbW9kZWxzL3VzZXInXG5pbXBvcnQgX1JvbGVNb2RlbCBmcm9tICcuLi9tb2RlbHMvcm9sZSdcbmltcG9ydCBfUGVybWlzc2lvbk1vZGVsIGZyb20gJy4uL21vZGVscy9wZXJtaXNzaW9uJ1xuaW1wb3J0IHsgbG9naW5Db250cm9sbGVyLCByZWdpc3RlckNvbnRyb2xsZXIsIHZlcmlmeUFjY291bnQsIHVwZGF0ZVVzZXIsIGdldFVzZXJQcm9maWxlLCB1cGRhdGVVc2VyUHJvZmlsZSwgdXBkYXRlVXNlclBhc3N3b3JkIH0gZnJvbSAnLi4vY29udHJvbGxlcnMvdXNlcidcbmltcG9ydCB7IGF1dGhlbnRpY2F0ZSB9IGZyb20gJy4uL21pZGRsZXdhcmVzL2F1dGgnXG5cbmNvbnN0IHJvdXRlciA9IFJvdXRlcigpXG5cbnJvdXRlci5wb3N0KCcvbG9naW4nLCBsb2dpbkNvbnRyb2xsZXIpXG5yb3V0ZXIucG9zdCgnL3JlZ2lzdGVyJywgcmVnaXN0ZXJDb250cm9sbGVyKVxucm91dGVyLmdldCgnL3ZlcmlmeS86dG9rZW4nLCB2ZXJpZnlBY2NvdW50KVxucm91dGVyLnBvc3QoJy91cGRhdGUnLCBhdXRoZW50aWNhdGUsIHVwZGF0ZVVzZXIpXG5yb3V0ZXIuZ2V0KCcvcHJvZmlsZS9tZScsIGF1dGhlbnRpY2F0ZSwgZ2V0VXNlclByb2ZpbGUpXG5yb3V0ZXIucG9zdCgnL3Byb2ZpbGUvbWUvdXBkYXRlJywgYXV0aGVudGljYXRlLCB1cGRhdGVVc2VyUHJvZmlsZSlcbnJvdXRlci5wb3N0KCcvcHJvZmlsZS91cGRhdGVfcGFzc3dvcmQnLCBhdXRoZW50aWNhdGUsIHVwZGF0ZVVzZXJQYXNzd29yZClcblxuZXhwb3J0IGRlZmF1bHQgcm91dGVyO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "users.js"
      ],
      "names": [
        "router",
        "post",
        "loginController",
        "registerController",
        "get",
        "verifyAccount",
        "authenticate",
        "updateUser",
        "getUserProfile",
        "updateUserProfile",
        "updateUserPassword"
      ],
      "mappings": ";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA,IAAMA,MAAM,GAAG,sBAAf;AAEAA,MAAM,CAACC,IAAP,CAAY,QAAZ,EAAsBC,sBAAtB;AACAF,MAAM,CAACC,IAAP,CAAY,WAAZ,EAAyBE,yBAAzB;AACAH,MAAM,CAACI,GAAP,CAAW,gBAAX,EAA6BC,oBAA7B;AACAL,MAAM,CAACC,IAAP,CAAY,SAAZ,EAAuBK,kBAAvB,EAAqCC,iBAArC;AACAP,MAAM,CAACI,GAAP,CAAW,aAAX,EAA0BE,kBAA1B,EAAwCE,qBAAxC;AACAR,MAAM,CAACC,IAAP,CAAY,oBAAZ,EAAkCK,kBAAlC,EAAgDG,wBAAhD;AACAT,MAAM,CAACC,IAAP,CAAY,0BAAZ,EAAwCK,kBAAxC,EAAsDI,yBAAtD;eAEeV,M",
      "sourceRoot": "/app/src/routes",
      "sourcesContent": [
        "import { Router } from 'express'\nimport _BusinessModel from '../models/business'\nimport _UserModel from '../models/user'\nimport _RoleModel from '../models/role'\nimport _PermissionModel from '../models/permission'\nimport { loginController, registerController, verifyAccount, updateUser, getUserProfile, updateUserProfile, updateUserPassword } from '../controllers/user'\nimport { authenticate } from '../middlewares/auth'\n\nconst router = Router()\n\nrouter.post('/login', loginController)\nrouter.post('/register', registerController)\nrouter.get('/verify/:token', verifyAccount)\nrouter.post('/update', authenticate, updateUser)\nrouter.get('/profile/me', authenticate, getUserProfile)\nrouter.post('/profile/me/update', authenticate, updateUserProfile)\nrouter.post('/profile/update_password', authenticate, updateUserPassword)\n\nexport default router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573021617947
  },
  "{\"sourceRoot\":\"/app/src/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/models/business.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/models/business.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/models/business.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/models/business.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/models",
        "sourceFileName": "business.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongoose = require(\"mongoose\");\n\nvar _multiTenant = require(\"../lib/multiTenant\");\n\nvar businessSchema = new _mongoose.Schema({\n  name: {\n    type: String,\n    required: true\n  },\n  email: {\n    type: String,\n    required: true\n  },\n  alternateName: {\n    type: String,\n    \"default\": ''\n  },\n  user: {\n    type: _mongoose.Schema.Types.ObjectId,\n    ref: 'User'\n  }\n}, {\n  timestamps: true,\n  skipVersioning: true\n});\n\nvar _default = (0, _multiTenant.tenantlessModel)('Business', businessSchema);\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJ1c2luZXNzLmpzIl0sIm5hbWVzIjpbImJ1c2luZXNzU2NoZW1hIiwiU2NoZW1hIiwibmFtZSIsInR5cGUiLCJTdHJpbmciLCJyZXF1aXJlZCIsImVtYWlsIiwiYWx0ZXJuYXRlTmFtZSIsInVzZXIiLCJUeXBlcyIsIk9iamVjdElkIiwicmVmIiwidGltZXN0YW1wcyIsInNraXBWZXJzaW9uaW5nIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBRUEsSUFBTUEsY0FBYyxHQUFHLElBQUlDLGdCQUFKLENBQVc7QUFDaENDLEVBQUFBLElBQUksRUFBRTtBQUNKQyxJQUFBQSxJQUFJLEVBQUVDLE1BREY7QUFFSkMsSUFBQUEsUUFBUSxFQUFFO0FBRk4sR0FEMEI7QUFLaENDLEVBQUFBLEtBQUssRUFBRTtBQUNMSCxJQUFBQSxJQUFJLEVBQUVDLE1BREQ7QUFFTEMsSUFBQUEsUUFBUSxFQUFFO0FBRkwsR0FMeUI7QUFTaENFLEVBQUFBLGFBQWEsRUFBRTtBQUNiSixJQUFBQSxJQUFJLEVBQUVDLE1BRE87QUFFYixlQUFTO0FBRkksR0FUaUI7QUFhaENJLEVBQUFBLElBQUksRUFBRTtBQUNKTCxJQUFBQSxJQUFJLEVBQUVGLGlCQUFPUSxLQUFQLENBQWFDLFFBRGY7QUFFSkMsSUFBQUEsR0FBRyxFQUFFO0FBRkQ7QUFiMEIsQ0FBWCxFQWlCcEI7QUFBRUMsRUFBQUEsVUFBVSxFQUFFLElBQWQ7QUFBb0JDLEVBQUFBLGNBQWMsRUFBRTtBQUFwQyxDQWpCb0IsQ0FBdkI7O2VBbUJlLGtDQUFnQixVQUFoQixFQUE0QmIsY0FBNUIsQyIsInNvdXJjZVJvb3QiOiIvYXBwL3NyYy9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTY2hlbWEgfSBmcm9tICdtb25nb29zZSdcbmltcG9ydCB7IHRlbmFudGxlc3NNb2RlbCB9IGZyb20gJy4uL2xpYi9tdWx0aVRlbmFudCdcblxuY29uc3QgYnVzaW5lc3NTY2hlbWEgPSBuZXcgU2NoZW1hKHtcbiAgbmFtZToge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgICByZXF1aXJlZDogdHJ1ZVxuICB9LFxuICBlbWFpbDoge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgICByZXF1aXJlZDogdHJ1ZVxuICB9LFxuICBhbHRlcm5hdGVOYW1lOiB7XG4gICAgdHlwZTogU3RyaW5nLFxuICAgIGRlZmF1bHQ6ICcnXG4gIH0sXG4gIHVzZXI6IHtcbiAgICB0eXBlOiBTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG4gICAgcmVmOiAnVXNlcidcbiAgfVxufSwgeyB0aW1lc3RhbXBzOiB0cnVlLCBza2lwVmVyc2lvbmluZzogdHJ1ZSB9KVxuXG5leHBvcnQgZGVmYXVsdCB0ZW5hbnRsZXNzTW9kZWwoJ0J1c2luZXNzJywgYnVzaW5lc3NTY2hlbWEpXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "business.js"
      ],
      "names": [
        "businessSchema",
        "Schema",
        "name",
        "type",
        "String",
        "required",
        "email",
        "alternateName",
        "user",
        "Types",
        "ObjectId",
        "ref",
        "timestamps",
        "skipVersioning"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AAEA,IAAMA,cAAc,GAAG,IAAIC,gBAAJ,CAAW;AAChCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAEC,MADF;AAEJC,IAAAA,QAAQ,EAAE;AAFN,GAD0B;AAKhCC,EAAAA,KAAK,EAAE;AACLH,IAAAA,IAAI,EAAEC,MADD;AAELC,IAAAA,QAAQ,EAAE;AAFL,GALyB;AAShCE,EAAAA,aAAa,EAAE;AACbJ,IAAAA,IAAI,EAAEC,MADO;AAEb,eAAS;AAFI,GATiB;AAahCI,EAAAA,IAAI,EAAE;AACJL,IAAAA,IAAI,EAAEF,iBAAOQ,KAAP,CAAaC,QADf;AAEJC,IAAAA,GAAG,EAAE;AAFD;AAb0B,CAAX,EAiBpB;AAAEC,EAAAA,UAAU,EAAE,IAAd;AAAoBC,EAAAA,cAAc,EAAE;AAApC,CAjBoB,CAAvB;;eAmBe,kCAAgB,UAAhB,EAA4Bb,cAA5B,C",
      "sourceRoot": "/app/src/models",
      "sourcesContent": [
        "import { Schema } from 'mongoose'\nimport { tenantlessModel } from '../lib/multiTenant'\n\nconst businessSchema = new Schema({\n  name: {\n    type: String,\n    required: true\n  },\n  email: {\n    type: String,\n    required: true\n  },\n  alternateName: {\n    type: String,\n    default: ''\n  },\n  user: {\n    type: Schema.Types.ObjectId,\n    ref: 'User'\n  }\n}, { timestamps: true, skipVersioning: true })\n\nexport default tenantlessModel('Business', businessSchema)\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573021617939
  },
  "{\"sourceRoot\":\"/app/src/lib\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/lib/multiTenant.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/lib",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/lib/multiTenant.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/lib/multiTenant.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/lib/multiTenant.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/lib",
        "sourceFileName": "multiTenant.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.tenantModel = tenantModel;\nexports.tenantlessModel = tenantlessModel;\n\nvar _mongoose = _interopRequireWildcard(require(\"mongoose\"));\n\nvar _storage = require(\"./storage\");\n\nvar _mongoosePaginateV = _interopRequireDefault(require(\"mongoose-paginate-v2\"));\n\nvar _paginationLabels = _interopRequireDefault(require(\"../constants/paginationLabels\"));\n\n_mongoosePaginateV[\"default\"].paginate.options = {\n  customLabels: _paginationLabels[\"default\"]\n};\n\nfunction tenantModel(name, schema, options) {\n  schema.plugin(_mongoosePaginateV[\"default\"]);\n  return function () {\n    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    schema.add({\n      tenantId: String\n    });\n\n    var Model = _mongoose[\"default\"].model(name, schema, options);\n\n    var skipTenant = props.skipTenant;\n    var tenantId = (0, _storage.getCurrentTenantId)();\n    if (!tenantId || skipTenant) return Model;\n    Model.schema.set('discriminatorKey', 'tenantId');\n    var discriminatorName = name + '-' + tenantId;\n    var existingDiscriminator = (Model.discriminators || {})[discriminatorName];\n    return existingDiscriminator || Model.discriminator(discriminatorName, new _mongoose.Schema({}), \"\".concat(tenantId));\n  };\n}\n\nfunction tenantlessModel(name, schema, options) {\n  schema.plugin(_mongoosePaginateV[\"default\"]);\n  return function () {\n    return _mongoose[\"default\"].model(name, schema, options);\n  };\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm11bHRpVGVuYW50LmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlUGFnaW5hdGUiLCJwYWdpbmF0ZSIsIm9wdGlvbnMiLCJjdXN0b21MYWJlbHMiLCJ0ZW5hbnRNb2RlbCIsIm5hbWUiLCJzY2hlbWEiLCJwbHVnaW4iLCJwcm9wcyIsImFkZCIsInRlbmFudElkIiwiU3RyaW5nIiwiTW9kZWwiLCJtb25nb29zZSIsIm1vZGVsIiwic2tpcFRlbmFudCIsInNldCIsImRpc2NyaW1pbmF0b3JOYW1lIiwiZXhpc3RpbmdEaXNjcmltaW5hdG9yIiwiZGlzY3JpbWluYXRvcnMiLCJkaXNjcmltaW5hdG9yIiwiU2NoZW1hIiwidGVuYW50bGVzc01vZGVsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQUEsOEJBQWlCQyxRQUFqQixDQUEwQkMsT0FBMUIsR0FBb0M7QUFDbENDLEVBQUFBLFlBQVksRUFBWkE7QUFEa0MsQ0FBcEM7O0FBSU8sU0FBU0MsV0FBVCxDQUFxQkMsSUFBckIsRUFBMkJDLE1BQTNCLEVBQW1DSixPQUFuQyxFQUE0QztBQUNqREksRUFBQUEsTUFBTSxDQUFDQyxNQUFQLENBQWNQLDZCQUFkO0FBRUEsU0FBTyxZQUFnQjtBQUFBLFFBQWZRLEtBQWUsdUVBQVAsRUFBTztBQUNyQkYsSUFBQUEsTUFBTSxDQUFDRyxHQUFQLENBQVc7QUFBRUMsTUFBQUEsUUFBUSxFQUFFQztBQUFaLEtBQVg7O0FBQ0EsUUFBTUMsS0FBSyxHQUFHQyxxQkFBU0MsS0FBVCxDQUFlVCxJQUFmLEVBQXFCQyxNQUFyQixFQUE2QkosT0FBN0IsQ0FBZDs7QUFGcUIsUUFJYmEsVUFKYSxHQUlFUCxLQUpGLENBSWJPLFVBSmE7QUFLckIsUUFBTUwsUUFBUSxHQUFHLGtDQUFqQjtBQUNBLFFBQUksQ0FBQ0EsUUFBRCxJQUFhSyxVQUFqQixFQUE2QixPQUFPSCxLQUFQO0FBRTdCQSxJQUFBQSxLQUFLLENBQUNOLE1BQU4sQ0FBYVUsR0FBYixDQUFpQixrQkFBakIsRUFBcUMsVUFBckM7QUFFQSxRQUFNQyxpQkFBaUIsR0FBR1osSUFBSSxHQUFHLEdBQVAsR0FBYUssUUFBdkM7QUFDQSxRQUFNUSxxQkFBcUIsR0FBRyxDQUFDTixLQUFLLENBQUNPLGNBQU4sSUFBd0IsRUFBekIsRUFBNkJGLGlCQUE3QixDQUE5QjtBQUNBLFdBQU9DLHFCQUFxQixJQUFJTixLQUFLLENBQUNRLGFBQU4sQ0FBb0JILGlCQUFwQixFQUF1QyxJQUFJSSxnQkFBSixDQUFXLEVBQVgsQ0FBdkMsWUFBMERYLFFBQTFELEVBQWhDO0FBQ0QsR0FiRDtBQWNEOztBQUVNLFNBQVNZLGVBQVQsQ0FBeUJqQixJQUF6QixFQUErQkMsTUFBL0IsRUFBdUNKLE9BQXZDLEVBQWdEO0FBQ3JESSxFQUFBQSxNQUFNLENBQUNDLE1BQVAsQ0FBY1AsNkJBQWQ7QUFFQSxTQUFPO0FBQUEsV0FBTWEscUJBQVNDLEtBQVQsQ0FBZVQsSUFBZixFQUFxQkMsTUFBckIsRUFBNkJKLE9BQTdCLENBQU47QUFBQSxHQUFQO0FBQ0QiLCJzb3VyY2VSb290IjoiL2FwcC9zcmMvbGliIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vbmdvb3NlLCB7IFNjaGVtYSB9IGZyb20gJ21vbmdvb3NlJ1xuaW1wb3J0IHsgZ2V0Q3VycmVudFRlbmFudElkIH0gZnJvbSAnLi9zdG9yYWdlJ1xuaW1wb3J0IG1vbmdvb3NlUGFnaW5hdGUgZnJvbSAnbW9uZ29vc2UtcGFnaW5hdGUtdjInXG5pbXBvcnQgY3VzdG9tTGFiZWxzIGZyb20gJy4uL2NvbnN0YW50cy9wYWdpbmF0aW9uTGFiZWxzJ1xubW9uZ29vc2VQYWdpbmF0ZS5wYWdpbmF0ZS5vcHRpb25zID0ge1xuICBjdXN0b21MYWJlbHNcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHRlbmFudE1vZGVsKG5hbWUsIHNjaGVtYSwgb3B0aW9ucykge1xuICBzY2hlbWEucGx1Z2luKG1vbmdvb3NlUGFnaW5hdGUpXG5cbiAgcmV0dXJuIChwcm9wcyA9IHt9KSA9PiB7XG4gICAgc2NoZW1hLmFkZCh7IHRlbmFudElkOiBTdHJpbmcgfSlcbiAgICBjb25zdCBNb2RlbCA9IG1vbmdvb3NlLm1vZGVsKG5hbWUsIHNjaGVtYSwgb3B0aW9ucylcblxuICAgIGNvbnN0IHsgc2tpcFRlbmFudCB9ID0gcHJvcHNcbiAgICBjb25zdCB0ZW5hbnRJZCA9IGdldEN1cnJlbnRUZW5hbnRJZCgpXG4gICAgaWYgKCF0ZW5hbnRJZCB8fCBza2lwVGVuYW50KSByZXR1cm4gTW9kZWxcblxuICAgIE1vZGVsLnNjaGVtYS5zZXQoJ2Rpc2NyaW1pbmF0b3JLZXknLCAndGVuYW50SWQnKVxuXG4gICAgY29uc3QgZGlzY3JpbWluYXRvck5hbWUgPSBuYW1lICsgJy0nICsgdGVuYW50SWRcbiAgICBjb25zdCBleGlzdGluZ0Rpc2NyaW1pbmF0b3IgPSAoTW9kZWwuZGlzY3JpbWluYXRvcnMgfHwge30pW2Rpc2NyaW1pbmF0b3JOYW1lXVxuICAgIHJldHVybiBleGlzdGluZ0Rpc2NyaW1pbmF0b3IgfHwgTW9kZWwuZGlzY3JpbWluYXRvcihkaXNjcmltaW5hdG9yTmFtZSwgbmV3IFNjaGVtYSh7fSksIGAke3RlbmFudElkfWApXG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHRlbmFudGxlc3NNb2RlbChuYW1lLCBzY2hlbWEsIG9wdGlvbnMpIHtcbiAgc2NoZW1hLnBsdWdpbihtb25nb29zZVBhZ2luYXRlKVxuXG4gIHJldHVybiAoKSA9PiBtb25nb29zZS5tb2RlbChuYW1lLCBzY2hlbWEsIG9wdGlvbnMpXG59XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "multiTenant.js"
      ],
      "names": [
        "mongoosePaginate",
        "paginate",
        "options",
        "customLabels",
        "tenantModel",
        "name",
        "schema",
        "plugin",
        "props",
        "add",
        "tenantId",
        "String",
        "Model",
        "mongoose",
        "model",
        "skipTenant",
        "set",
        "discriminatorName",
        "existingDiscriminator",
        "discriminators",
        "discriminator",
        "Schema",
        "tenantlessModel"
      ],
      "mappings": ";;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACAA,8BAAiBC,QAAjB,CAA0BC,OAA1B,GAAoC;AAClCC,EAAAA,YAAY,EAAZA;AADkC,CAApC;;AAIO,SAASC,WAAT,CAAqBC,IAArB,EAA2BC,MAA3B,EAAmCJ,OAAnC,EAA4C;AACjDI,EAAAA,MAAM,CAACC,MAAP,CAAcP,6BAAd;AAEA,SAAO,YAAgB;AAAA,QAAfQ,KAAe,uEAAP,EAAO;AACrBF,IAAAA,MAAM,CAACG,GAAP,CAAW;AAAEC,MAAAA,QAAQ,EAAEC;AAAZ,KAAX;;AACA,QAAMC,KAAK,GAAGC,qBAASC,KAAT,CAAeT,IAAf,EAAqBC,MAArB,EAA6BJ,OAA7B,CAAd;;AAFqB,QAIba,UAJa,GAIEP,KAJF,CAIbO,UAJa;AAKrB,QAAML,QAAQ,GAAG,kCAAjB;AACA,QAAI,CAACA,QAAD,IAAaK,UAAjB,EAA6B,OAAOH,KAAP;AAE7BA,IAAAA,KAAK,CAACN,MAAN,CAAaU,GAAb,CAAiB,kBAAjB,EAAqC,UAArC;AAEA,QAAMC,iBAAiB,GAAGZ,IAAI,GAAG,GAAP,GAAaK,QAAvC;AACA,QAAMQ,qBAAqB,GAAG,CAACN,KAAK,CAACO,cAAN,IAAwB,EAAzB,EAA6BF,iBAA7B,CAA9B;AACA,WAAOC,qBAAqB,IAAIN,KAAK,CAACQ,aAAN,CAAoBH,iBAApB,EAAuC,IAAII,gBAAJ,CAAW,EAAX,CAAvC,YAA0DX,QAA1D,EAAhC;AACD,GAbD;AAcD;;AAEM,SAASY,eAAT,CAAyBjB,IAAzB,EAA+BC,MAA/B,EAAuCJ,OAAvC,EAAgD;AACrDI,EAAAA,MAAM,CAACC,MAAP,CAAcP,6BAAd;AAEA,SAAO;AAAA,WAAMa,qBAASC,KAAT,CAAeT,IAAf,EAAqBC,MAArB,EAA6BJ,OAA7B,CAAN;AAAA,GAAP;AACD",
      "sourceRoot": "/app/src/lib",
      "sourcesContent": [
        "import mongoose, { Schema } from 'mongoose'\nimport { getCurrentTenantId } from './storage'\nimport mongoosePaginate from 'mongoose-paginate-v2'\nimport customLabels from '../constants/paginationLabels'\nmongoosePaginate.paginate.options = {\n  customLabels\n}\n\nexport function tenantModel(name, schema, options) {\n  schema.plugin(mongoosePaginate)\n\n  return (props = {}) => {\n    schema.add({ tenantId: String })\n    const Model = mongoose.model(name, schema, options)\n\n    const { skipTenant } = props\n    const tenantId = getCurrentTenantId()\n    if (!tenantId || skipTenant) return Model\n\n    Model.schema.set('discriminatorKey', 'tenantId')\n\n    const discriminatorName = name + '-' + tenantId\n    const existingDiscriminator = (Model.discriminators || {})[discriminatorName]\n    return existingDiscriminator || Model.discriminator(discriminatorName, new Schema({}), `${tenantId}`)\n  }\n}\n\nexport function tenantlessModel(name, schema, options) {\n  schema.plugin(mongoosePaginate)\n\n  return () => mongoose.model(name, schema, options)\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573021617939
  },
  "{\"sourceRoot\":\"/app/src/lib\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/lib/storage.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/lib",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/lib/storage.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/lib/storage.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/lib/storage.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/lib",
        "sourceFileName": "storage.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bindCurrentNamespace = bindCurrentNamespace;\nexports.setCurrentTenantId = setCurrentTenantId;\nexports.getCurrentTenantId = getCurrentTenantId;\n\nvar _continuationLocalStorage = require(\"continuation-local-storage\");\n\nvar namespaceName = 'request';\nvar ns = (0, _continuationLocalStorage.createNamespace)(namespaceName);\n\nfunction bindCurrentNamespace(req, res, next) {\n  ns.bindEmitter(req);\n  ns.bindEmitter(res);\n  ns.run(function () {\n    next();\n  });\n}\n\nfunction setCurrentTenantId(tenantId) {\n  return ns.set('tenantId', tenantId);\n}\n\nfunction getCurrentTenantId() {\n  return ns.get('tenantId');\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0b3JhZ2UuanMiXSwibmFtZXMiOlsibmFtZXNwYWNlTmFtZSIsIm5zIiwiYmluZEN1cnJlbnROYW1lc3BhY2UiLCJyZXEiLCJyZXMiLCJuZXh0IiwiYmluZEVtaXR0ZXIiLCJydW4iLCJzZXRDdXJyZW50VGVuYW50SWQiLCJ0ZW5hbnRJZCIsInNldCIsImdldEN1cnJlbnRUZW5hbnRJZCIsImdldCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7O0FBRUEsSUFBTUEsYUFBYSxHQUFHLFNBQXRCO0FBQ0EsSUFBTUMsRUFBRSxHQUFHLCtDQUFnQkQsYUFBaEIsQ0FBWDs7QUFFTyxTQUFTRSxvQkFBVCxDQUE4QkMsR0FBOUIsRUFBbUNDLEdBQW5DLEVBQXdDQyxJQUF4QyxFQUE4QztBQUNuREosRUFBQUEsRUFBRSxDQUFDSyxXQUFILENBQWVILEdBQWY7QUFDQUYsRUFBQUEsRUFBRSxDQUFDSyxXQUFILENBQWVGLEdBQWY7QUFFQUgsRUFBQUEsRUFBRSxDQUFDTSxHQUFILENBQU8sWUFBTTtBQUNYRixJQUFBQSxJQUFJO0FBQ0wsR0FGRDtBQUdEOztBQUVNLFNBQVNHLGtCQUFULENBQTRCQyxRQUE1QixFQUFzQztBQUMzQyxTQUFPUixFQUFFLENBQUNTLEdBQUgsQ0FBTyxVQUFQLEVBQW1CRCxRQUFuQixDQUFQO0FBQ0Q7O0FBRU0sU0FBU0Usa0JBQVQsR0FBOEI7QUFDbkMsU0FBT1YsRUFBRSxDQUFDVyxHQUFILENBQU8sVUFBUCxDQUFQO0FBQ0QiLCJzb3VyY2VSb290IjoiL2FwcC9zcmMvbGliIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlTmFtZXNwYWNlIH0gZnJvbSAnY29udGludWF0aW9uLWxvY2FsLXN0b3JhZ2UnO1xuXG5jb25zdCBuYW1lc3BhY2VOYW1lID0gJ3JlcXVlc3QnO1xuY29uc3QgbnMgPSBjcmVhdGVOYW1lc3BhY2UobmFtZXNwYWNlTmFtZSk7XG5cbmV4cG9ydCBmdW5jdGlvbiBiaW5kQ3VycmVudE5hbWVzcGFjZShyZXEsIHJlcywgbmV4dCkge1xuICBucy5iaW5kRW1pdHRlcihyZXEpO1xuICBucy5iaW5kRW1pdHRlcihyZXMpO1xuXG4gIG5zLnJ1bigoKSA9PiB7XG4gICAgbmV4dCgpO1xuICB9KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNldEN1cnJlbnRUZW5hbnRJZCh0ZW5hbnRJZCkge1xuICByZXR1cm4gbnMuc2V0KCd0ZW5hbnRJZCcsIHRlbmFudElkKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldEN1cnJlbnRUZW5hbnRJZCgpIHtcbiAgcmV0dXJuIG5zLmdldCgndGVuYW50SWQnKTtcbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "storage.js"
      ],
      "names": [
        "namespaceName",
        "ns",
        "bindCurrentNamespace",
        "req",
        "res",
        "next",
        "bindEmitter",
        "run",
        "setCurrentTenantId",
        "tenantId",
        "set",
        "getCurrentTenantId",
        "get"
      ],
      "mappings": ";;;;;;;;;AAAA;;AAEA,IAAMA,aAAa,GAAG,SAAtB;AACA,IAAMC,EAAE,GAAG,+CAAgBD,aAAhB,CAAX;;AAEO,SAASE,oBAAT,CAA8BC,GAA9B,EAAmCC,GAAnC,EAAwCC,IAAxC,EAA8C;AACnDJ,EAAAA,EAAE,CAACK,WAAH,CAAeH,GAAf;AACAF,EAAAA,EAAE,CAACK,WAAH,CAAeF,GAAf;AAEAH,EAAAA,EAAE,CAACM,GAAH,CAAO,YAAM;AACXF,IAAAA,IAAI;AACL,GAFD;AAGD;;AAEM,SAASG,kBAAT,CAA4BC,QAA5B,EAAsC;AAC3C,SAAOR,EAAE,CAACS,GAAH,CAAO,UAAP,EAAmBD,QAAnB,CAAP;AACD;;AAEM,SAASE,kBAAT,GAA8B;AACnC,SAAOV,EAAE,CAACW,GAAH,CAAO,UAAP,CAAP;AACD",
      "sourceRoot": "/app/src/lib",
      "sourcesContent": [
        "import { createNamespace } from 'continuation-local-storage';\n\nconst namespaceName = 'request';\nconst ns = createNamespace(namespaceName);\n\nexport function bindCurrentNamespace(req, res, next) {\n  ns.bindEmitter(req);\n  ns.bindEmitter(res);\n\n  ns.run(() => {\n    next();\n  });\n}\n\nexport function setCurrentTenantId(tenantId) {\n  return ns.set('tenantId', tenantId);\n}\n\nexport function getCurrentTenantId() {\n  return ns.get('tenantId');\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573021617939
  },
  "{\"sourceRoot\":\"/app/src/constants\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/constants/paginationLabels.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/constants",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/constants/paginationLabels.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/constants/paginationLabels.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/constants/paginationLabels.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/constants",
        "sourceFileName": "paginationLabels.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar customLabels = {\n  docs: 'data'\n};\nvar _default = customLabels;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhZ2luYXRpb25MYWJlbHMuanMiXSwibmFtZXMiOlsiY3VzdG9tTGFiZWxzIiwiZG9jcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsSUFBTUEsWUFBWSxHQUFHO0FBQ25CQyxFQUFBQSxJQUFJLEVBQUU7QUFEYSxDQUFyQjtlQUllRCxZIiwic291cmNlUm9vdCI6Ii9hcHAvc3JjL2NvbnN0YW50cyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGN1c3RvbUxhYmVscyA9IHtcbiAgZG9jczogJ2RhdGEnXG59XG5cbmV4cG9ydCBkZWZhdWx0IGN1c3RvbUxhYmVscztcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "paginationLabels.js"
      ],
      "names": [
        "customLabels",
        "docs"
      ],
      "mappings": ";;;;;;AAAA,IAAMA,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AADa,CAArB;eAIeD,Y",
      "sourceRoot": "/app/src/constants",
      "sourcesContent": [
        "const customLabels = {\n  docs: 'data'\n}\n\nexport default customLabels;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573021617935
  },
  "{\"sourceRoot\":\"/app/src/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/models/user.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/models/user.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/models/user.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/models/user.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/models",
        "sourceFileName": "user.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.userSchema = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _mongoose = require(\"mongoose\");\n\nvar _bcryptjs = _interopRequireDefault(require(\"bcryptjs\"));\n\nvar _multiTenant = require(\"../lib/multiTenant\");\n\nvar userSchema = new _mongoose.Schema({\n  name: {\n    type: String,\n    required: true\n  },\n  email: {\n    type: String,\n    required: true\n  },\n  business: {\n    type: _mongoose.Schema.Types.ObjectId,\n    ref: 'Business'\n  },\n  defaultStore: {\n    type: _mongoose.Schema.Types.ObjectId,\n    ref: 'Store'\n  },\n  password: {\n    type: String,\n    required: true,\n    select: false\n  },\n  isEmailVerified: {\n    type: Boolean,\n    \"default\": false\n  },\n  isActive: {\n    type: Boolean,\n    \"default\": false\n  },\n  isDelete: {\n    type: Boolean,\n    \"default\": false\n  },\n  role: {\n    type: _mongoose.Schema.Types.ObjectId,\n    ref: 'Role'\n  },\n  accessPin: {\n    type: String\n  },\n  phone: String,\n  mobile: String,\n  address: String,\n  city: String,\n  state: String,\n  zip: String,\n  country: String,\n  isSuper: {\n    type: Boolean,\n    \"default\": false\n  }\n}, {\n  timestamps: true,\n  skipVersioning: true\n});\nexports.userSchema = userSchema;\nuserSchema.pre('save', function _callee(next) {\n  var user, hashedPassword;\n  return _regenerator[\"default\"].async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          user = this;\n\n          if (user.isModified('password')) {\n            _context.next = 3;\n            break;\n          }\n\n          return _context.abrupt(\"return\", next());\n\n        case 3:\n          _context.prev = 3;\n          _context.next = 6;\n          return _regenerator[\"default\"].awrap(_bcryptjs[\"default\"].hash(user.password, 10));\n\n        case 6:\n          hashedPassword = _context.sent;\n          user.password = hashedPassword;\n          next();\n          _context.next = 15;\n          break;\n\n        case 11:\n          _context.prev = 11;\n          _context.t0 = _context[\"catch\"](3);\n          console.log(_context.t0);\n          next(_context.t0);\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, this, [[3, 11]]);\n});\nuserSchema.pre('findOneAndUpdate', function _callee2(next) {\n  var hashedPassword;\n  return _regenerator[\"default\"].async(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          if (this._update.password) {\n            _context2.next = 2;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", next());\n\n        case 2:\n          _context2.prev = 2;\n          _context2.next = 5;\n          return _regenerator[\"default\"].awrap(_bcryptjs[\"default\"].hash(this._update.password, 10));\n\n        case 5:\n          hashedPassword = _context2.sent;\n          this._update.password = hashedPassword;\n          next();\n          _context2.next = 14;\n          break;\n\n        case 10:\n          _context2.prev = 10;\n          _context2.t0 = _context2[\"catch\"](2);\n          console.log(_context2.t0);\n          next(_context2.t0);\n\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, this, [[2, 10]]);\n});\n\nvar _default = (0, _multiTenant.tenantlessModel)('User', userSchema);\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuanMiXSwibmFtZXMiOlsidXNlclNjaGVtYSIsIlNjaGVtYSIsIm5hbWUiLCJ0eXBlIiwiU3RyaW5nIiwicmVxdWlyZWQiLCJlbWFpbCIsImJ1c2luZXNzIiwiVHlwZXMiLCJPYmplY3RJZCIsInJlZiIsImRlZmF1bHRTdG9yZSIsInBhc3N3b3JkIiwic2VsZWN0IiwiaXNFbWFpbFZlcmlmaWVkIiwiQm9vbGVhbiIsImlzQWN0aXZlIiwiaXNEZWxldGUiLCJyb2xlIiwiYWNjZXNzUGluIiwicGhvbmUiLCJtb2JpbGUiLCJhZGRyZXNzIiwiY2l0eSIsInN0YXRlIiwiemlwIiwiY291bnRyeSIsImlzU3VwZXIiLCJ0aW1lc3RhbXBzIiwic2tpcFZlcnNpb25pbmciLCJwcmUiLCJuZXh0IiwidXNlciIsImlzTW9kaWZpZWQiLCJiY3J5cHQiLCJoYXNoIiwiaGFzaGVkUGFzc3dvcmQiLCJjb25zb2xlIiwibG9nIiwiX3VwZGF0ZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFFTyxJQUFNQSxVQUFVLEdBQUcsSUFBSUMsZ0JBQUosQ0FBVztBQUNuQ0MsRUFBQUEsSUFBSSxFQUFFO0FBQ0pDLElBQUFBLElBQUksRUFBRUMsTUFERjtBQUVKQyxJQUFBQSxRQUFRLEVBQUU7QUFGTixHQUQ2QjtBQUtuQ0MsRUFBQUEsS0FBSyxFQUFFO0FBQ0xILElBQUFBLElBQUksRUFBRUMsTUFERDtBQUVMQyxJQUFBQSxRQUFRLEVBQUU7QUFGTCxHQUw0QjtBQVNuQ0UsRUFBQUEsUUFBUSxFQUFFO0FBQ1JKLElBQUFBLElBQUksRUFBRUYsaUJBQU9PLEtBQVAsQ0FBYUMsUUFEWDtBQUVSQyxJQUFBQSxHQUFHLEVBQUU7QUFGRyxHQVR5QjtBQWFuQ0MsRUFBQUEsWUFBWSxFQUFFO0FBQ1pSLElBQUFBLElBQUksRUFBRUYsaUJBQU9PLEtBQVAsQ0FBYUMsUUFEUDtBQUVaQyxJQUFBQSxHQUFHLEVBQUU7QUFGTyxHQWJxQjtBQWlCbkNFLEVB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QUFBQSxDQUFuQzs7ZUFZZSxrQ0FBZ0IsTUFBaEIsRUFBd0IvQixVQUF4QixDIiwic291cmNlUm9vdCI6Ii9hcHAvc3JjL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNjaGVtYSB9IGZyb20gJ21vbmdvb3NlJ1xuaW1wb3J0IGJjcnlwdCBmcm9tICdiY3J5cHRqcydcbmltcG9ydCB7IHRlbmFudGxlc3NNb2RlbCB9IGZyb20gJy4uL2xpYi9tdWx0aVRlbmFudCdcblxuZXhwb3J0IGNvbnN0IHVzZXJTY2hlbWEgPSBuZXcgU2NoZW1hKHtcbiAgbmFtZToge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgICByZXF1aXJlZDogdHJ1ZVxuICB9LFxuICBlbWFpbDoge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgICByZXF1aXJlZDogdHJ1ZVxuICB9LFxuICBidXNpbmVzczoge1xuICAgIHR5cGU6IFNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgICByZWY6ICdCdXNpbmVzcydcbiAgfSxcbiAgZGVmYXVsdFN0b3JlOiB7XG4gICAgdHlwZTogU2NoZW1hLlR5cGVzLk9iamVjdElkLFxuICAgIHJlZjogJ1N0b3JlJ1xuICB9LFxuICBwYXNzd29yZDoge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgICByZXF1aXJlZDogdHJ1ZSxcbiAgICBzZWxlY3Q6IGZhbHNlXG4gIH0sXG4gIGlzRW1haWxWZXJpZmllZDoge1xuICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgZGVmYXVsdDogZmFsc2VcbiAgfSxcbiAgaXNBY3RpdmU6IHtcbiAgICB0eXBlOiBCb29sZWFuLFxuICAgIGRlZmF1bHQ6IGZhbHNlXG4gIH0sXG4gIGlzRGVsZXRlOiB7XG4gICAgdHlwZTogQm9vbGVhbixcbiAgICBkZWZhdWx0OiBmYWxzZVxuICB9LFxuICByb2xlOiB7XG4gICAgdHlwZTogU2NoZW1hLlR5cGVzLk9iamVjdElkLFxuICAgIHJlZjogJ1JvbGUnXG4gIH0sXG4gIGFjY2Vzc1Bpbjoge1xuICAgIHR5cGU6IFN0cmluZ1xuICB9LFxuICBwaG9uZTogU3RyaW5nLFxuICBtb2JpbGU6IFN0cmluZyxcbiAgYWRkcmVzczogU3RyaW5nLFxuICBjaXR5OiBTdHJpbmcsXG4gIHN0YXRlOiBTdHJpbmcsXG4gIHppcDogU3RyaW5nLFxuICBjb3VudHJ5OiBTdHJpbmcsXG4gIGlzU3VwZXI6IHtcbiAgICB0eXBlOiBCb29sZWFuLFxuICAgIGRlZmF1bHQ6IGZhbHNlXG4gIH1cbn0sIHsgdGltZXN0YW1wczogdHJ1ZSwgc2tpcFZlcnNpb25pbmc6IHRydWUgfSlcblxudXNlclNjaGVtYS5wcmUoJ3NhdmUnLCBhc3luYyBmdW5jdGlvbiAobmV4dCkge1xuICBjb25zdCB1c2VyID0gdGhpcztcbiAgaWYgKCF1c2VyLmlzTW9kaWZpZWQoJ3Bhc3N3b3JkJykpIHJldHVybiBuZXh0KClcbiAgdHJ5IHtcbiAgICBjb25zdCBoYXNoZWRQYXNzd29yZCA9IGF3YWl0IGJjcnlwdC5oYXNoKHVzZXIucGFzc3dvcmQsIDEwKVxuICAgIHVzZXIucGFzc3dvcmQgPSBoYXNoZWRQYXNzd29yZFxuICAgIG5leHQoKVxuICB9IGNhdGNoIChlcnIpIHtcbiAgICBjb25zb2xlLmxvZyhlcnIpXG4gICAgbmV4dChlcnIpXG4gIH1cbn0pXG5cbnVzZXJTY2hlbWEucHJlKCdmaW5kT25lQW5kVXBkYXRlJywgYXN5bmMgZnVuY3Rpb24gKG5leHQpIHtcbiAgaWYgKCF0aGlzLl91cGRhdGUucGFzc3dvcmQpIHJldHVybiBuZXh0KClcbiAgdHJ5IHtcbiAgICBjb25zdCBoYXNoZWRQYXNzd29yZCA9IGF3YWl0IGJjcnlwdC5oYXNoKHRoaXMuX3VwZGF0ZS5wYXNzd29yZCwgMTApXG4gICAgdGhpcy5fdXBkYXRlLnBhc3N3b3JkID0gaGFzaGVkUGFzc3dvcmRcbiAgICBuZXh0KClcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgY29uc29sZS5sb2coZXJyKVxuICAgIG5leHQoZXJyKVxuICB9XG59KVxuXG5leHBvcnQgZGVmYXVsdCB0ZW5hbnRsZXNzTW9kZWwoJ1VzZXInLCB1c2VyU2NoZW1hKVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "user.js"
      ],
      "names": [
        "userSchema",
        "Schema",
        "name",
        "type",
        "String",
        "required",
        "email",
        "business",
        "Types",
        "ObjectId",
        "ref",
        "defaultStore",
        "password",
        "select",
        "isEmailVerified",
        "Boolean",
        "isActive",
        "isDelete",
        "role",
        "accessPin",
        "phone",
        "mobile",
        "address",
        "city",
        "state",
        "zip",
        "country",
        "isSuper",
        "timestamps",
        "skipVersioning",
        "pre",
        "next",
        "user",
        "isModified",
        "bcrypt",
        "hash",
        "hashedPassword",
        "console",
        "log",
        "_update"
      ],
      "mappings": "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",
      "sourceRoot": "/app/src/models",
      "sourcesContent": [
        "import { Schema } from 'mongoose'\nimport bcrypt from 'bcryptjs'\nimport { tenantlessModel } from '../lib/multiTenant'\n\nexport const userSchema = new Schema({\n  name: {\n    type: String,\n    required: true\n  },\n  email: {\n    type: String,\n    required: true\n  },\n  business: {\n    type: Schema.Types.ObjectId,\n    ref: 'Business'\n  },\n  defaultStore: {\n    type: Schema.Types.ObjectId,\n    ref: 'Store'\n  },\n  password: {\n    type: String,\n    required: true,\n    select: false\n  },\n  isEmailVerified: {\n    type: Boolean,\n    default: false\n  },\n  isActive: {\n    type: Boolean,\n    default: false\n  },\n  isDelete: {\n    type: Boolean,\n    default: false\n  },\n  role: {\n    type: Schema.Types.ObjectId,\n    ref: 'Role'\n  },\n  accessPin: {\n    type: String\n  },\n  phone: String,\n  mobile: String,\n  address: String,\n  city: String,\n  state: String,\n  zip: String,\n  country: String,\n  isSuper: {\n    type: Boolean,\n    default: false\n  }\n}, { timestamps: true, skipVersioning: true })\n\nuserSchema.pre('save', async function (next) {\n  const user = this;\n  if (!user.isModified('password')) return next()\n  try {\n    const hashedPassword = await bcrypt.hash(user.password, 10)\n    user.password = hashedPassword\n    next()\n  } catch (err) {\n    console.log(err)\n    next(err)\n  }\n})\n\nuserSchema.pre('findOneAndUpdate', async function (next) {\n  if (!this._update.password) return next()\n  try {\n    const hashedPassword = await bcrypt.hash(this._update.password, 10)\n    this._update.password = hashedPassword\n    next()\n  } catch (err) {\n    console.log(err)\n    next(err)\n  }\n})\n\nexport default tenantlessModel('User', userSchema)\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573021617943
  },
  "{\"sourceRoot\":\"/app/src/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/models/role.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/models/role.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/models/role.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/models/role.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/models",
        "sourceFileName": "role.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongoose = require(\"mongoose\");\n\nvar _multiTenant = require(\"../lib/multiTenant\");\n\nvar roleSchema = new _mongoose.Schema({\n  name: String,\n  store: {\n    type: _mongoose.Schema.Types.ObjectId,\n    ref: 'Store'\n  },\n  isSuper: {\n    type: Boolean,\n    \"default\": false\n  },\n  permissions: [{\n    module: String,\n    access: {\n      type: Boolean,\n      \"default\": true\n    },\n    edit: {\n      type: Boolean,\n      \"default\": true\n    },\n    \"delete\": {\n      type: Boolean,\n      \"default\": true\n    },\n    actions: Object\n  }]\n}, {\n  timestamps: true,\n  skipVersioning: true\n});\n\nvar _default = (0, _multiTenant.tenantModel)('Role', roleSchema);\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJvbGUuanMiXSwibmFtZXMiOlsicm9sZVNjaGVtYSIsIlNjaGVtYSIsIm5hbWUiLCJTdHJpbmciLCJzdG9yZSIsInR5cGUiLCJUeXBlcyIsIk9iamVjdElkIiwicmVmIiwiaXNTdXBlciIsIkJvb2xlYW4iLCJwZXJtaXNzaW9ucyIsIm1vZHVsZSIsImFjY2VzcyIsImVkaXQiLCJhY3Rpb25zIiwiT2JqZWN0IiwidGltZXN0YW1wcyIsInNraXBWZXJzaW9uaW5nIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBRUEsSUFBTUEsVUFBVSxHQUFHLElBQUlDLGdCQUFKLENBQVc7QUFDNUJDLEVBQUFBLElBQUksRUFBRUMsTUFEc0I7QUFFNUJDLEVBQUFBLEtBQUssRUFBRTtBQUNMQyxJQUFBQSxJQUFJLEVBQUVKLGlCQUFPSyxLQUFQLENBQWFDLFFBRGQ7QUFFTEMsSUFBQUEsR0FBRyxFQUFFO0FBRkEsR0FGcUI7QUFNNUJDLEVBQUFBLE9BQU8sRUFBRTtBQUNQSixJQUFBQSxJQUFJLEVBQUVLLE9BREM7QUFFUCxlQUFTO0FBRkYsR0FObUI7QUFVNUJDLEVBQUFBLFdBQVcsRUFBRSxDQUNYO0FBQ0VDLElBQUFBLE1BQU0sRUFBRVQsTUFEVjtBQUVFVSxJQUFBQSxNQUFNLEVBQUU7QUFDTlIsTUFBQUEsSUFBSSxFQUFFSyxPQURBO0FBRU4saUJBQVM7QUFGSCxLQUZWO0FBTUVJLElBQUFBLElBQUksRUFBRTtBQUNKVCxNQUFBQSxJQUFJLEVBQUVLLE9BREY7QUFFSixpQkFBUztBQUZMLEtBTlI7QUFVRSxjQUFRO0FBQ05MLE1BQUFBLElBQUksRUFBRUssT0FEQTtBQUVOLGlCQUFTO0FBRkgsS0FWVjtBQWNFSyxJQUFBQSxPQUFPLEVBQUVDO0FBZFgsR0FEVztBQVZlLENBQVgsRUE0QmhCO0FBQUVDLEVBQUFBLFVBQVUsRUFBRSxJQUFkO0FBQW9CQyxFQUFBQSxjQUFjLEVBQUU7QUFBcEMsQ0E1QmdCLENBQW5COztlQThCZSw4QkFBWSxNQUFaLEVBQW9CbEIsVUFBcEIsQyIsInNvdXJjZVJvb3QiOiIvYXBwL3NyYy9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTY2hlbWEgfSBmcm9tICdtb25nb29zZSdcbmltcG9ydCB7IHRlbmFudE1vZGVsIH0gZnJvbSAnLi4vbGliL211bHRpVGVuYW50J1xuXG5jb25zdCByb2xlU2NoZW1hID0gbmV3IFNjaGVtYSh7XG4gIG5hbWU6IFN0cmluZyxcbiAgc3RvcmU6IHtcbiAgICB0eXBlOiBTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG4gICAgcmVmOiAnU3RvcmUnXG4gIH0sXG4gIGlzU3VwZXI6IHtcbiAgICB0eXBlOiBCb29sZWFuLFxuICAgIGRlZmF1bHQ6IGZhbHNlXG4gIH0sXG4gIHBlcm1pc3Npb25zOiBbXG4gICAge1xuICAgICAgbW9kdWxlOiBTdHJpbmcsXG4gICAgICBhY2Nlc3M6IHtcbiAgICAgICAgdHlwZTogQm9vbGVhbixcbiAgICAgICAgZGVmYXVsdDogdHJ1ZVxuICAgICAgfSxcbiAgICAgIGVkaXQ6IHtcbiAgICAgICAgdHlwZTogQm9vbGVhbixcbiAgICAgICAgZGVmYXVsdDogdHJ1ZVxuICAgICAgfSxcbiAgICAgIGRlbGV0ZToge1xuICAgICAgICB0eXBlOiBCb29sZWFuLFxuICAgICAgICBkZWZhdWx0OiB0cnVlXG4gICAgICB9LFxuICAgICAgYWN0aW9uczogT2JqZWN0XG4gICAgfVxuICBdXG59LCB7IHRpbWVzdGFtcHM6IHRydWUsIHNraXBWZXJzaW9uaW5nOiB0cnVlIH0pXG5cbmV4cG9ydCBkZWZhdWx0IHRlbmFudE1vZGVsKCdSb2xlJywgcm9sZVNjaGVtYSlcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "role.js"
      ],
      "names": [
        "roleSchema",
        "Schema",
        "name",
        "String",
        "store",
        "type",
        "Types",
        "ObjectId",
        "ref",
        "isSuper",
        "Boolean",
        "permissions",
        "module",
        "access",
        "edit",
        "actions",
        "Object",
        "timestamps",
        "skipVersioning"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AAEA,IAAMA,UAAU,GAAG,IAAIC,gBAAJ,CAAW;AAC5BC,EAAAA,IAAI,EAAEC,MADsB;AAE5BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAEJ,iBAAOK,KAAP,CAAaC,QADd;AAELC,IAAAA,GAAG,EAAE;AAFA,GAFqB;AAM5BC,EAAAA,OAAO,EAAE;AACPJ,IAAAA,IAAI,EAAEK,OADC;AAEP,eAAS;AAFF,GANmB;AAU5BC,EAAAA,WAAW,EAAE,CACX;AACEC,IAAAA,MAAM,EAAET,MADV;AAEEU,IAAAA,MAAM,EAAE;AACNR,MAAAA,IAAI,EAAEK,OADA;AAEN,iBAAS;AAFH,KAFV;AAMEI,IAAAA,IAAI,EAAE;AACJT,MAAAA,IAAI,EAAEK,OADF;AAEJ,iBAAS;AAFL,KANR;AAUE,cAAQ;AACNL,MAAAA,IAAI,EAAEK,OADA;AAEN,iBAAS;AAFH,KAVV;AAcEK,IAAAA,OAAO,EAAEC;AAdX,GADW;AAVe,CAAX,EA4BhB;AAAEC,EAAAA,UAAU,EAAE,IAAd;AAAoBC,EAAAA,cAAc,EAAE;AAApC,CA5BgB,CAAnB;;eA8Be,8BAAY,MAAZ,EAAoBlB,UAApB,C",
      "sourceRoot": "/app/src/models",
      "sourcesContent": [
        "import { Schema } from 'mongoose'\nimport { tenantModel } from '../lib/multiTenant'\n\nconst roleSchema = new Schema({\n  name: String,\n  store: {\n    type: Schema.Types.ObjectId,\n    ref: 'Store'\n  },\n  isSuper: {\n    type: Boolean,\n    default: false\n  },\n  permissions: [\n    {\n      module: String,\n      access: {\n        type: Boolean,\n        default: true\n      },\n      edit: {\n        type: Boolean,\n        default: true\n      },\n      delete: {\n        type: Boolean,\n        default: true\n      },\n      actions: Object\n    }\n  ]\n}, { timestamps: true, skipVersioning: true })\n\nexport default tenantModel('Role', roleSchema)\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573021617943
  },
  "{\"sourceRoot\":\"/app/src/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/models/permission.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/models/permission.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/models/permission.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/models/permission.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/models",
        "sourceFileName": "permission.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongoose = require(\"mongoose\");\n\nvar _multiTenant = require(\"../lib/multiTenant\");\n\nvar permissionSchema = new _mongoose.Schema({\n  module: String,\n  role: {\n    type: _mongoose.Schema.Types.ObjectId,\n    ref: 'Role'\n  },\n  access: {\n    type: Boolean,\n    \"default\": true\n  },\n  edit: {\n    type: Boolean,\n    \"default\": true\n  },\n  \"delete\": {\n    type: Boolean,\n    \"default\": true\n  },\n  actions: Object\n}, {\n  timestamps: true,\n  skipVersioning: true\n});\n\nvar _default = (0, _multiTenant.tenantModel)('Permission', permissionSchema);\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBlcm1pc3Npb24uanMiXSwibmFtZXMiOlsicGVybWlzc2lvblNjaGVtYSIsIlNjaGVtYSIsIm1vZHVsZSIsIlN0cmluZyIsInJvbGUiLCJ0eXBlIiwiVHlwZXMiLCJPYmplY3RJZCIsInJlZiIsImFjY2VzcyIsIkJvb2xlYW4iLCJlZGl0IiwiYWN0aW9ucyIsIk9iamVjdCIsInRpbWVzdGFtcHMiLCJza2lwVmVyc2lvbmluZyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUVBLElBQU1BLGdCQUFnQixHQUFHLElBQUlDLGdCQUFKLENBQVc7QUFDbENDLEVBQUFBLE1BQU0sRUFBRUMsTUFEMEI7QUFFbENDLEVBQUFBLElBQUksRUFBRTtBQUNKQyxJQUFBQSxJQUFJLEVBQUVKLGlCQUFPSyxLQUFQLENBQWFDLFFBRGY7QUFFSkMsSUFBQUEsR0FBRyxFQUFFO0FBRkQsR0FGNEI7QUFNbENDLEVBQUFBLE1BQU0sRUFBRTtBQUNOSixJQUFBQSxJQUFJLEVBQUVLLE9BREE7QUFFTixlQUFTO0FBRkgsR0FOMEI7QUFVbENDLEVBQUFBLElBQUksRUFBRTtBQUNKTixJQUFBQSxJQUFJLEVBQUVLLE9BREY7QUFFSixlQUFTO0FBRkwsR0FWNEI7QUFjbEMsWUFBUTtBQUNOTCxJQUFBQSxJQUFJLEVBQUVLLE9BREE7QUFFTixlQUFTO0FBRkgsR0FkMEI7QUFrQmxDRSxFQUFBQSxPQUFPLEVBQUVDO0FBbEJ5QixDQUFYLEVBbUJ0QjtBQUFFQyxFQUFBQSxVQUFVLEVBQUUsSUFBZDtBQUFvQkMsRUFBQUEsY0FBYyxFQUFFO0FBQXBDLENBbkJzQixDQUF6Qjs7ZUFxQmUsOEJBQVksWUFBWixFQUEwQmYsZ0JBQTFCLEMiLCJzb3VyY2VSb290IjoiL2FwcC9zcmMvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU2NoZW1hIH0gZnJvbSAnbW9uZ29vc2UnXG5pbXBvcnQgeyB0ZW5hbnRNb2RlbCB9IGZyb20gJy4uL2xpYi9tdWx0aVRlbmFudCdcblxuY29uc3QgcGVybWlzc2lvblNjaGVtYSA9IG5ldyBTY2hlbWEoe1xuICBtb2R1bGU6IFN0cmluZyxcbiAgcm9sZToge1xuICAgIHR5cGU6IFNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgICByZWY6ICdSb2xlJ1xuICB9LFxuICBhY2Nlc3M6IHtcbiAgICB0eXBlOiBCb29sZWFuLFxuICAgIGRlZmF1bHQ6IHRydWVcbiAgfSxcbiAgZWRpdDoge1xuICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgZGVmYXVsdDogdHJ1ZVxuICB9LFxuICBkZWxldGU6IHtcbiAgICB0eXBlOiBCb29sZWFuLFxuICAgIGRlZmF1bHQ6IHRydWVcbiAgfSxcbiAgYWN0aW9uczogT2JqZWN0XG59LCB7IHRpbWVzdGFtcHM6IHRydWUsIHNraXBWZXJzaW9uaW5nOiB0cnVlIH0pXG5cbmV4cG9ydCBkZWZhdWx0IHRlbmFudE1vZGVsKCdQZXJtaXNzaW9uJywgcGVybWlzc2lvblNjaGVtYSlcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "permission.js"
      ],
      "names": [
        "permissionSchema",
        "Schema",
        "module",
        "String",
        "role",
        "type",
        "Types",
        "ObjectId",
        "ref",
        "access",
        "Boolean",
        "edit",
        "actions",
        "Object",
        "timestamps",
        "skipVersioning"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AAEA,IAAMA,gBAAgB,GAAG,IAAIC,gBAAJ,CAAW;AAClCC,EAAAA,MAAM,EAAEC,MAD0B;AAElCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAEJ,iBAAOK,KAAP,CAAaC,QADf;AAEJC,IAAAA,GAAG,EAAE;AAFD,GAF4B;AAMlCC,EAAAA,MAAM,EAAE;AACNJ,IAAAA,IAAI,EAAEK,OADA;AAEN,eAAS;AAFH,GAN0B;AAUlCC,EAAAA,IAAI,EAAE;AACJN,IAAAA,IAAI,EAAEK,OADF;AAEJ,eAAS;AAFL,GAV4B;AAclC,YAAQ;AACNL,IAAAA,IAAI,EAAEK,OADA;AAEN,eAAS;AAFH,GAd0B;AAkBlCE,EAAAA,OAAO,EAAEC;AAlByB,CAAX,EAmBtB;AAAEC,EAAAA,UAAU,EAAE,IAAd;AAAoBC,EAAAA,cAAc,EAAE;AAApC,CAnBsB,CAAzB;;eAqBe,8BAAY,YAAZ,EAA0Bf,gBAA1B,C",
      "sourceRoot": "/app/src/models",
      "sourcesContent": [
        "import { Schema } from 'mongoose'\nimport { tenantModel } from '../lib/multiTenant'\n\nconst permissionSchema = new Schema({\n  module: String,\n  role: {\n    type: Schema.Types.ObjectId,\n    ref: 'Role'\n  },\n  access: {\n    type: Boolean,\n    default: true\n  },\n  edit: {\n    type: Boolean,\n    default: true\n  },\n  delete: {\n    type: Boolean,\n    default: true\n  },\n  actions: Object\n}, { timestamps: true, skipVersioning: true })\n\nexport default tenantModel('Permission', permissionSchema)\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573021617943
  },
  "{\"sourceRoot\":\"/app/src/controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/controllers/user.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/controllers/user.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/controllers/user.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/controllers/user.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/controllers",
        "sourceFileName": "user.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.updateUserPassword = exports.updateUserProfile = exports.getUserProfile = exports.verifyAccount = exports.updateUser = exports.registerController = exports.loginController = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _bcryptjs = _interopRequireDefault(require(\"bcryptjs\"));\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _app = _interopRequireDefault(require(\"../config/app\"));\n\nvar _user = _interopRequireDefault(require(\"../models/user\"));\n\nvar _business = _interopRequireDefault(require(\"../models/business\"));\n\nvar _store = _interopRequireDefault(require(\"../models/store\"));\n\nvar _verificationToken = _interopRequireDefault(require(\"../models/verificationToken\"));\n\nvar _mail = _interopRequireDefault(require(\"@sendgrid/mail\"));\n\nvar _helpers = require(\"../utils/helpers\");\n\nvar _joi = _interopRequireDefault(require(\"@hapi/joi\"));\n\nvar _flat = require(\"flat\");\n\nvar _errors = _interopRequireDefault(require(\"../constants/errors\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n_mail[\"default\"].setApiKey(_app[\"default\"].sendGridApiKey);\n\nvar setupDefaultStore = function setupDefaultStore(data) {\n  var name, business, email, user, result;\n  return _regenerator[\"default\"].async(function setupDefaultStore$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          name = data.name, business = data.business, email = data.email, user = data.user;\n          _context.next = 3;\n          return _regenerator[\"default\"].awrap((0, _store[\"default\"])().create({\n            name: name,\n            business: business,\n            email: email,\n            user: user,\n            tenantId: business\n          }));\n\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return _regenerator[\"default\"].awrap((0, _user[\"default\"])().findOneAndUpdate({\n            _id: user\n          }, {\n            defaultStore: result._id\n          }));\n\n        case 6:\n          return _context.abrupt(\"return\", result);\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nvar loginSchema = _joi[\"default\"].object({\n  email: _joi[\"default\"].string().email().required(),\n  password: _joi[\"default\"].string().required()\n});\n\nvar registerSchema = _joi[\"default\"].object({\n  name: _joi[\"default\"].string().min(1).required(),\n  email: _joi[\"default\"].string().email().required(),\n  password: _joi[\"default\"].string().min(3).required(),\n  businessName: _joi[\"default\"].string().min(1).required(),\n  contact: _joi[\"default\"].object()\n});\n\nvar updateSchema = _joi[\"default\"].object({\n  name: _joi[\"default\"].string().min(1),\n  email: _joi[\"default\"].string().email(),\n  password: _joi[\"default\"].string().min(3),\n  businessName: _joi[\"default\"].string().min(1),\n  contact: _joi[\"default\"].object({\n    mobile: _joi[\"default\"].string(),\n    phone: _joi[\"default\"].string(),\n    address: _joi[\"default\"].string(),\n    city: _joi[\"default\"].string(),\n    zip: _joi[\"default\"].string(),\n    country: _joi[\"default\"].string()\n  })\n});\n\nvar verifyTokenSchema = _joi[\"default\"].object({\n  token: _joi[\"default\"].string().min(1).required()\n});\n\nvar loginController = function loginController(req, res) {\n  var validation, _req$body, email, password, user;\n\n  return _regenerator[\"default\"].async(function loginController$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          validation = _joi[\"default\"].validate(req.body, loginSchema);\n\n          if (!validation.error) {\n            _context2.next = 4;\n            break;\n          }\n\n          throw new Error(validation.error);\n\n        case 4:\n          _req$body = req.body, email = _req$body.email, password = _req$body.password;\n          _context2.next = 7;\n          return _regenerator[\"default\"].awrap((0, _user[\"default\"])().findOne({\n            email: email\n          }).select('+password').populate('role'));\n\n        case 7:\n          user = _context2.sent;\n\n          if (user) {\n            _context2.next = 10;\n            break;\n          }\n\n          throw new Error(_errors[\"default\"].WRONG_CREDENTIALS);\n\n        case 10:\n          _bcryptjs[\"default\"].compare(password, user.password, function (err, isMatch) {\n            if (err) {\n              console.log(err);\n              return res.status(401).json({\n                error: true,\n                reason: err.toString()\n              });\n            }\n\n            var userdoc = _objectSpread({}, user._doc);\n\n            delete userdoc.password;\n\n            if (isMatch) {\n              var token = _jsonwebtoken[\"default\"].sign({\n                userId: user._id,\n                storeId: user.defaultStore\n              }, _app[\"default\"].authKey);\n\n              return res.status(200).json(_objectSpread({}, userdoc, {\n                token: token\n              }));\n            } else {\n              return res.status(401).json({\n                error: true,\n                reason: _errors[\"default\"].WRONG_CREDENTIALS\n              });\n            }\n          });\n\n          _context2.next = 17;\n          break;\n\n        case 13:\n          _context2.prev = 13;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0);\n          return _context2.abrupt(\"return\", res.status(401).json({\n            error: true,\n            reason: _context2.t0.message\n          }));\n\n        case 17:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 13]]);\n};\n\nexports.loginController = loginController;\n\nvar registerController = function registerController(req, res) {\n  var validation, _req$body2, name, email, password, businessName, _req$body2$contact, contact, alreadyExistingUser, business, user, hashForVerification, msg, token;\n\n  return _regenerator[\"default\"].async(function registerController$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          validation = _joi[\"default\"].validate(req.body, registerSchema);\n\n          if (!validation.error) {\n            _context3.next = 4;\n            break;\n          }\n\n          throw new Error(validation.error);\n\n        case 4:\n          _req$body2 = req.body, name = _req$body2.name, email = _req$body2.email, password = _req$body2.password, businessName = _req$body2.businessName, _req$body2$contact = _req$body2.contact, contact = _req$body2$contact === void 0 ? {} : _req$body2$contact;\n          _context3.next = 7;\n          return _regenerator[\"default\"].awrap((0, _user[\"default\"])().findOne({\n            email: email\n          }));\n\n        case 7:\n          alreadyExistingUser = _context3.sent;\n\n          if (!alreadyExistingUser) {\n            _context3.next = 10;\n            break;\n          }\n\n          throw new Error(_errors[\"default\"].EMAIL_ALREADY_EXISTS);\n\n        case 10:\n          _context3.next = 12;\n          return _regenerator[\"default\"].awrap((0, _business[\"default\"])().create({\n            name: businessName,\n            email: email\n          }));\n\n        case 12:\n          business = _context3.sent;\n          _context3.next = 15;\n          return _regenerator[\"default\"].awrap((0, _user[\"default\"])().create({\n            name: name,\n            email: email,\n            password: password,\n            business: business._id,\n            contact: contact\n          }));\n\n        case 15:\n          user = _context3.sent;\n          business.user = user._id;\n          _context3.next = 19;\n          return _regenerator[\"default\"].awrap(business.save());\n\n        case 19:\n          hashForVerification = (0, _helpers.generateRandomKey)(20);\n          _context3.next = 22;\n          return _regenerator[\"default\"].awrap((0, _verificationToken[\"default\"])().create({\n            token: hashForVerification,\n            user: user._id\n          }));\n\n        case 22:\n          msg = {\n            to: email,\n            from: 'no-reply@repairdesk.co',\n            subject: 'Verify your account on Repair Desk',\n            html: \"\\n        <h4>We warmly welcome you on Repair Desk!</h4>\\n        Please verify your account by clicking on the link <a target='_blank' href='http://\".concat(req.get('host'), \"/api/users/verify/\").concat(hashForVerification, \"'>CLICK HERE</a>\\n        <hr />\\n        <p>If you haven't created this account, you can simply ignore this email.</p>\\n        <p>Regards,</p>\\n        <p>Account Manager</p>\\n        <p>Repair Desk Inc.</p>\\n      \")\n          };\n          console.log('VERIFICATION ==== ', \"\".concat(req.get('host'), \"/api/users/verify/\").concat(hashForVerification));\n\n          _mail[\"default\"].send(msg);\n\n          token = _jsonwebtoken[\"default\"].sign({\n            userId: user._id\n          }, _app[\"default\"].authKey);\n          return _context3.abrupt(\"return\", res.status(200).json({\n            data: _objectSpread({}, user._doc, {\n              token: token\n            })\n          }));\n\n        case 29:\n          _context3.prev = 29;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(_context3.t0);\n          return _context3.abrupt(\"return\", res.status(400).json({\n            error: true,\n            reason: _context3.t0.message\n          }));\n\n        case 33:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 29]]);\n};\n\nexports.registerController = registerController;\n\nvar updateUser = function updateUser(req, res) {\n  var validation, _req$body3, name, email, password, contact, $set, result;\n\n  return _regenerator[\"default\"].async(function updateUser$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          validation = _joi[\"default\"].validate(req.body, updateSchema);\n\n          if (!validation.error) {\n            _context4.next = 4;\n            break;\n          }\n\n          throw new Error(validation.error);\n\n        case 4:\n          _req$body3 = req.body, name = _req$body3.name, email = _req$body3.email, password = _req$body3.password, contact = _req$body3.contact;\n          $set = {};\n          if (name) $set.name = name;\n          if (email) $set.email = email;\n          if (password) $set.password = password;\n\n          if (Object.keys(contact).length) {\n            $set = _objectSpread({}, $set, {}, (0, _flat.flatten)({\n              contact: contact\n            }));\n          }\n\n          _context4.next = 12;\n          return _regenerator[\"default\"].awrap((0, _user[\"default\"])().findByIdAndUpdate(req.user._id, $set));\n\n        case 12:\n          result = _context4.sent;\n          return _context4.abrupt(\"return\", res.json({\n            data: result\n          }));\n\n        case 16:\n          _context4.prev = 16;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.log(_context4.t0);\n          return _context4.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context4.t0.message\n          }));\n\n        case 20:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, [[0, 16]]);\n};\n\nexports.updateUser = updateUser;\n\nvar verifyAccount = function verifyAccount(req, res) {\n  var validation, token, foundToken, user;\n  return _regenerator[\"default\"].async(function verifyAccount$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          validation = _joi[\"default\"].validate(req.params, verifyTokenSchema);\n\n          if (!validation.error) {\n            _context5.next = 4;\n            break;\n          }\n\n          throw new Error(validation.error);\n\n        case 4:\n          token = req.params.token;\n          _context5.next = 7;\n          return _regenerator[\"default\"].awrap((0, _verificationToken[\"default\"])().findOne({\n            token: token\n          }));\n\n        case 7:\n          foundToken = _context5.sent;\n\n          if (foundToken) {\n            _context5.next = 10;\n            break;\n          }\n\n          throw new Error(_errors[\"default\"].TOKEN_EXPIRED);\n\n        case 10:\n          _context5.next = 12;\n          return _regenerator[\"default\"].awrap((0, _user[\"default\"])().findOne({\n            _id: foundToken.user\n          }).populate('business'));\n\n        case 12:\n          user = _context5.sent;\n          user.isEmailVerified = true;\n          _context5.next = 16;\n          return _regenerator[\"default\"].awrap(Promise.all([user.save(), foundToken.remove()]));\n\n        case 16:\n          _context5.next = 18;\n          return _regenerator[\"default\"].awrap(setupDefaultStore({\n            user: user._id,\n            business: user.business._id,\n            name: user.business.name,\n            email: user.email,\n            isDefault: true\n          }));\n\n        case 18:\n          return _context5.abrupt(\"return\", res.status(200).json({\n            data: user\n          }));\n\n        case 21:\n          _context5.prev = 21;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.log(_context5.t0);\n          return _context5.abrupt(\"return\", res.status(401).json({\n            error: true,\n            reason: _context5.t0.message\n          }));\n\n        case 25:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, [[0, 21]]);\n};\n\nexports.verifyAccount = verifyAccount;\n\nvar getUserProfile = function getUserProfile(req, res) {\n  var business, _id, user;\n\n  return _regenerator[\"default\"].async(function getUserProfile$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          business = req.user.business;\n          _id = req.user._id;\n          _context6.next = 5;\n          return _regenerator[\"default\"].awrap((0, _user[\"default\"])().findOne({\n            business: business,\n            _id: _id\n          }).populate('role'));\n\n        case 5:\n          user = _context6.sent;\n          return _context6.abrupt(\"return\", res.status(200).json({\n            data: _objectSpread({}, user._doc)\n          }));\n\n        case 9:\n          _context6.prev = 9;\n          _context6.t0 = _context6[\"catch\"](0);\n          console.log(_context6.t0);\n          return _context6.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context6.t0.message\n          }));\n\n        case 13:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, [[0, 9]]);\n};\n\nexports.getUserProfile = getUserProfile;\n\nvar updateUserProfile = function updateUserProfile(req, res) {\n  var business, _id, user;\n\n  return _regenerator[\"default\"].async(function updateUserProfile$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          business = req.user.business;\n          _id = req.user._id;\n          _context7.next = 5;\n          return _regenerator[\"default\"].awrap((0, _user[\"default\"])().findOneAndUpdate({\n            business: business,\n            _id: _id\n          }, req.body, {\n            \"new\": true\n          }));\n\n        case 5:\n          user = _context7.sent;\n          return _context7.abrupt(\"return\", res.status(200).json({\n            data: _objectSpread({}, user._doc)\n          }));\n\n        case 9:\n          _context7.prev = 9;\n          _context7.t0 = _context7[\"catch\"](0);\n          console.log(_context7.t0);\n          return _context7.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context7.t0.message\n          }));\n\n        case 13:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, null, null, [[0, 9]]);\n};\n\nexports.updateUserProfile = updateUserProfile;\n\nvar updateUserPassword = function updateUserPassword(req, res) {\n  var business, _id, _req$body4, oldPassword, newPassword, user;\n\n  return _regenerator[\"default\"].async(function updateUserPassword$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.prev = 0;\n          business = req.user.business;\n          _id = req.user._id;\n          _req$body4 = req.body, oldPassword = _req$body4.oldPassword, newPassword = _req$body4.newPassword;\n          _context9.next = 6;\n          return _regenerator[\"default\"].awrap((0, _user[\"default\"])().findOne({\n            business: business,\n            _id: _id\n          }).select('+password'));\n\n        case 6:\n          user = _context9.sent;\n\n          _bcryptjs[\"default\"].compare(oldPassword, user.password, function _callee(err, isMatch) {\n            return _regenerator[\"default\"].async(function _callee$(_context8) {\n              while (1) {\n                switch (_context8.prev = _context8.next) {\n                  case 0:\n                    if (!err) {\n                      _context8.next = 3;\n                      break;\n                    }\n\n                    console.log(err);\n                    return _context8.abrupt(\"return\", res.status(400).json({\n                      error: true,\n                      reason: _errors[\"default\"].INVALID_PASSWORD\n                    }));\n\n                  case 3:\n                    if (!isMatch) {\n                      _context8.next = 10;\n                      break;\n                    }\n\n                    user.password = newPassword;\n                    _context8.next = 7;\n                    return _regenerator[\"default\"].awrap(user.save());\n\n                  case 7:\n                    return _context8.abrupt(\"return\", res.json({\n                      data: {}\n                    }));\n\n                  case 10:\n                    return _context8.abrupt(\"return\", res.status(400).json({\n                      error: true,\n                      reason: _errors[\"default\"].INVALID_PASSWORD\n                    }));\n\n                  case 11:\n                  case \"end\":\n                    return _context8.stop();\n                }\n              }\n            });\n          });\n\n          _context9.next = 14;\n          break;\n\n        case 10:\n          _context9.prev = 10;\n          _context9.t0 = _context9[\"catch\"](0);\n          console.log(_context9.t0);\n          return _context9.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context9.t0.message\n          }));\n\n        case 14:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, null, null, [[0, 10]]);\n};\n\nexports.updateUserPassword = updateUserPassword;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "user.js"
      ],
      "names": [
        "sgMail",
        "setApiKey",
        "config",
        "sendGridApiKey",
        "setupDefaultStore",
        "data",
        "name",
        "business",
        "email",
        "user",
        "create",
        "tenantId",
        "result",
        "findOneAndUpdate",
        "_id",
        "defaultStore",
        "loginSchema",
        "Joi",
        "object",
        "string",
        "required",
        "password",
        "registerSchema",
        "min",
        "businessName",
        "contact",
        "updateSchema",
        "mobile",
        "phone",
        "address",
        "city",
        "zip",
        "country",
        "verifyTokenSchema",
        "token",
        "loginController",
        "req",
        "res",
        "validation",
        "validate",
        "body",
        "error",
        "Error",
        "findOne",
        "select",
        "populate",
        "ERRORS",
        "WRONG_CREDENTIALS",
        "bcrypt",
        "compare",
        "err",
        "isMatch",
        "console",
        "log",
        "status",
        "json",
        "reason",
        "toString",
        "userdoc",
        "_doc",
        "jwt",
        "sign",
        "userId",
        "storeId",
        "authKey",
        "message",
        "registerController",
        "alreadyExistingUser",
        "EMAIL_ALREADY_EXISTS",
        "save",
        "hashForVerification",
        "msg",
        "to",
        "from",
        "subject",
        "html",
        "get",
        "send",
        "updateUser",
        "$set",
        "Object",
        "keys",
        "length",
        "findByIdAndUpdate",
        "verifyAccount",
        "params",
        "foundToken",
        "TOKEN_EXPIRED",
        "isEmailVerified",
        "Promise",
        "all",
        "remove",
        "isDefault",
        "getUserProfile",
        "updateUserProfile",
        "updateUserPassword",
        "oldPassword",
        "newPassword",
        "INVALID_PASSWORD"
      ],
      "mappings": "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",
      "sourceRoot": "/app/src/controllers",
      "sourcesContent": [
        "import bcrypt from 'bcryptjs'\nimport jwt from 'jsonwebtoken'\nimport config from '../config/app'\nimport _UserModel from '../models/user'\nimport _BusinessModel from '../models/business'\nimport _StoreModel from '../models/store'\nimport _VerificationToken from '../models/verificationToken'\nimport sgMail from '@sendgrid/mail'\nimport { generateRandomKey } from '../utils/helpers'\nimport Joi from '@hapi/joi'\nimport { flatten } from 'flat'\nimport ERRORS from '../constants/errors'\nsgMail.setApiKey(config.sendGridApiKey);\n\nconst setupDefaultStore = async (data) => {\n  const { name, business, email, user } = data\n  const result = await _StoreModel().create({\n    name,\n    business,\n    email,\n    user,\n    tenantId: business\n  })\n\n  await _UserModel().findOneAndUpdate({ _id: user }, { defaultStore: result._id })\n\n  return result;\n}\n\nconst loginSchema = Joi.object({\n  email: Joi.string().email().required(),\n  password: Joi.string().required()\n})\n\nconst registerSchema = Joi.object({\n  name: Joi.string().min(1).required(),\n  email: Joi.string().email().required(),\n  password: Joi.string().min(3).required(),\n  businessName: Joi.string().min(1).required(),\n  contact: Joi.object()\n})\n\nconst updateSchema = Joi.object({\n  name: Joi.string().min(1),\n  email: Joi.string().email(),\n  password: Joi.string().min(3),\n  businessName: Joi.string().min(1),\n  contact: Joi.object({\n    mobile: Joi.string(),\n    phone: Joi.string(),\n    address: Joi.string(),\n    city: Joi.string(),\n    zip: Joi.string(),\n    country: Joi.string()\n  })\n})\n\nconst verifyTokenSchema = Joi.object({\n  token: Joi.string().min(1).required()\n})\n\nexport const loginController = async (req, res) => {\n  try {\n    const validation = Joi.validate(req.body, loginSchema)\n    if (validation.error) throw new Error(validation.error)\n\n    const { email, password } = req.body\n    const user = await _UserModel().findOne({ email }).select('+password').populate('role')\n    if (!user) throw new Error(ERRORS.WRONG_CREDENTIALS)\n    bcrypt.compare(password, user.password, (err, isMatch) => {\n      if (err) {\n        console.log(err)\n        return res.status(401).json({ error: true, reason: err.toString() })\n      }\n      const userdoc = { ...user._doc }\n      delete userdoc.password;\n      if (isMatch) {\n        const token = jwt.sign({ userId: user._id, storeId: user.defaultStore }, config.authKey)\n        return res.status(200).json({\n          ...userdoc,\n          token\n        })\n      } else {\n        return res.status(401).json({ error: true, reason: ERRORS.WRONG_CREDENTIALS })\n      }\n    })\n  } catch (err) {\n    console.log(err)\n    return res.status(401).json({ error: true, reason: err.message })\n  }\n}\n\nexport const registerController = async (req, res) => {\n  try {\n    const validation = Joi.validate(req.body, registerSchema)\n    if (validation.error) throw new Error(validation.error)\n\n    const { name, email, password, businessName, contact = {} } = req.body\n\n    const alreadyExistingUser = await _UserModel().findOne({ email })\n    if (alreadyExistingUser) {\n      throw new Error(ERRORS.EMAIL_ALREADY_EXISTS)\n    }\n\n    const business = await _BusinessModel().create({\n      name: businessName,\n      email\n    })\n\n    const user = await _UserModel().create({\n      name,\n      email,\n      password,\n      business: business._id,\n      contact\n    })\n\n    business.user = user._id\n    await business.save()\n\n    const hashForVerification = generateRandomKey(20)\n    await _VerificationToken().create({\n      token: hashForVerification,\n      user: user._id\n    })\n\n    const msg = {\n      to: email,\n      from: 'no-reply@repairdesk.co',\n      subject: 'Verify your account on Repair Desk',\n      html: `\n        <h4>We warmly welcome you on Repair Desk!</h4>\n        Please verify your account by clicking on the link <a target='_blank' href='http://${req.get('host')}/api/users/verify/${hashForVerification}'>CLICK HERE</a>\n        <hr />\n        <p>If you haven't created this account, you can simply ignore this email.</p>\n        <p>Regards,</p>\n        <p>Account Manager</p>\n        <p>Repair Desk Inc.</p>\n      `,\n    };\n\n    console.log('VERIFICATION ==== ', `${req.get('host')}/api/users/verify/${hashForVerification}`)\n\n    sgMail.send(msg)\n\n    const token = jwt.sign({ userId: user._id }, config.authKey);\n\n    return res.status(200).json({ data: { ...user._doc, token } })\n  } catch (err) {\n    console.log(err)\n    return res.status(400).json({ error: true, reason: err.message })\n  }\n}\n\nexport const updateUser = async (req, res) => {\n  try {\n    const validation = Joi.validate(req.body, updateSchema)\n    if (validation.error) throw new Error(validation.error)\n\n    const { name, email, password, contact } = req.body\n    let $set = {}\n    if (name) $set.name = name\n    if (email) $set.email = email\n    if (password) $set.password = password\n    if (Object.keys(contact).length) {\n      $set = { ...$set, ...flatten({ contact }) }\n    }\n    const result = await _UserModel().findByIdAndUpdate(req.user._id, $set)\n    return res.json({ data: result })\n  } catch (err) {\n    console.log(err)\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const verifyAccount = async (req, res) => {\n  try {\n    const validation = Joi.validate(req.params, verifyTokenSchema)\n    if (validation.error) throw new Error(validation.error)\n\n    const { token } = req.params\n    const foundToken = await _VerificationToken().findOne({ token })\n    if (!foundToken) throw new Error(ERRORS.TOKEN_EXPIRED)\n    const user = await _UserModel().findOne({ _id: foundToken.user }).populate('business')\n    user.isEmailVerified = true\n    await Promise.all([user.save(), foundToken.remove()])\n    await setupDefaultStore({ user: user._id, business: user.business._id, name: user.business.name, email: user.email, isDefault: true })\n    return res.status(200).json({ data: user })\n  } catch (err) {\n    console.log(err)\n    return res.status(401).json({ error: true, reason: err.message })\n  }\n}\n\nexport const getUserProfile = async (req, res) => {\n  try {\n    const business = req.user.business\n    const _id = req.user._id\n    const user = await _UserModel().findOne({ business, _id }).populate('role')\n\n    return res.status(200).json({ data: { ...user._doc } })\n  } catch (err) {\n    console.log(err)\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const updateUserProfile = async (req, res) => {\n  try {\n    const business = req.user.business\n    const _id = req.user._id\n\n    const user = await _UserModel().findOneAndUpdate({ business, _id }, req.body, { new: true })\n\n    return res.status(200).json({ data: { ...user._doc } })\n  } catch (err) {\n    console.log(err)\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const updateUserPassword = async (req, res) => {\n  try {\n    const business = req.user.business\n    const _id = req.user._id\n\n    const { oldPassword, newPassword } = req.body\n\n    const user = await _UserModel().findOne({ business, _id }).select('+password')\n    bcrypt.compare(oldPassword, user.password, async (err, isMatch) => {\n      if (err) {\n        console.log(err)\n        return res.status(400).json({ error: true, reason: ERRORS.INVALID_PASSWORD })\n      }\n\n      if (isMatch) {\n        user.password = newPassword\n        await user.save()\n        return res.json({ data: {} })\n      } else {\n        return res.status(400).json({ error: true, reason: ERRORS.INVALID_PASSWORD })\n      }\n    })\n  } catch (err) {\n    console.log(err)\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1574924198759
  },
  "{\"sourceRoot\":\"/app/src/config\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/config/app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/config",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/config/app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/config/app.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/config/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/config",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n// app configurations\nvar AWSAccessKeyId = 'AKIAJARUZJZO5N4V7XAA';\nvar AWSSecretKey = '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';\nvar AWSRegion = 'us-east-1';\nvar AWSBucket = 'repairdesk-replica-dev';\nprocess.env.AWSAccessKeyId = AWSAccessKeyId;\nprocess.env.AWSSecretKey = AWSSecretKey;\nprocess.env.AWSRegion = AWSRegion;\nprocess.env.AWSBucket = AWSBucket;\nvar _default = {\n  authKey: process.env.JWT_KEY || 'secret',\n  sendGridApiKey: process.env.SEND_GRID_API_KEY || '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',\n  AWSAccessKeyId: AWSAccessKeyId,\n  AWSSecretKey: AWSSecretKey,\n  AWSBucket: AWSBucket,\n  AWSRegion: AWSRegion\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJBV1NBY2Nlc3NLZXlJZCIsIkFXU1NlY3JldEtleSIsIkFXU1JlZ2lvbiIsIkFXU0J1Y2tldCIsInByb2Nlc3MiLCJlbnYiLCJhdXRoS2V5IiwiSldUX0tFWSIsInNlbmRHcmlkQXBpS2V5IiwiU0VORF9HUklEX0FQSV9LRVkiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBRUEsSUFBTUEsY0FBYyxHQUFHLHNCQUF2QjtBQUNBLElBQU1DLFlBQVksR0FBRywwQ0FBckI7QUFDQSxJQUFNQyxTQUFTLEdBQUcsV0FBbEI7QUFDQSxJQUFNQyxTQUFTLEdBQUcsd0JBQWxCO0FBR0FDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZTCxjQUFaLEdBQTZCQSxjQUE3QjtBQUNBSSxPQUFPLENBQUNDLEdBQVIsQ0FBWUosWUFBWixHQUEyQkEsWUFBM0I7QUFDQUcsT0FBTyxDQUFDQyxHQUFSLENBQVlILFNBQVosR0FBd0JBLFNBQXhCO0FBQ0FFLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRixTQUFaLEdBQXdCQSxTQUF4QjtlQUVlO0FBQ2JHLEVBQUFBLE9BQU8sRUFBRUYsT0FBTyxDQUFDQyxHQUFSLENBQVlFLE9BQVosSUFBdUIsUUFEbkI7QUFFYkMsRUFBQUEsY0FBYyxFQUFFSixPQUFPLENBQUNDLEdBQVIsQ0FBWUksaUJBQVosSUFBaUMsdUVBRnBDO0FBR2JULEVBQUFBLGNBQWMsRUFBZEEsY0FIYTtBQUliQyxFQUFBQSxZQUFZLEVBQVpBLFlBSmE7QUFLYkUsRUFBQUEsU0FBUyxFQUFUQSxTQUxhO0FBTWJELEVBQUFBLFNBQVMsRUFBVEE7QUFOYSxDIiwic291cmNlUm9vdCI6Ii9hcHAvc3JjL2NvbmZpZyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGFwcCBjb25maWd1cmF0aW9uc1xuXG5jb25zdCBBV1NBY2Nlc3NLZXlJZCA9ICdBS0lBSkFSVVpKWk81TjRWN1hBQSdcbmNvbnN0IEFXU1NlY3JldEtleSA9ICdYK1FsaWZnN2c0WUVFa1dkTTZ3anRZSXpqeGc5NnBjS0RDNXIvRGFDJ1xuY29uc3QgQVdTUmVnaW9uID0gJ3VzLWVhc3QtMSdcbmNvbnN0IEFXU0J1Y2tldCA9ICdyZXBhaXJkZXNrLXJlcGxpY2EtZGV2J1xuXG5cbnByb2Nlc3MuZW52LkFXU0FjY2Vzc0tleUlkID0gQVdTQWNjZXNzS2V5SWRcbnByb2Nlc3MuZW52LkFXU1NlY3JldEtleSA9IEFXU1NlY3JldEtleVxucHJvY2Vzcy5lbnYuQVdTUmVnaW9uID0gQVdTUmVnaW9uXG5wcm9jZXNzLmVudi5BV1NCdWNrZXQgPSBBV1NCdWNrZXRcblxuZXhwb3J0IGRlZmF1bHQge1xuICBhdXRoS2V5OiBwcm9jZXNzLmVudi5KV1RfS0VZIHx8ICdzZWNyZXQnLFxuICBzZW5kR3JpZEFwaUtleTogcHJvY2Vzcy5lbnYuU0VORF9HUklEX0FQSV9LRVkgfHwgJ1NHLkliVjRqaTBnUldpXzYxRHpERkN6M0EuTl8xakpscDE0emZjWEVvMEt6SkFNM1ZmUjlnemlZQWlmeGVmYkVKb0Y1bycsXG4gIEFXU0FjY2Vzc0tleUlkLFxuICBBV1NTZWNyZXRLZXksXG4gIEFXU0J1Y2tldCxcbiAgQVdTUmVnaW9uXG59XG5cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "AWSAccessKeyId",
        "AWSSecretKey",
        "AWSRegion",
        "AWSBucket",
        "process",
        "env",
        "authKey",
        "JWT_KEY",
        "sendGridApiKey",
        "SEND_GRID_API_KEY"
      ],
      "mappings": ";;;;;;AAAA;AAEA,IAAMA,cAAc,GAAG,sBAAvB;AACA,IAAMC,YAAY,GAAG,0CAArB;AACA,IAAMC,SAAS,GAAG,WAAlB;AACA,IAAMC,SAAS,GAAG,wBAAlB;AAGAC,OAAO,CAACC,GAAR,CAAYL,cAAZ,GAA6BA,cAA7B;AACAI,OAAO,CAACC,GAAR,CAAYJ,YAAZ,GAA2BA,YAA3B;AACAG,OAAO,CAACC,GAAR,CAAYH,SAAZ,GAAwBA,SAAxB;AACAE,OAAO,CAACC,GAAR,CAAYF,SAAZ,GAAwBA,SAAxB;eAEe;AACbG,EAAAA,OAAO,EAAEF,OAAO,CAACC,GAAR,CAAYE,OAAZ,IAAuB,QADnB;AAEbC,EAAAA,cAAc,EAAEJ,OAAO,CAACC,GAAR,CAAYI,iBAAZ,IAAiC,uEAFpC;AAGbT,EAAAA,cAAc,EAAdA,cAHa;AAIbC,EAAAA,YAAY,EAAZA,YAJa;AAKbE,EAAAA,SAAS,EAATA,SALa;AAMbD,EAAAA,SAAS,EAATA;AANa,C",
      "sourceRoot": "/app/src/config",
      "sourcesContent": [
        "// app configurations\n\nconst AWSAccessKeyId = 'AKIAJARUZJZO5N4V7XAA'\nconst AWSSecretKey = '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'\nconst AWSRegion = 'us-east-1'\nconst AWSBucket = 'repairdesk-replica-dev'\n\n\nprocess.env.AWSAccessKeyId = AWSAccessKeyId\nprocess.env.AWSSecretKey = AWSSecretKey\nprocess.env.AWSRegion = AWSRegion\nprocess.env.AWSBucket = AWSBucket\n\nexport default {\n  authKey: process.env.JWT_KEY || 'secret',\n  sendGridApiKey: process.env.SEND_GRID_API_KEY || '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',\n  AWSAccessKeyId,\n  AWSSecretKey,\n  AWSBucket,\n  AWSRegion\n}\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573021617935
  },
  "{\"sourceRoot\":\"/app/src/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/models/store.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/models/store.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/models/store.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/models/store.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/models",
        "sourceFileName": "store.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongoose = require(\"mongoose\");\n\nvar _multiTenant = require(\"../lib/multiTenant\");\n\nvar storeSchema = new _mongoose.Schema({\n  name: {\n    type: String,\n    required: true\n  },\n  email: {\n    type: String,\n    required: true\n  },\n  business: {\n    type: _mongoose.Schema.Types.ObjectId,\n    ref: 'Business'\n  },\n  alternateName: {\n    type: String,\n    \"default\": ''\n  },\n  user: {\n    type: _mongoose.Schema.Types.ObjectId,\n    ref: 'User'\n  },\n  logo: {\n    type: String,\n    \"default\": ''\n  },\n  storeType: {\n    type: _mongoose.Schema.Types.ObjectId,\n    ref: 'StoreType'\n  },\n  isDefault: Boolean,\n  phone: String,\n  mobile: String,\n  fax: String,\n  website: String,\n  address: String,\n  city: String,\n  postCode: String,\n  state: String,\n  country: String,\n  timeZone: String,\n  timeFormat: String,\n  language: String,\n  defaultCurrency: String,\n  priceFormat: String,\n  phoneFormat: String,\n  chargeSalesTax: Boolean,\n  defaultTaxClass: String,\n  taxPercentage: Number,\n  taxIncluded: Boolean,\n  registrationNumber: String,\n  startTime: String,\n  endTime: String,\n  defaultAddress: String,\n  syncPricesOnAll: Boolean,\n  syncNewItemsOnAllStores: Boolean,\n  apiKey: String,\n  franchiseFeeCriteria: Number,\n  franchiseFeePercentage: Number\n}, {\n  timestamps: true,\n  skipVersioning: true\n});\n\nvar _default = (0, _multiTenant.tenantModel)('Store', storeSchema);\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0b3JlLmpzIl0sIm5hbWVzIjpbInN0b3JlU2NoZW1hIiwiU2NoZW1hIiwibmFtZSIsInR5cGUiLCJTdHJpbmciLCJyZXF1aXJlZCIsImVtYWlsIiwiYnVzaW5lc3MiLCJUeXBlcyIsIk9iamVjdElkIiwicmVmIiwiYWx0ZXJuYXRlTmFtZSIsInVzZXIiLCJsb2dvIiwic3RvcmVUeXBlIiwiaXNEZWZhdWx0IiwiQm9vbGVhbiIsInBob25lIiwibW9iaWxlIiwiZmF4Iiwid2Vic2l0ZSIsImFkZHJlc3MiLCJjaXR5IiwicG9zdENvZGUiLCJzdGF0ZSIsImNvdW50cnkiLCJ0aW1lWm9uZSIsInRpbWVGb3JtYXQiLCJsYW5ndWFnZSIsImRlZmF1bHRDdXJyZW5jeSIsInByaWNlRm9ybWF0IiwicGhvbmVGb3JtYXQiLCJjaGFyZ2VTYWxlc1RheCIsImRlZmF1bHRUYXhDbGFzcyIsInRheFBlcmNlbnRhZ2UiLCJOdW1iZXIiLCJ0YXhJbmNsdWRlZCIsInJlZ2lzdHJhdGlvbk51bWJlciIsInN0YXJ0VGltZSIsImVuZFRpbWUiLCJkZWZhdWx0QWRkcmVzcyIsInN5bmNQcmljZXNPbkFsbCIsInN5bmNOZXdJdGVtc09uQWxsU3RvcmVzIiwiYXBpS2V5IiwiZnJhbmNoaXNlRmVlQ3JpdGVyaWEiLCJmcmFuY2hpc2VGZWVQZXJjZW50YWdlIiwidGltZXN0YW1wcyIsInNraXBWZXJzaW9uaW5nIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBRUEsSUFBTUEsV0FBVyxHQUFHLElBQUlDLGdCQUFKLENBQVc7QUFDN0JDLEVBQUFBLElBQUksRUFBRTtBQUNKQyxJQUFBQSxJQUFJLEVBQUVDLE1BREY7QUFFSkMsSUFBQUEsUUFBUSxFQUFFO0FBRk4sR0FEdUI7QUFLN0JDLEVBQUFBLEtBQUssRUFBRTtBQUNMSCxJQUFBQSxJQUFJLEVBQUVDLE1BREQ7QUFFTEMsSUFBQUEsUUFBUSxFQUFFO0FBRkwsR0FMc0I7QUFTN0JFLEVBQUFBLFFBQVEsRUFBRTtBQUNSSixJQUFBQSxJQUFJLEVBQUVGLGlCQUFPTyxLQUFQLENBQWFDLFFBRFg7QUFFUkMsSUFBQUEsR0FBRyxFQUFFO0FBRkcsR0FUbUI7QUFhN0JDLEVBQUFBLGFBQWEsRUFBRTtBQUNiUixJQUFBQSxJQUFJLEVBQUVDLE1BRE87QUFFYixlQUFTO0FBRkksR0FiYztBQWlCN0JRLEVBQUFBLElBQUksRUFBRTtBQUNKVCxJQUFBQSxJQUFJLEVBQUVGLGlCQUFPTyxLQUFQLENBQWFDLFFBRGY7QUFFSkMsSUFBQUEsR0FBRyxFQUFFO0FBRkQsR0FqQnVCO0FBcUI3QkcsRUFBQUEsSUFBSSxFQUFFO0FBQ0pWLElBQUFBLElBQUksRUFBRUMsTUFERjtBQUVKLGVBQVM7QUFGTCxHQXJCdUI7QUF5QjdCVSxFQUFBQSxTQUFTLEVBQUU7QUFDVFgsSUFBQUEsSUFBSSxFQUFFRixpQkFBT08sS0FBUCxDQUFhQyxRQURWO0FBRVRDLElBQUFBLEdBQUcsRUFBRTtBQUZJLEdBekJrQjtBQTZCN0JLLEVBQUFBLFNBQVMsRUFBRUMsT0E3QmtCO0FBOEI3QkMsRUFBQUEsS0FBSyxFQUFFYixNQTlCc0I7QUErQjdCYyxFQUFBQSxNQUFNLEVBQUVkLE1BL0JxQjtBQWdDN0JlLEVBQUFBLEdBQUcsRUFBRWYsTUFoQ3dCO0FBaUM3QmdCLEVBQUFBLE9BQU8sRUFBRWhCLE1BakNvQjtBQWtDN0JpQixFQUFBQSxPQUFPLEVBQUVqQixNQWxDb0I7QUFtQzdCa0IsRUFBQUEsSUFBSSxFQUFFbEIsTUFuQ3VCO0FBb0M3Qm1CLEVBQUFBLFFBQVEsRUFBRW5CLE1BcENtQjtBQXFDN0JvQixFQUFBQSxLQUFLLEVBQUVwQixNQXJDc0I7QUFzQzdCcUIsRUFBQUEsT0FBTyxFQUFFckIsTUF0Q29CO0FBdUM3QnNCLEVBQUFBLFFBQVEsRUFBRXRCLE1BdkNtQjtBQXdDN0J1QixFQUFBQSxVQUFVLEVBQUV2QixNQXhDaUI7QUF5QzdCd0IsRUFBQUEsUUFBUSxFQUFFeEIsTUF6Q21CO0FBMEM3QnlCLEVBQUFBLGVBQWUsRUFBRXpCLE1BMUNZO0FBMkM3QjBCLEVBQUFBLFdBQVcsRUFBRTFCLE1BM0NnQjtBQTRDN0IyQixFQUFBQSxXQUFXLEVBQUUzQixNQTVDZ0I7QUE2QzdCNEIsRUFBQUEsY0FBYyxFQUFFaEIsT0E3Q2E7QUE4QzdCaUIsRUFBQUEsZUFBZSxFQUFFN0IsTUE5Q1k7QUErQzdCOEIsRUFBQUEsYUFBYSxFQUFFQyxNQS9DYztBQWdEN0JDLEVBQUFBLFdBQVcsRUFBRXBCLE9BaERnQjtBQWlEN0JxQixFQUFBQSxrQkFBa0IsRUFBRWpDLE1BakRTO0FBa0Q3QmtDLEVBQUFBLFNBQVMsRUFBRWxDLE1BbERrQjtBQW1EN0JtQyxFQUFBQSxPQUFPLEVBQUVuQyxNQW5Eb0I7QUFvRDdCb0MsRUFBQUEsY0FBYyxFQUFFcEMsTUFwRGE7QUFxRDdCcUMsRUFBQUEsZUFBZSxFQUFFekIsT0FyRFk7QUFzRDdCMEIsRUFBQUEsdUJBQXVCLEVBQUUxQixPQXRESTtBQXVEN0IyQixFQUFBQSxNQUFNLEVBQUV2QyxNQXZEcUI7QUF3RDdCd0MsRUFBQUEsb0JBQW9CLEVBQUVULE1BeERPO0FBeUQ3QlUsRUFBQUEsc0JBQXNCLEVBQUVWO0FBekRLLENBQVgsRUEwRGpCO0FBQUVXLEVBQUFBLFVBQVUsRUFBRSxJQUFkO0FBQW9CQyxFQUFBQSxjQUFjLEVBQUU7QUFBcEMsQ0ExRGlCLENBQXBCOztlQTREZSw4QkFBWSxPQUFaLEVBQXFCL0MsV0FBckIsQyIsInNvdXJjZVJvb3QiOiIvYXBwL3NyYy9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTY2hlbWEgfSBmcm9tICdtb25nb29zZSdcbmltcG9ydCB7IHRlbmFudE1vZGVsIH0gZnJvbSAnLi4vbGliL211bHRpVGVuYW50J1xuXG5jb25zdCBzdG9yZVNjaGVtYSA9IG5ldyBTY2hlbWEoe1xuICBuYW1lOiB7XG4gICAgdHlwZTogU3RyaW5nLFxuICAgIHJlcXVpcmVkOiB0cnVlXG4gIH0sXG4gIGVtYWlsOiB7XG4gICAgdHlwZTogU3RyaW5nLFxuICAgIHJlcXVpcmVkOiB0cnVlXG4gIH0sXG4gIGJ1c2luZXNzOiB7XG4gICAgdHlwZTogU2NoZW1hLlR5cGVzLk9iamVjdElkLFxuICAgIHJlZjogJ0J1c2luZXNzJ1xuICB9LFxuICBhbHRlcm5hdGVOYW1lOiB7XG4gICAgdHlwZTogU3RyaW5nLFxuICAgIGRlZmF1bHQ6ICcnXG4gIH0sXG4gIHVzZXI6IHtcbiAgICB0eXBlOiBTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG4gICAgcmVmOiAnVXNlcidcbiAgfSxcbiAgbG9nbzoge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgICBkZWZhdWx0OiAnJ1xuICB9LFxuICBzdG9yZVR5cGU6IHtcbiAgICB0eXBlOiBTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG4gICAgcmVmOiAnU3RvcmVUeXBlJ1xuICB9LFxuICBpc0RlZmF1bHQ6IEJvb2xlYW4sXG4gIHBob25lOiBTdHJpbmcsXG4gIG1vYmlsZTogU3RyaW5nLFxuICBmYXg6IFN0cmluZyxcbiAgd2Vic2l0ZTogU3RyaW5nLFxuICBhZGRyZXNzOiBTdHJpbmcsXG4gIGNpdHk6IFN0cmluZyxcbiAgcG9zdENvZGU6IFN0cmluZyxcbiAgc3RhdGU6IFN0cmluZyxcbiAgY291bnRyeTogU3RyaW5nLFxuICB0aW1lWm9uZTogU3RyaW5nLFxuICB0aW1lRm9ybWF0OiBTdHJpbmcsXG4gIGxhbmd1YWdlOiBTdHJpbmcsXG4gIGRlZmF1bHRDdXJyZW5jeTogU3RyaW5nLFxuICBwcmljZUZvcm1hdDogU3RyaW5nLFxuICBwaG9uZUZvcm1hdDogU3RyaW5nLFxuICBjaGFyZ2VTYWxlc1RheDogQm9vbGVhbixcbiAgZGVmYXVsdFRheENsYXNzOiBTdHJpbmcsXG4gIHRheFBlcmNlbnRhZ2U6IE51bWJlcixcbiAgdGF4SW5jbHVkZWQ6IEJvb2xlYW4sXG4gIHJlZ2lzdHJhdGlvbk51bWJlcjogU3RyaW5nLFxuICBzdGFydFRpbWU6IFN0cmluZyxcbiAgZW5kVGltZTogU3RyaW5nLFxuICBkZWZhdWx0QWRkcmVzczogU3RyaW5nLFxuICBzeW5jUHJpY2VzT25BbGw6IEJvb2xlYW4sXG4gIHN5bmNOZXdJdGVtc09uQWxsU3RvcmVzOiBCb29sZWFuLFxuICBhcGlLZXk6IFN0cmluZyxcbiAgZnJhbmNoaXNlRmVlQ3JpdGVyaWE6IE51bWJlcixcbiAgZnJhbmNoaXNlRmVlUGVyY2VudGFnZTogTnVtYmVyXG59LCB7IHRpbWVzdGFtcHM6IHRydWUsIHNraXBWZXJzaW9uaW5nOiB0cnVlIH0pXG5cbmV4cG9ydCBkZWZhdWx0IHRlbmFudE1vZGVsKCdTdG9yZScsIHN0b3JlU2NoZW1hKVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "store.js"
      ],
      "names": [
        "storeSchema",
        "Schema",
        "name",
        "type",
        "String",
        "required",
        "email",
        "business",
        "Types",
        "ObjectId",
        "ref",
        "alternateName",
        "user",
        "logo",
        "storeType",
        "isDefault",
        "Boolean",
        "phone",
        "mobile",
        "fax",
        "website",
        "address",
        "city",
        "postCode",
        "state",
        "country",
        "timeZone",
        "timeFormat",
        "language",
        "defaultCurrency",
        "priceFormat",
        "phoneFormat",
        "chargeSalesTax",
        "defaultTaxClass",
        "taxPercentage",
        "Number",
        "taxIncluded",
        "registrationNumber",
        "startTime",
        "endTime",
        "defaultAddress",
        "syncPricesOnAll",
        "syncNewItemsOnAllStores",
        "apiKey",
        "franchiseFeeCriteria",
        "franchiseFeePercentage",
        "timestamps",
        "skipVersioning"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AAEA,IAAMA,WAAW,GAAG,IAAIC,gBAAJ,CAAW;AAC7BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAEC,MADF;AAEJC,IAAAA,QAAQ,EAAE;AAFN,GADuB;AAK7BC,EAAAA,KAAK,EAAE;AACLH,IAAAA,IAAI,EAAEC,MADD;AAELC,IAAAA,QAAQ,EAAE;AAFL,GALsB;AAS7BE,EAAAA,QAAQ,EAAE;AACRJ,IAAAA,IAAI,EAAEF,iBAAOO,KAAP,CAAaC,QADX;AAERC,IAAAA,GAAG,EAAE;AAFG,GATmB;AAa7BC,EAAAA,aAAa,EAAE;AACbR,IAAAA,IAAI,EAAEC,MADO;AAEb,eAAS;AAFI,GAbc;AAiB7BQ,EAAAA,IAAI,EAAE;AACJT,IAAAA,IAAI,EAAEF,iBAAOO,KAAP,CAAaC,QADf;AAEJC,IAAAA,GAAG,EAAE;AAFD,GAjBuB;AAqB7BG,EAAAA,IAAI,EAAE;AACJV,IAAAA,IAAI,EAAEC,MADF;AAEJ,eAAS;AAFL,GArBuB;AAyB7BU,EAAAA,SAAS,EAAE;AACTX,IAAAA,IAAI,EAAEF,iBAAOO,KAAP,CAAaC,QADV;AAETC,IAAAA,GAAG,EAAE;AAFI,GAzBkB;AA6B7BK,EAAAA,SAAS,EAAEC,OA7BkB;AA8B7BC,EAAAA,KAAK,EAAEb,MA9BsB;AA+B7Bc,EAAAA,MAAM,EAAEd,MA/BqB;AAgC7Be,EAAAA,GAAG,EAAEf,MAhCwB;AAiC7BgB,EAAAA,OAAO,EAAEhB,MAjCoB;AAkC7BiB,EAAAA,OAAO,EAAEjB,MAlCoB;AAmC7BkB,EAAAA,IAAI,EAAElB,MAnCuB;AAoC7BmB,EAAAA,QAAQ,EAAEnB,MApCmB;AAqC7BoB,EAAAA,KAAK,EAAEpB,MArCsB;AAsC7BqB,EAAAA,OAAO,EAAErB,MAtCoB;AAuC7BsB,EAAAA,QAAQ,EAAEtB,MAvCmB;AAwC7BuB,EAAAA,UAAU,EAAEvB,MAxCiB;AAyC7BwB,EAAAA,QAAQ,EAAExB,MAzCmB;AA0C7ByB,EAAAA,eAAe,EAAEzB,MA1CY;AA2C7B0B,EAAAA,WAAW,EAAE1B,MA3CgB;AA4C7B2B,EAAAA,WAAW,EAAE3B,MA5CgB;AA6C7B4B,EAAAA,cAAc,EAAEhB,OA7Ca;AA8C7BiB,EAAAA,eAAe,EAAE7B,MA9CY;AA+C7B8B,EAAAA,aAAa,EAAEC,MA/Cc;AAgD7BC,EAAAA,WAAW,EAAEpB,OAhDgB;AAiD7BqB,EAAAA,kBAAkB,EAAEjC,MAjDS;AAkD7BkC,EAAAA,SAAS,EAAElC,MAlDkB;AAmD7BmC,EAAAA,OAAO,EAAEnC,MAnDoB;AAoD7BoC,EAAAA,cAAc,EAAEpC,MApDa;AAqD7BqC,EAAAA,eAAe,EAAEzB,OArDY;AAsD7B0B,EAAAA,uBAAuB,EAAE1B,OAtDI;AAuD7B2B,EAAAA,MAAM,EAAEvC,MAvDqB;AAwD7BwC,EAAAA,oBAAoB,EAAET,MAxDO;AAyD7BU,EAAAA,sBAAsB,EAAEV;AAzDK,CAAX,EA0DjB;AAAEW,EAAAA,UAAU,EAAE,IAAd;AAAoBC,EAAAA,cAAc,EAAE;AAApC,CA1DiB,CAApB;;eA4De,8BAAY,OAAZ,EAAqB/C,WAArB,C",
      "sourceRoot": "/app/src/models",
      "sourcesContent": [
        "import { Schema } from 'mongoose'\nimport { tenantModel } from '../lib/multiTenant'\n\nconst storeSchema = new Schema({\n  name: {\n    type: String,\n    required: true\n  },\n  email: {\n    type: String,\n    required: true\n  },\n  business: {\n    type: Schema.Types.ObjectId,\n    ref: 'Business'\n  },\n  alternateName: {\n    type: String,\n    default: ''\n  },\n  user: {\n    type: Schema.Types.ObjectId,\n    ref: 'User'\n  },\n  logo: {\n    type: String,\n    default: ''\n  },\n  storeType: {\n    type: Schema.Types.ObjectId,\n    ref: 'StoreType'\n  },\n  isDefault: Boolean,\n  phone: String,\n  mobile: String,\n  fax: String,\n  website: String,\n  address: String,\n  city: String,\n  postCode: String,\n  state: String,\n  country: String,\n  timeZone: String,\n  timeFormat: String,\n  language: String,\n  defaultCurrency: String,\n  priceFormat: String,\n  phoneFormat: String,\n  chargeSalesTax: Boolean,\n  defaultTaxClass: String,\n  taxPercentage: Number,\n  taxIncluded: Boolean,\n  registrationNumber: String,\n  startTime: String,\n  endTime: String,\n  defaultAddress: String,\n  syncPricesOnAll: Boolean,\n  syncNewItemsOnAllStores: Boolean,\n  apiKey: String,\n  franchiseFeeCriteria: Number,\n  franchiseFeePercentage: Number\n}, { timestamps: true, skipVersioning: true })\n\nexport default tenantModel('Store', storeSchema)\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573021617943
  },
  "{\"sourceRoot\":\"/app/src/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/models/verificationToken.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/models/verificationToken.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/models/verificationToken.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/models/verificationToken.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/models",
        "sourceFileName": "verificationToken.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongoose = require(\"mongoose\");\n\nvar _multiTenant = require(\"../lib/multiTenant\");\n\nvar verificationTokenSchema = new _mongoose.Schema({\n  token: {\n    type: String,\n    required: true\n  },\n  user: {\n    type: _mongoose.Schema.Types.ObjectId,\n    ref: 'User'\n  }\n}, {\n  timestamps: true,\n  skipVersioning: true\n});\n\nvar _default = (0, _multiTenant.tenantlessModel)('verificationToken', verificationTokenSchema);\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZlcmlmaWNhdGlvblRva2VuLmpzIl0sIm5hbWVzIjpbInZlcmlmaWNhdGlvblRva2VuU2NoZW1hIiwiU2NoZW1hIiwidG9rZW4iLCJ0eXBlIiwiU3RyaW5nIiwicmVxdWlyZWQiLCJ1c2VyIiwiVHlwZXMiLCJPYmplY3RJZCIsInJlZiIsInRpbWVzdGFtcHMiLCJza2lwVmVyc2lvbmluZyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUVBLElBQU1BLHVCQUF1QixHQUFHLElBQUlDLGdCQUFKLENBQVc7QUFDekNDLEVBQUFBLEtBQUssRUFBRTtBQUNMQyxJQUFBQSxJQUFJLEVBQUVDLE1BREQ7QUFFTEMsSUFBQUEsUUFBUSxFQUFFO0FBRkwsR0FEa0M7QUFLekNDLEVBQUFBLElBQUksRUFBRTtBQUNKSCxJQUFBQSxJQUFJLEVBQUVGLGlCQUFPTSxLQUFQLENBQWFDLFFBRGY7QUFFSkMsSUFBQUEsR0FBRyxFQUFFO0FBRkQ7QUFMbUMsQ0FBWCxFQVM3QjtBQUFFQyxFQUFBQSxVQUFVLEVBQUUsSUFBZDtBQUFvQkMsRUFBQUEsY0FBYyxFQUFFO0FBQXBDLENBVDZCLENBQWhDOztlQVdlLGtDQUFnQixtQkFBaEIsRUFBcUNYLHVCQUFyQyxDIiwic291cmNlUm9vdCI6Ii9hcHAvc3JjL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNjaGVtYSB9IGZyb20gJ21vbmdvb3NlJ1xuaW1wb3J0IHsgdGVuYW50bGVzc01vZGVsIH0gZnJvbSAnLi4vbGliL211bHRpVGVuYW50J1xuXG5jb25zdCB2ZXJpZmljYXRpb25Ub2tlblNjaGVtYSA9IG5ldyBTY2hlbWEoe1xuICB0b2tlbjoge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgICByZXF1aXJlZDogdHJ1ZVxuICB9LFxuICB1c2VyOiB7XG4gICAgdHlwZTogU2NoZW1hLlR5cGVzLk9iamVjdElkLFxuICAgIHJlZjogJ1VzZXInXG4gIH1cbn0sIHsgdGltZXN0YW1wczogdHJ1ZSwgc2tpcFZlcnNpb25pbmc6IHRydWUgfSlcblxuZXhwb3J0IGRlZmF1bHQgdGVuYW50bGVzc01vZGVsKCd2ZXJpZmljYXRpb25Ub2tlbicsIHZlcmlmaWNhdGlvblRva2VuU2NoZW1hKVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "verificationToken.js"
      ],
      "names": [
        "verificationTokenSchema",
        "Schema",
        "token",
        "type",
        "String",
        "required",
        "user",
        "Types",
        "ObjectId",
        "ref",
        "timestamps",
        "skipVersioning"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AAEA,IAAMA,uBAAuB,GAAG,IAAIC,gBAAJ,CAAW;AACzCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAEC,MADD;AAELC,IAAAA,QAAQ,EAAE;AAFL,GADkC;AAKzCC,EAAAA,IAAI,EAAE;AACJH,IAAAA,IAAI,EAAEF,iBAAOM,KAAP,CAAaC,QADf;AAEJC,IAAAA,GAAG,EAAE;AAFD;AALmC,CAAX,EAS7B;AAAEC,EAAAA,UAAU,EAAE,IAAd;AAAoBC,EAAAA,cAAc,EAAE;AAApC,CAT6B,CAAhC;;eAWe,kCAAgB,mBAAhB,EAAqCX,uBAArC,C",
      "sourceRoot": "/app/src/models",
      "sourcesContent": [
        "import { Schema } from 'mongoose'\nimport { tenantlessModel } from '../lib/multiTenant'\n\nconst verificationTokenSchema = new Schema({\n  token: {\n    type: String,\n    required: true\n  },\n  user: {\n    type: Schema.Types.ObjectId,\n    ref: 'User'\n  }\n}, { timestamps: true, skipVersioning: true })\n\nexport default tenantlessModel('verificationToken', verificationTokenSchema)\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573021617943
  },
  "{\"sourceRoot\":\"/app/src/utils\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/utils/helpers.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/utils",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/utils/helpers.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/utils/helpers.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/utils/helpers.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/utils",
        "sourceFileName": "helpers.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.generateFileName = exports.generateRandomKey = void 0;\n\nvar _storage = require(\"../lib/storage\");\n\nvar _uuid = _interopRequireDefault(require(\"uuid4\"));\n\nvar generateRandomKey = function generateRandomKey(length) {\n  var result = '';\n  var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  var charactersLength = characters.length;\n\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n\n  return result;\n};\n\nexports.generateRandomKey = generateRandomKey;\n\nvar generateFileName = function generateFileName(fileName, path) {\n  var tenantId = (0, _storage.getCurrentTenantId)();\n  var uuid = (0, _uuid[\"default\"])();\n\n  if (path) {\n    return \"\".concat(path, \"/\").concat(tenantId, \"_\").concat(uuid, \"_\").concat(fileName);\n  }\n\n  return \"\".concat(tenantId, \"_\").concat(uuid, \"_\").concat(fileName);\n};\n\nexports.generateFileName = generateFileName;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhlbHBlcnMuanMiXSwibmFtZXMiOlsiZ2VuZXJhdGVSYW5kb21LZXkiLCJsZW5ndGgiLCJyZXN1bHQiLCJjaGFyYWN0ZXJzIiwiY2hhcmFjdGVyc0xlbmd0aCIsImkiLCJjaGFyQXQiLCJNYXRoIiwiZmxvb3IiLCJyYW5kb20iLCJnZW5lcmF0ZUZpbGVOYW1lIiwiZmlsZU5hbWUiLCJwYXRoIiwidGVuYW50SWQiLCJ1dWlkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFFTyxJQUFNQSxpQkFBaUIsR0FBRyxTQUFwQkEsaUJBQW9CLENBQUFDLE1BQU0sRUFBSTtBQUN6QyxNQUFJQyxNQUFNLEdBQUcsRUFBYjtBQUNBLE1BQUlDLFVBQVUsR0FBRyxnRUFBakI7QUFDQSxNQUFJQyxnQkFBZ0IsR0FBR0QsVUFBVSxDQUFDRixNQUFsQzs7QUFDQSxPQUFLLElBQUlJLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLEdBQUdKLE1BQXBCLEVBQTRCSSxDQUFDLEVBQTdCLEVBQWlDO0FBQy9CSCxJQUFBQSxNQUFNLElBQUlDLFVBQVUsQ0FBQ0csTUFBWCxDQUFrQkMsSUFBSSxDQUFDQyxLQUFMLENBQVdELElBQUksQ0FBQ0UsTUFBTCxLQUFnQkwsZ0JBQTNCLENBQWxCLENBQVY7QUFDRDs7QUFDRCxTQUFPRixNQUFQO0FBQ0QsQ0FSTTs7OztBQVVBLElBQU1RLGdCQUFnQixHQUFHLFNBQW5CQSxnQkFBbUIsQ0FBQ0MsUUFBRCxFQUFXQyxJQUFYLEVBQW9CO0FBQ2xELE1BQU1DLFFBQVEsR0FBRyxrQ0FBakI7QUFDQSxNQUFNQyxJQUFJLEdBQUcsdUJBQWI7O0FBQ0EsTUFBSUYsSUFBSixFQUFVO0FBQ1IscUJBQVVBLElBQVYsY0FBa0JDLFFBQWxCLGNBQThCQyxJQUE5QixjQUFzQ0gsUUFBdEM7QUFDRDs7QUFFRCxtQkFBVUUsUUFBVixjQUFzQkMsSUFBdEIsY0FBOEJILFFBQTlCO0FBQ0QsQ0FSTSIsInNvdXJjZVJvb3QiOiIvYXBwL3NyYy91dGlscyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldEN1cnJlbnRUZW5hbnRJZCB9IGZyb20gJy4uL2xpYi9zdG9yYWdlJ1xuaW1wb3J0IHV1aWQ0IGZyb20gJ3V1aWQ0J1xuXG5leHBvcnQgY29uc3QgZ2VuZXJhdGVSYW5kb21LZXkgPSBsZW5ndGggPT4ge1xuICB2YXIgcmVzdWx0ID0gJyc7XG4gIHZhciBjaGFyYWN0ZXJzID0gJ0FCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5JztcbiAgdmFyIGNoYXJhY3RlcnNMZW5ndGggPSBjaGFyYWN0ZXJzLmxlbmd0aDtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgIHJlc3VsdCArPSBjaGFyYWN0ZXJzLmNoYXJBdChNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBjaGFyYWN0ZXJzTGVuZ3RoKSk7XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZXhwb3J0IGNvbnN0IGdlbmVyYXRlRmlsZU5hbWUgPSAoZmlsZU5hbWUsIHBhdGgpID0+IHtcbiAgY29uc3QgdGVuYW50SWQgPSBnZXRDdXJyZW50VGVuYW50SWQoKVxuICBjb25zdCB1dWlkID0gdXVpZDQoKVxuICBpZiAocGF0aCkge1xuICAgIHJldHVybiBgJHtwYXRofS8ke3RlbmFudElkfV8ke3V1aWR9XyR7ZmlsZU5hbWV9YFxuICB9XG5cbiAgcmV0dXJuIGAke3RlbmFudElkfV8ke3V1aWR9XyR7ZmlsZU5hbWV9YFxufVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "helpers.js"
      ],
      "names": [
        "generateRandomKey",
        "length",
        "result",
        "characters",
        "charactersLength",
        "i",
        "charAt",
        "Math",
        "floor",
        "random",
        "generateFileName",
        "fileName",
        "path",
        "tenantId",
        "uuid"
      ],
      "mappings": ";;;;;;;;;AAAA;;AACA;;AAEO,IAAMA,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,MAAM,EAAI;AACzC,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,UAAU,GAAG,gEAAjB;AACA,MAAIC,gBAAgB,GAAGD,UAAU,CAACF,MAAlC;;AACA,OAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,MAApB,EAA4BI,CAAC,EAA7B,EAAiC;AAC/BH,IAAAA,MAAM,IAAIC,UAAU,CAACG,MAAX,CAAkBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,gBAA3B,CAAlB,CAAV;AACD;;AACD,SAAOF,MAAP;AACD,CARM;;;;AAUA,IAAMQ,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,QAAD,EAAWC,IAAX,EAAoB;AAClD,MAAMC,QAAQ,GAAG,kCAAjB;AACA,MAAMC,IAAI,GAAG,uBAAb;;AACA,MAAIF,IAAJ,EAAU;AACR,qBAAUA,IAAV,cAAkBC,QAAlB,cAA8BC,IAA9B,cAAsCH,QAAtC;AACD;;AAED,mBAAUE,QAAV,cAAsBC,IAAtB,cAA8BH,QAA9B;AACD,CARM",
      "sourceRoot": "/app/src/utils",
      "sourcesContent": [
        "import { getCurrentTenantId } from '../lib/storage'\nimport uuid4 from 'uuid4'\n\nexport const generateRandomKey = length => {\n  var result = '';\n  var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  var charactersLength = characters.length;\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n\nexport const generateFileName = (fileName, path) => {\n  const tenantId = getCurrentTenantId()\n  const uuid = uuid4()\n  if (path) {\n    return `${path}/${tenantId}_${uuid}_${fileName}`\n  }\n\n  return `${tenantId}_${uuid}_${fileName}`\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573021617947
  },
  "{\"sourceRoot\":\"/app/src/constants\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/constants/errors.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/constants",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/constants/errors.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/constants/errors.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/constants/errors.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/constants",
        "sourceFileName": "errors.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar ERRORS = {\n  RESOURCE_ALREADY_EXISTS: 'RESOURCE_ALREADY_EXISTS',\n  EMAIL_ALREADY_EXISTS: 'EMAIL_ALREADY_EXISTS',\n  WRONG_CREDENTIALS: 'WRONG_CREDENTIALS',\n  TOKEN_EXPIRED: 'TOKEN_EXPIRED',\n  INVALID_PASSWORD: 'INVALID_PASSWORD',\n  RESOURCE_NOT_FOUND: 'RESOURCE_NOT_FOUND'\n};\nvar _default = ERRORS;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVycm9ycy5qcyJdLCJuYW1lcyI6WyJFUlJPUlMiLCJSRVNPVVJDRV9BTFJFQURZX0VYSVNUUyIsIkVNQUlMX0FMUkVBRFlfRVhJU1RTIiwiV1JPTkdfQ1JFREVOVElBTFMiLCJUT0tFTl9FWFBJUkVEIiwiSU5WQUxJRF9QQVNTV09SRCIsIlJFU09VUkNFX05PVF9GT1VORCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsSUFBTUEsTUFBTSxHQUFHO0FBQ2JDLEVBQUFBLHVCQUF1QixFQUFFLHlCQURaO0FBRWJDLEVBQUFBLG9CQUFvQixFQUFFLHNCQUZUO0FBR2JDLEVBQUFBLGlCQUFpQixFQUFFLG1CQUhOO0FBSWJDLEVBQUFBLGFBQWEsRUFBRSxlQUpGO0FBS2JDLEVBQUFBLGdCQUFnQixFQUFFLGtCQUxMO0FBTWJDLEVBQUFBLGtCQUFrQixFQUFFO0FBTlAsQ0FBZjtlQVNlTixNIiwic291cmNlUm9vdCI6Ii9hcHAvc3JjL2NvbnN0YW50cyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IEVSUk9SUyA9IHtcbiAgUkVTT1VSQ0VfQUxSRUFEWV9FWElTVFM6ICdSRVNPVVJDRV9BTFJFQURZX0VYSVNUUycsXG4gIEVNQUlMX0FMUkVBRFlfRVhJU1RTOiAnRU1BSUxfQUxSRUFEWV9FWElTVFMnLFxuICBXUk9OR19DUkVERU5USUFMUzogJ1dST05HX0NSRURFTlRJQUxTJyxcbiAgVE9LRU5fRVhQSVJFRDogJ1RPS0VOX0VYUElSRUQnLFxuICBJTlZBTElEX1BBU1NXT1JEOiAnSU5WQUxJRF9QQVNTV09SRCcsXG4gIFJFU09VUkNFX05PVF9GT1VORDogJ1JFU09VUkNFX05PVF9GT1VORCdcbn1cblxuZXhwb3J0IGRlZmF1bHQgRVJST1JTXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "errors.js"
      ],
      "names": [
        "ERRORS",
        "RESOURCE_ALREADY_EXISTS",
        "EMAIL_ALREADY_EXISTS",
        "WRONG_CREDENTIALS",
        "TOKEN_EXPIRED",
        "INVALID_PASSWORD",
        "RESOURCE_NOT_FOUND"
      ],
      "mappings": ";;;;;;AAAA,IAAMA,MAAM,GAAG;AACbC,EAAAA,uBAAuB,EAAE,yBADZ;AAEbC,EAAAA,oBAAoB,EAAE,sBAFT;AAGbC,EAAAA,iBAAiB,EAAE,mBAHN;AAIbC,EAAAA,aAAa,EAAE,eAJF;AAKbC,EAAAA,gBAAgB,EAAE,kBALL;AAMbC,EAAAA,kBAAkB,EAAE;AANP,CAAf;eASeN,M",
      "sourceRoot": "/app/src/constants",
      "sourcesContent": [
        "const ERRORS = {\n  RESOURCE_ALREADY_EXISTS: 'RESOURCE_ALREADY_EXISTS',\n  EMAIL_ALREADY_EXISTS: 'EMAIL_ALREADY_EXISTS',\n  WRONG_CREDENTIALS: 'WRONG_CREDENTIALS',\n  TOKEN_EXPIRED: 'TOKEN_EXPIRED',\n  INVALID_PASSWORD: 'INVALID_PASSWORD',\n  RESOURCE_NOT_FOUND: 'RESOURCE_NOT_FOUND'\n}\n\nexport default ERRORS\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1575001852202
  },
  "{\"sourceRoot\":\"/app/src/middlewares\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/middlewares/auth.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/middlewares",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/middlewares/auth.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/middlewares/auth.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/middlewares/auth.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/middlewares",
        "sourceFileName": "auth.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.authorize = exports.authenticate = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _app = _interopRequireDefault(require(\"../config/app\"));\n\nvar _user = _interopRequireDefault(require(\"../models/user\"));\n\nvar _permission = _interopRequireDefault(require(\"../models/permission\"));\n\nvar _role = _interopRequireDefault(require(\"../models/role\"));\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _storage = require(\"../lib/storage\");\n\nvar authenticate = function authenticate(req, res, next) {\n  var token, decoded, doc;\n  return _regenerator[\"default\"].async(function authenticate$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          token = req.headers.authorization && req.headers.authorization.split(\" \")[1];\n\n          if (token) {\n            _context.next = 4;\n            break;\n          }\n\n          throw new Error('Invalid token');\n\n        case 4:\n          decoded = _jsonwebtoken[\"default\"].verify(token, _app[\"default\"].authKey);\n\n          if (!decoded) {\n            _context.next = 19;\n            break;\n          }\n\n          _context.next = 8;\n          return _regenerator[\"default\"].awrap((0, _user[\"default\"])().findById(decoded.userId).populate('role', {\n            isSuper: true\n          }));\n\n        case 8:\n          doc = _context.sent;\n\n          if (doc) {\n            _context.next = 13;\n            break;\n          }\n\n          throw new Error('Invalid token');\n\n        case 13:\n          req.user = doc;\n          req.storeId = decoded.storeId;\n          (0, _storage.setCurrentTenantId)(doc.business);\n          next();\n\n        case 17:\n          _context.next = 20;\n          break;\n\n        case 19:\n          throw new Error('Invalid token');\n\n        case 20:\n          _context.next = 26;\n          break;\n\n        case 22:\n          _context.prev = 22;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n          return _context.abrupt(\"return\", res.status(401).json({\n            reason: _context.t0.message\n          }));\n\n        case 26:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 22]]);\n};\n\nexports.authenticate = authenticate;\n\nvar getPermissionsByRole = function getPermissionsByRole(role) {\n  var permissions, flatenPermissions;\n  return _regenerator[\"default\"].async(function getPermissionsByRole$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regenerator[\"default\"].awrap((0, _permission[\"default\"])().find({\n            role: role\n          }));\n\n        case 2:\n          permissions = _context2.sent;\n          flatenPermissions = [];\n          permissions.forEach(function (permission) {\n            if (permission.access) flatenPermissions.push(\"\".concat(permission.module, \":access\"));\n            if (permission.edit) flatenPermissions.push(\"\".concat(permission.module, \":edit\"));\n            if (permission[\"delete\"]) flatenPermissions.push(\"\".concat(permission.module, \":delete\"));\n          });\n          return _context2.abrupt(\"return\", flatenPermissions);\n\n        case 6:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  });\n};\n\nvar authorize = function authorize() {\n  for (var _len = arguments.length, allowed = new Array(_len), _key = 0; _key < _len; _key++) {\n    allowed[_key] = arguments[_key];\n  }\n\n  return function _callee(req, res, next) {\n    var permissions, hasPermission;\n    return _regenerator[\"default\"].async(function _callee$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n\n            if (!(req.user.isSuper || req.user.role && req.user.role.isSuper)) {\n              _context3.next = 3;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", next());\n\n          case 3:\n            if (req.user.role) {\n              _context3.next = 5;\n              break;\n            }\n\n            throw new Error('ACCESS_FORBIDDEN');\n\n          case 5:\n            _context3.next = 7;\n            return _regenerator[\"default\"].awrap(getPermissionsByRole(req.user.role._id));\n\n          case 7:\n            permissions = _context3.sent;\n            req.user.permissions = permissions;\n            hasPermission = permissions.some(function (p) {\n              return allowed.includes(p);\n            });\n\n            if (!hasPermission) {\n              _context3.next = 14;\n              break;\n            }\n\n            next();\n            _context3.next = 15;\n            break;\n\n          case 14:\n            throw new Error('ACCESS_FORBIDDEN');\n\n          case 15:\n            _context3.next = 21;\n            break;\n\n          case 17:\n            _context3.prev = 17;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.log(_context3.t0);\n            return _context3.abrupt(\"return\", res.status(403).json({\n              error: true,\n              reason: _context3.t0.message\n            }));\n\n          case 21:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 17]]);\n  };\n};\n\nexports.authorize = authorize;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGguanMiXSwibmFtZXMiOlsiYXV0aGVudGljYXRlIiwicmVxIiwicmVzIiwibmV4dCIsInRva2VuIiwiaGVhZGVycyIsImF1dGhvcml6YXRpb24iLCJzcGxpdCIsIkVycm9yIiwiZGVjb2RlZCIsImp3dCIsInZlcmlmeSIsImNvbmZpZyIsImF1dGhLZXkiLCJmaW5kQnlJZCIsInVzZXJJZCIsInBvcHVsYXRlIiwiaXNTdXBlciIsImRvYyIsInVzZXIiLCJzdG9yZUlkIiwiYnVzaW5lc3MiLCJjb25zb2xlIiwibG9nIiwic3RhdHVzIiwianNvbiIsInJlYXNvbiIsIm1lc3NhZ2UiLCJnZXRQZXJtaXNzaW9uc0J5Um9sZSIsInJvbGUiLCJmaW5kIiwicGVybWlzc2lvbnMiLCJmbGF0ZW5QZXJtaXNzaW9ucyIsImZvckVhY2giLCJwZXJtaXNzaW9uIiwiYWNjZXNzIiwicHVzaCIsIm1vZHVsZSIsImVkaXQiLCJhdXRob3JpemUiLCJhbGxvd2VkIiwiX2lkIiwiaGFzUGVybWlzc2lvbiIsInNvbWUiLCJwIiwiaW5jbHVkZXMiLCJlcnJvciJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFFTyxJQUFNQSxZQUFZLEdBQUcsU0FBZkEsWUFBZSxDQUFPQyxHQUFQLEVBQVlDLEdBQVosRUFBaUJDLElBQWpCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRWxCQyxVQUFBQSxLQUZrQixHQUVWSCxHQUFHLENBQUNJLE9BQUosQ0FBWUMsYUFBWixJQUE2QkwsR0FBRyxDQUFDSSxPQUFKLENBQVlDLGFBQVosQ0FBMEJDLEtBQTFCLENBQWdDLEdBQWhDLEVBQXFDLENBQXJDLENBRm5COztBQUFBLGNBR25CSCxLQUhtQjtBQUFBO0FBQUE7QUFBQTs7QUFBQSxnQkFHTixJQUFJSSxLQUFKLENBQVUsZUFBVixDQUhNOztBQUFBO0FBSWxCQyxVQUFBQSxPQUprQixHQUlSQyx5QkFBSUMsTUFBSixD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QUEsV0FKSDtBQUtIOUIsWUFBQUEsR0FBRyxDQUFDa0IsSUFBSixDQUFTWSxXQUFULEdBQXVCQSxXQUF2QjtBQUNNVyxZQUFBQSxhQU5ILEdBTW1CWCxXQUFXLENBQUNZLElBQVosQ0FBaUIsVUFBQUMsQ0FBQztBQUFBLHFCQUFJSixPQUFPLENBQUNLLFFBQVIsQ0FBaUJELENBQWpCLENBQUo7QUFBQSxhQUFsQixDQU5uQjs7QUFBQSxpQkFPQ0YsYUFQRDtBQUFBO0FBQUE7QUFBQTs7QUFPZ0J2QyxZQUFBQSxJQUFJO0FBUHBCO0FBQUE7O0FBQUE7QUFBQSxrQkFRUSxJQUFJSyxLQUFKLENBQVUsa0JBQVYsQ0FSUjs7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBVUhjLFlBQUFBLE9BQU8sQ0FBQ0MsR0FBUjtBQVZHLDhDQVdJckIsR0FBRyxDQUFDc0IsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQUVxQixjQUFBQSxLQUFLLEVBQUUsSUFBVDtBQUFlcEIsY0FBQUEsTUFBTSxFQUFFLGFBQUlDO0FBQTNCLGFBQXJCLENBWEo7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBUDtBQWNELENBZk0iLCJzb3VyY2VSb290IjoiL2FwcC9zcmMvbWlkZGxld2FyZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY29uZmlnIGZyb20gJy4uL2NvbmZpZy9hcHAnXG5pbXBvcnQgX1VzZXJNb2RlbCBmcm9tICcuLi9tb2RlbHMvdXNlcidcbmltcG9ydCBfUGVybWlzc2lvbk1vZGVsIGZyb20gJy4uL21vZGVscy9wZXJtaXNzaW9uJ1xuaW1wb3J0IF9Sb2xlTW9kZWwgZnJvbSAnLi4vbW9kZWxzL3JvbGUnXG5pbXBvcnQgand0IGZyb20gJ2pzb253ZWJ0b2tlbidcbmltcG9ydCB7IHNldEN1cnJlbnRUZW5hbnRJZCB9IGZyb20gJy4uL2xpYi9zdG9yYWdlJ1xuXG5leHBvcnQgY29uc3QgYXV0aGVudGljYXRlID0gYXN5bmMgKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgdG9rZW4gPSByZXEuaGVhZGVycy5hdXRob3JpemF0aW9uICYmIHJlcS5oZWFkZXJzLmF1dGhvcml6YXRpb24uc3BsaXQoXCIgXCIpWzFdXG4gICAgaWYgKCF0b2tlbikgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIHRva2VuJylcbiAgICBjb25zdCBkZWNvZGVkID0gand0LnZlcmlmeSh0b2tlbiwgY29uZmlnLmF1dGhLZXkpXG4gICAgaWYgKGRlY29kZWQpIHtcbiAgICAgIGNvbnN0IGRvYyA9IGF3YWl0IF9Vc2VyTW9kZWwoKS5maW5kQnlJZChkZWNvZGVkLnVzZXJJZCkucG9wdWxhdGUoJ3JvbGUnLCB7IGlzU3VwZXI6IHRydWUgfSlcbiAgICAgIGlmICghZG9jKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCB0b2tlbicpXG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXEudXNlciA9IGRvY1xuICAgICAgICByZXEuc3RvcmVJZCA9IGRlY29kZWQuc3RvcmVJZFxuICAgICAgICBzZXRDdXJyZW50VGVuYW50SWQoZG9jLmJ1c2luZXNzKVxuICAgICAgICBuZXh0KClcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIHRva2VuJylcbiAgICB9XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIGNvbnNvbGUubG9nKGVycilcbiAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDEpLmpzb24oeyByZWFzb246IGVyci5tZXNzYWdlIH0pXG4gIH1cbn1cblxuY29uc3QgZ2V0UGVybWlzc2lvbnNCeVJvbGUgPSBhc3luYyByb2xlID0+IHtcbiAgY29uc3QgcGVybWlzc2lvbnMgPSBhd2FpdCBfUGVybWlzc2lvbk1vZGVsKCkuZmluZCh7IHJvbGUgfSlcbiAgY29uc3QgZmxhdGVuUGVybWlzc2lvbnMgPSBbXVxuICBwZXJtaXNzaW9ucy5mb3JFYWNoKHBlcm1pc3Npb24gPT4ge1xuICAgIGlmIChwZXJtaXNzaW9uLmFjY2VzcykgZmxhdGVuUGVybWlzc2lvbnMucHVzaChgJHtwZXJtaXNzaW9uLm1vZHVsZX06YWNjZXNzYClcbiAgICBpZiAocGVybWlzc2lvbi5lZGl0KSBmbGF0ZW5QZXJtaXNzaW9ucy5wdXNoKGAke3Blcm1pc3Npb24ubW9kdWxlfTplZGl0YClcbiAgICBpZiAocGVybWlzc2lvbi5kZWxldGUpIGZsYXRlblBlcm1pc3Npb25zLnB1c2goYCR7cGVybWlzc2lvbi5tb2R1bGV9OmRlbGV0ZWApXG4gIH0pXG4gIHJldHVybiBmbGF0ZW5QZXJtaXNzaW9uc1xufVxuXG5leHBvcnQgY29uc3QgYXV0aG9yaXplID0gKC4uLmFsbG93ZWQpID0+IHtcbiAgcmV0dXJuIGFzeW5jIChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgIHRyeSB7XG4gICAgICBpZiAocmVxLnVzZXIuaXNTdXBlciB8fCAocmVxLnVzZXIucm9sZSAmJiByZXEudXNlci5yb2xlLmlzU3VwZXIpKSByZXR1cm4gbmV4dCgpXG4gICAgICBpZiAoIXJlcS51c2VyLnJvbGUpIHRocm93IG5ldyBFcnJvcignQUNDRVNTX0ZPUkJJRERFTicpXG4gICAgICBjb25zdCBwZXJtaXNzaW9ucyA9IGF3YWl0IGdldFBlcm1pc3Npb25zQnlSb2xlKHJlcS51c2VyLnJvbGUuX2lkKVxuICAgICAgcmVxLnVzZXIucGVybWlzc2lvbnMgPSBwZXJtaXNzaW9uc1xuICAgICAgY29uc3QgaGFzUGVybWlzc2lvbiA9IHBlcm1pc3Npb25zLnNvbWUocCA9PiBhbGxvd2VkLmluY2x1ZGVzKHApKVxuICAgICAgaWYgKGhhc1Blcm1pc3Npb24pIG5leHQoKVxuICAgICAgZWxzZSB0aHJvdyBuZXcgRXJyb3IoJ0FDQ0VTU19GT1JCSURERU4nKVxuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgY29uc29sZS5sb2coZXJyKVxuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAzKS5qc29uKHsgZXJyb3I6IHRydWUsIHJlYXNvbjogZXJyLm1lc3NhZ2UgfSlcbiAgICB9XG4gIH1cbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "auth.js"
      ],
      "names": [
        "authenticate",
        "req",
        "res",
        "next",
        "token",
        "headers",
        "authorization",
        "split",
        "Error",
        "decoded",
        "jwt",
        "verify",
        "config",
        "authKey",
        "findById",
        "userId",
        "populate",
        "isSuper",
        "doc",
        "user",
        "storeId",
        "business",
        "console",
        "log",
        "status",
        "json",
        "reason",
        "message",
        "getPermissionsByRole",
        "role",
        "find",
        "permissions",
        "flatenPermissions",
        "forEach",
        "permission",
        "access",
        "push",
        "module",
        "edit",
        "authorize",
        "allowed",
        "_id",
        "hasPermission",
        "some",
        "p",
        "includes",
        "error"
      ],
      "mappings": "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",
      "sourceRoot": "/app/src/middlewares",
      "sourcesContent": [
        "import config from '../config/app'\nimport _UserModel from '../models/user'\nimport _PermissionModel from '../models/permission'\nimport _RoleModel from '../models/role'\nimport jwt from 'jsonwebtoken'\nimport { setCurrentTenantId } from '../lib/storage'\n\nexport const authenticate = async (req, res, next) => {\n  try {\n    const token = req.headers.authorization && req.headers.authorization.split(\" \")[1]\n    if (!token) throw new Error('Invalid token')\n    const decoded = jwt.verify(token, config.authKey)\n    if (decoded) {\n      const doc = await _UserModel().findById(decoded.userId).populate('role', { isSuper: true })\n      if (!doc) {\n        throw new Error('Invalid token')\n      } else {\n        req.user = doc\n        req.storeId = decoded.storeId\n        setCurrentTenantId(doc.business)\n        next()\n      }\n    } else {\n      throw new Error('Invalid token')\n    }\n  } catch (err) {\n    console.log(err)\n    return res.status(401).json({ reason: err.message })\n  }\n}\n\nconst getPermissionsByRole = async role => {\n  const permissions = await _PermissionModel().find({ role })\n  const flatenPermissions = []\n  permissions.forEach(permission => {\n    if (permission.access) flatenPermissions.push(`${permission.module}:access`)\n    if (permission.edit) flatenPermissions.push(`${permission.module}:edit`)\n    if (permission.delete) flatenPermissions.push(`${permission.module}:delete`)\n  })\n  return flatenPermissions\n}\n\nexport const authorize = (...allowed) => {\n  return async (req, res, next) => {\n    try {\n      if (req.user.isSuper || (req.user.role && req.user.role.isSuper)) return next()\n      if (!req.user.role) throw new Error('ACCESS_FORBIDDEN')\n      const permissions = await getPermissionsByRole(req.user.role._id)\n      req.user.permissions = permissions\n      const hasPermission = permissions.some(p => allowed.includes(p))\n      if (hasPermission) next()\n      else throw new Error('ACCESS_FORBIDDEN')\n    } catch (err) {\n      console.log(err)\n      return res.status(403).json({ error: true, reason: err.message })\n    }\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573021617939
  },
  "{\"sourceRoot\":\"/app/src/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/routes/roles.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/routes/roles.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/routes/roles.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/routes/roles.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/routes",
        "sourceFileName": "roles.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _role = _interopRequireDefault(require(\"../models/role\"));\n\nvar _role2 = require(\"../controllers/role\");\n\nvar router = (0, _express.Router)();\nrouter.get('/', _role2.getRoles);\nrouter[\"delete\"]('/', _role2.deleteRole);\nrouter.post('/create', _role2.createRole);\nrouter.post('/update', _role2.updateRole);\nrouter.post('/delete', _role2.deleteRole);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJvbGVzLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsImdldCIsImdldFJvbGVzIiwiZGVsZXRlUm9sZSIsInBvc3QiLCJjcmVhdGVSb2xlIiwidXBkYXRlUm9sZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBRUEsSUFBTUEsTUFBTSxHQUFHLHNCQUFmO0FBRUFBLE1BQU0sQ0FBQ0MsR0FBUCxDQUFXLEdBQVgsRUFBZ0JDLGVBQWhCO0FBQ0FGLE1BQU0sVUFBTixDQUFjLEdBQWQsRUFBbUJHLGlCQUFuQjtBQUNBSCxNQUFNLENBQUNJLElBQVAsQ0FBWSxTQUFaLEVBQXVCQyxpQkFBdkI7QUFDQUwsTUFBTSxDQUFDSSxJQUFQLENBQVksU0FBWixFQUF1QkUsaUJBQXZCO0FBQ0FOLE1BQU0sQ0FBQ0ksSUFBUCxDQUFZLFNBQVosRUFBdUJELGlCQUF2QjtlQUVlSCxNIiwic291cmNlUm9vdCI6Ii9hcHAvc3JjL3JvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJvdXRlciB9IGZyb20gJ2V4cHJlc3MnXG5pbXBvcnQgX1JvbGVNb2RlbCBmcm9tICcuLi9tb2RlbHMvcm9sZSdcbmltcG9ydCB7IGNyZWF0ZVJvbGUsIGdldFJvbGVzLCBkZWxldGVSb2xlLCB1cGRhdGVSb2xlIH0gZnJvbSAnLi4vY29udHJvbGxlcnMvcm9sZSdcblxuY29uc3Qgcm91dGVyID0gUm91dGVyKClcblxucm91dGVyLmdldCgnLycsIGdldFJvbGVzKVxucm91dGVyLmRlbGV0ZSgnLycsIGRlbGV0ZVJvbGUpXG5yb3V0ZXIucG9zdCgnL2NyZWF0ZScsIGNyZWF0ZVJvbGUpXG5yb3V0ZXIucG9zdCgnL3VwZGF0ZScsIHVwZGF0ZVJvbGUpXG5yb3V0ZXIucG9zdCgnL2RlbGV0ZScsIGRlbGV0ZVJvbGUpXG5cbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "roles.js"
      ],
      "names": [
        "router",
        "get",
        "getRoles",
        "deleteRole",
        "post",
        "createRole",
        "updateRole"
      ],
      "mappings": ";;;;;;;;;AAAA;;AACA;;AACA;;AAEA,IAAMA,MAAM,GAAG,sBAAf;AAEAA,MAAM,CAACC,GAAP,CAAW,GAAX,EAAgBC,eAAhB;AACAF,MAAM,UAAN,CAAc,GAAd,EAAmBG,iBAAnB;AACAH,MAAM,CAACI,IAAP,CAAY,SAAZ,EAAuBC,iBAAvB;AACAL,MAAM,CAACI,IAAP,CAAY,SAAZ,EAAuBE,iBAAvB;AACAN,MAAM,CAACI,IAAP,CAAY,SAAZ,EAAuBD,iBAAvB;eAEeH,M",
      "sourceRoot": "/app/src/routes",
      "sourcesContent": [
        "import { Router } from 'express'\nimport _RoleModel from '../models/role'\nimport { createRole, getRoles, deleteRole, updateRole } from '../controllers/role'\n\nconst router = Router()\n\nrouter.get('/', getRoles)\nrouter.delete('/', deleteRole)\nrouter.post('/create', createRole)\nrouter.post('/update', updateRole)\nrouter.post('/delete', deleteRole)\n\nexport default router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573021617943
  },
  "{\"sourceRoot\":\"/app/src/controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/controllers/role.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/controllers/role.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/controllers/role.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/controllers/role.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/controllers",
        "sourceFileName": "role.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deleteRole = exports.getRoles = exports.updateRole = exports.createRole = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _role = _interopRequireDefault(require(\"../models/role\"));\n\nvar _joi = _interopRequireDefault(require(\"@hapi/joi\"));\n\nvar createRoleSchema = _joi[\"default\"].object({\n  name: _joi[\"default\"].string().required()\n});\n\nvar deleteRoleSchema = _joi[\"default\"].object({\n  id: _joi[\"default\"].string().required()\n});\n\nvar updateRoleSchema = _joi[\"default\"].object({\n  id: _joi[\"default\"].string().required(),\n  name: _joi[\"default\"].string(),\n  isSuper: _joi[\"default\"][\"boolean\"](),\n  permissions: _joi[\"default\"].array()\n});\n\nvar defaultPermisions = function defaultPermisions() {\n  function preparePermissions() {\n    for (var _len = arguments.length, modules = new Array(_len), _key = 0; _key < _len; _key++) {\n      modules[_key] = arguments[_key];\n    }\n\n    return modules.map(function (module) {\n      return {\n        module: module,\n        access: true,\n        edit: true,\n        \"delete\": false,\n        actions: {}\n      };\n    });\n  }\n\n  return preparePermissions('pos', 'inventory', 'invoice', 'employees');\n};\n\nvar createRole = function createRole(req, res) {\n  var validation, name, result;\n  return _regenerator[\"default\"].async(function createRole$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          validation = _joi[\"default\"].validate(req.body, createRoleSchema);\n\n          if (!validation.error) {\n            _context.next = 4;\n            break;\n          }\n\n          throw new Error(validation.error);\n\n        case 4:\n          name = req.body.name;\n          _context.next = 7;\n          return _regenerator[\"default\"].awrap((0, _role[\"default\"])().create({\n            name: name,\n            permissions: defaultPermisions()\n          }));\n\n        case 7:\n          result = _context.sent;\n          return _context.abrupt(\"return\", res.status(201).json({\n            data: result\n          }));\n\n        case 11:\n          _context.prev = 11;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n          return _context.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context.t0.message\n          }));\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 11]]);\n};\n\nexports.createRole = createRole;\n\nvar updateRole = function updateRole(req, res) {\n  var validation, _req$body, id, rest, result;\n\n  return _regenerator[\"default\"].async(function updateRole$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          validation = _joi[\"default\"].validate(req.body, updateRoleSchema);\n\n          if (!validation.error) {\n            _context2.next = 4;\n            break;\n          }\n\n          throw new Error(validation.error);\n\n        case 4:\n          _req$body = req.body, id = _req$body.id, rest = (0, _objectWithoutProperties2[\"default\"])(_req$body, [\"id\"]);\n          _context2.next = 7;\n          return _regenerator[\"default\"].awrap((0, _role[\"default\"])().findByIdAndUpdate(id, rest, {\n            \"new\": true\n          }));\n\n        case 7:\n          result = _context2.sent;\n          return _context2.abrupt(\"return\", res.json({\n            data: result\n          }));\n\n        case 11:\n          _context2.prev = 11;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0);\n          return _context2.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context2.t0.message\n          }));\n\n        case 15:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 11]]);\n};\n\nexports.updateRole = updateRole;\n\nvar getRoles = function getRoles(req, res) {\n  var _req$query, page, limit, data;\n\n  return _regenerator[\"default\"].async(function getRoles$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _req$query = req.query, page = _req$query.page, limit = _req$query.limit;\n          _context3.next = 4;\n          return _regenerator[\"default\"].awrap((0, _role[\"default\"])().paginate({}, {\n            page: page,\n            limit: limit\n          }));\n\n        case 4:\n          data = _context3.sent;\n          return _context3.abrupt(\"return\", res.json(data));\n\n        case 8:\n          _context3.prev = 8;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(_context3.t0);\n          return _context3.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context3.t0.message\n          }));\n\n        case 12:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 8]]);\n};\n\nexports.getRoles = getRoles;\n\nvar deleteRole = function deleteRole(req, res) {\n  var validation, id, result;\n  return _regenerator[\"default\"].async(function deleteRole$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          validation = _joi[\"default\"].validate(req.body, deleteRoleSchema);\n\n          if (!validation.error) {\n            _context4.next = 4;\n            break;\n          }\n\n          throw new Error(validation.error);\n\n        case 4:\n          id = req.body.id;\n          _context4.next = 7;\n          return _regenerator[\"default\"].awrap((0, _role[\"default\"])().findByIdAndDelete(id));\n\n        case 7:\n          result = _context4.sent;\n          return _context4.abrupt(\"return\", res.json({\n            data: result\n          }));\n\n        case 11:\n          _context4.prev = 11;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.log(_context4.t0);\n          return _context4.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context4.t0.message\n          }));\n\n        case 15:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, [[0, 11]]);\n};\n\nexports.deleteRole = deleteRole;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "role.js"
      ],
      "names": [
        "createRoleSchema",
        "Joi",
        "object",
        "name",
        "string",
        "required",
        "deleteRoleSchema",
        "id",
        "updateRoleSchema",
        "isSuper",
        "permissions",
        "array",
        "defaultPermisions",
        "preparePermissions",
        "modules",
        "map",
        "module",
        "access",
        "edit",
        "actions",
        "createRole",
        "req",
        "res",
        "validation",
        "validate",
        "body",
        "error",
        "Error",
        "create",
        "result",
        "status",
        "json",
        "data",
        "console",
        "log",
        "reason",
        "message",
        "updateRole",
        "rest",
        "findByIdAndUpdate",
        "getRoles",
        "query",
        "page",
        "limit",
        "paginate",
        "deleteRole",
        "findByIdAndDelete"
      ],
      "mappings": "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",
      "sourceRoot": "/app/src/controllers",
      "sourcesContent": [
        "import _RoleModel from '../models/role'\nimport Joi from '@hapi/joi'\n\nconst createRoleSchema = Joi.object({\n  name: Joi.string().required()\n})\n\nconst deleteRoleSchema = Joi.object({\n  id: Joi.string().required()\n})\n\nconst updateRoleSchema = Joi.object({\n  id: Joi.string().required(),\n  name: Joi.string(),\n  isSuper: Joi.boolean(),\n  permissions: Joi.array()\n})\n\nconst defaultPermisions = () => {\n  function preparePermissions(...modules) {\n    return modules.map((module) => {\n      return { module, access: true, edit: true, delete: false, actions: {} }\n    })\n  }\n\n  return preparePermissions('pos', 'inventory', 'invoice', 'employees')\n}\n\nexport const createRole = async (req, res) => {\n  try {\n    const validation = Joi.validate(req.body, createRoleSchema)\n    if (validation.error) throw new Error(validation.error)\n\n    const { name } = req.body\n    const result = await _RoleModel().create({ name, permissions: defaultPermisions() })\n    return res.status(201).json({ data: result })\n  } catch (err) {\n    console.log(err)\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const updateRole = async (req, res) => {\n  try {\n    const validation = Joi.validate(req.body, updateRoleSchema)\n    if (validation.error) throw new Error(validation.error)\n\n    const { id, ...rest } = req.body\n    const result = await _RoleModel().findByIdAndUpdate(id, rest, { new: true })\n    return res.json({ data: result })\n  } catch (err) {\n    console.log(err)\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const getRoles = async (req, res) => {\n  try {\n    const { page, limit } = req.query\n    const data = await _RoleModel().paginate({}, { page, limit })\n    return res.json(data)\n  } catch (err) {\n    console.log(err)\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const deleteRole = async (req, res) => {\n  try {\n    const validation = Joi.validate(req.body, deleteRoleSchema)\n    if (validation.error) throw new Error(validation.error)\n\n    const { id } = req.body\n    const result = await _RoleModel().findByIdAndDelete(id)\n    return res.json({ data: result })\n  } catch (err) {\n    console.log(err)\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573021617939
  },
  "{\"sourceRoot\":\"/app/src/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/routes/employees.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/routes/employees.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/routes/employees.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/routes/employees.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/routes",
        "sourceFileName": "employees.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _employee = require(\"../controllers/employee\");\n\nvar router = (0, _express.Router)();\nrouter.get('/', _employee.getEmployees);\nrouter.post('/create', _employee.createEmployee);\nrouter.post('/delete', _employee.deleteEmployee);\nrouter.post('/update', _employee.updateEmployee);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVtcGxveWVlcy5qcyJdLCJuYW1lcyI6WyJyb3V0ZXIiLCJnZXQiLCJnZXRFbXBsb3llZXMiLCJwb3N0IiwiY3JlYXRlRW1wbG95ZWUiLCJkZWxldGVFbXBsb3llZSIsInVwZGF0ZUVtcGxveWVlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBRUE7O0FBQ0EsSUFBTUEsTUFBTSxHQUFHLHNCQUFmO0FBRUFBLE1BQU0sQ0FBQ0MsR0FBUCxDQUFXLEdBQVgsRUFBZ0JDLHNCQUFoQjtBQUNBRixNQUFNLENBQUNHLElBQVAsQ0FBWSxTQUFaLEVBQXVCQyx3QkFBdkI7QUFDQUosTUFBTSxDQUFDRyxJQUFQLENBQVksU0FBWixFQUF1QkUsd0JBQXZCO0FBQ0FMLE1BQU0sQ0FBQ0csSUFBUCxDQUFZLFNBQVosRUFBdUJHLHdCQUF2QjtlQUdlTixNIiwic291cmNlUm9vdCI6Ii9hcHAvc3JjL3JvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJvdXRlciB9IGZyb20gJ2V4cHJlc3MnXG5cbmltcG9ydCB7IGdldEVtcGxveWVlcywgY3JlYXRlRW1wbG95ZWUsIGRlbGV0ZUVtcGxveWVlLCB1cGRhdGVFbXBsb3llZSB9IGZyb20gJy4uL2NvbnRyb2xsZXJzL2VtcGxveWVlJ1xuY29uc3Qgcm91dGVyID0gUm91dGVyKClcblxucm91dGVyLmdldCgnLycsIGdldEVtcGxveWVlcylcbnJvdXRlci5wb3N0KCcvY3JlYXRlJywgY3JlYXRlRW1wbG95ZWUpXG5yb3V0ZXIucG9zdCgnL2RlbGV0ZScsIGRlbGV0ZUVtcGxveWVlKVxucm91dGVyLnBvc3QoJy91cGRhdGUnLCB1cGRhdGVFbXBsb3llZSlcblxuXG5leHBvcnQgZGVmYXVsdCByb3V0ZXJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "employees.js"
      ],
      "names": [
        "router",
        "get",
        "getEmployees",
        "post",
        "createEmployee",
        "deleteEmployee",
        "updateEmployee"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA;;AACA,IAAMA,MAAM,GAAG,sBAAf;AAEAA,MAAM,CAACC,GAAP,CAAW,GAAX,EAAgBC,sBAAhB;AACAF,MAAM,CAACG,IAAP,CAAY,SAAZ,EAAuBC,wBAAvB;AACAJ,MAAM,CAACG,IAAP,CAAY,SAAZ,EAAuBE,wBAAvB;AACAL,MAAM,CAACG,IAAP,CAAY,SAAZ,EAAuBG,wBAAvB;eAGeN,M",
      "sourceRoot": "/app/src/routes",
      "sourcesContent": [
        "import { Router } from 'express'\n\nimport { getEmployees, createEmployee, deleteEmployee, updateEmployee } from '../controllers/employee'\nconst router = Router()\n\nrouter.get('/', getEmployees)\nrouter.post('/create', createEmployee)\nrouter.post('/delete', deleteEmployee)\nrouter.post('/update', updateEmployee)\n\n\nexport default router\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573021617943
  },
  "{\"sourceRoot\":\"/app/src/controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/controllers/employee.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/controllers/employee.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/controllers/employee.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/controllers/employee.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/controllers",
        "sourceFileName": "employee.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deleteEmployee = exports.updateEmployee = exports.createEmployee = exports.getEmployees = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _user = _interopRequireDefault(require(\"../models/user\"));\n\nvar _joi = _interopRequireDefault(require(\"@hapi/joi\"));\n\nvar _errors = _interopRequireDefault(require(\"../constants/errors\"));\n\nvar registerSchema = _joi[\"default\"].object({\n  name: _joi[\"default\"].string().min(1).required(),\n  email: _joi[\"default\"].string().email().required(),\n  password: _joi[\"default\"].string().min(3).required(),\n  country: _joi[\"default\"].string().optional().allow(''),\n  city: _joi[\"default\"].string().optional().allow(''),\n  phone: _joi[\"default\"].string().optional().allow(''),\n  address: _joi[\"default\"].string().optional().allow(''),\n  zip: _joi[\"default\"].string().optional().allow(''),\n  defaultStore: _joi[\"default\"].string().required(),\n  role: _joi[\"default\"].string().required(),\n  accessPin: _joi[\"default\"].string().required()\n});\n\nvar updateSchema = _joi[\"default\"].object({\n  id: _joi[\"default\"].string().required(),\n  name: _joi[\"default\"].string().min(1).required(),\n  email: _joi[\"default\"].string().email().required(),\n  password: _joi[\"default\"].string().min(3).optional().allow(''),\n  country: _joi[\"default\"].string().optional().allow(''),\n  city: _joi[\"default\"].string().optional().allow(''),\n  phone: _joi[\"default\"].string().optional().allow(''),\n  address: _joi[\"default\"].string().optional().allow(''),\n  zip: _joi[\"default\"].string().optional().allow(''),\n  defaultStore: _joi[\"default\"].string().required(),\n  role: _joi[\"default\"].string().required(),\n  accessPin: _joi[\"default\"].string().required()\n});\n\nvar deleteSchema = _joi[\"default\"].object({\n  id: _joi[\"default\"].string().required()\n});\n\nvar getEmployees = function getEmployees(req, res) {\n  var business, _req$query, page, limit, data;\n\n  return _regenerator[\"default\"].async(function getEmployees$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          business = req.user.business;\n          _req$query = req.query, page = _req$query.page, limit = _req$query.limit;\n          _context.next = 5;\n          return _regenerator[\"default\"].awrap((0, _user[\"default\"])().paginate({\n            business: business,\n            isDelete: false,\n            isSuper: false\n          }, {\n            page: page,\n            limit: limit,\n            populate: 'role'\n          }));\n\n        case 5:\n          data = _context.sent;\n          return _context.abrupt(\"return\", res.json(data));\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n          return _context.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context.t0.message\n          }));\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 9]]);\n};\n\nexports.getEmployees = getEmployees;\n\nvar createEmployee = function createEmployee(req, res) {\n  var validation, business, _req$body, name, email, password, country, city, phone, address, zip, defaultStore, role, accessPin, existingUser, data;\n\n  return _regenerator[\"default\"].async(function createEmployee$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          validation = _joi[\"default\"].validate(req.body, registerSchema);\n\n          if (!validation.error) {\n            _context2.next = 4;\n            break;\n          }\n\n          throw new Error(validation.error);\n\n        case 4:\n          business = req.user.business;\n          _req$body = req.body, name = _req$body.name, email = _req$body.email, password = _req$body.password, country = _req$body.country, city = _req$body.city, phone = _req$body.phone, address = _req$body.address, zip = _req$body.zip, defaultStore = _req$body.defaultStore, role = _req$body.role, accessPin = _req$body.accessPin;\n          _context2.next = 8;\n          return _regenerator[\"default\"].awrap((0, _user[\"default\"])().findOne({\n            business: business,\n            email: email\n          }));\n\n        case 8:\n          existingUser = _context2.sent;\n\n          if (!existingUser) {\n            _context2.next = 11;\n            break;\n          }\n\n          throw new Error(_errors[\"default\"].EMAIL_ALREADY_EXISTS);\n\n        case 11:\n          _context2.next = 13;\n          return _regenerator[\"default\"].awrap((0, _user[\"default\"])().create({\n            name: name,\n            email: email,\n            password: password,\n            business: req.user.business,\n            defaultStore: defaultStore,\n            role: role,\n            accessPin: accessPin,\n            country: country,\n            city: city,\n            phone: phone,\n            address: address,\n            zip: zip,\n            isActive: true\n          }));\n\n        case 13:\n          data = _context2.sent;\n          return _context2.abrupt(\"return\", res.json({\n            data: data\n          }));\n\n        case 17:\n          _context2.prev = 17;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0);\n\n          if (!(_context2.t0.message === _errors[\"default\"].EMAIL_ALREADY_EXISTS)) {\n            _context2.next = 22;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", res.status(409).json({\n            error: true,\n            reason: _context2.t0.message\n          }));\n\n        case 22:\n          return _context2.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context2.t0.message\n          }));\n\n        case 23:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 17]]);\n};\n\nexports.createEmployee = createEmployee;\n\nvar updateEmployee = function updateEmployee(req, res) {\n  var validation, _req$body2, _id, name, email, password, country, city, phone, address, zip, defaultStore, role, accessPin, toUpdate, existingUser, data;\n\n  return _regenerator[\"default\"].async(function updateEmployee$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          validation = _joi[\"default\"].validate(req.body, updateSchema);\n\n          if (!validation.error) {\n            _context3.next = 4;\n            break;\n          }\n\n          throw new Error(validation.error);\n\n        case 4:\n          _req$body2 = req.body, _id = _req$body2.id, name = _req$body2.name, email = _req$body2.email, password = _req$body2.password, country = _req$body2.country, city = _req$body2.city, phone = _req$body2.phone, address = _req$body2.address, zip = _req$body2.zip, defaultStore = _req$body2.defaultStore, role = _req$body2.role, accessPin = _req$body2.accessPin;\n          toUpdate = {\n            name: name,\n            email: email,\n            password: password,\n            business: req.user.business,\n            defaultStore: defaultStore,\n            role: role,\n            accessPin: accessPin,\n            country: country,\n            city: city,\n            phone: phone,\n            address: address,\n            zip: zip,\n            isActive: true\n          };\n          if (!password) delete toUpdate.password;\n\n          if (!email) {\n            _context3.next = 13;\n            break;\n          }\n\n          _context3.next = 10;\n          return _regenerator[\"default\"].awrap((0, _user[\"default\"])().findOne({\n            email: email,\n            business: req.user.business\n          }));\n\n        case 10:\n          existingUser = _context3.sent;\n\n          if (!(existingUser && !existingUser._id.equals(_id))) {\n            _context3.next = 13;\n            break;\n          }\n\n          throw new Error(_errors[\"default\"].EMAIL_ALREADY_EXISTS);\n\n        case 13:\n          _context3.next = 15;\n          return _regenerator[\"default\"].awrap((0, _user[\"default\"])().findOneAndUpdate({\n            business: req.user.business,\n            _id: _id\n          }, toUpdate));\n\n        case 15:\n          data = _context3.sent;\n          return _context3.abrupt(\"return\", res.json({\n            data: data\n          }));\n\n        case 19:\n          _context3.prev = 19;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(_context3.t0);\n\n          if (!(_context3.t0.message === _errors[\"default\"].EMAIL_ALREADY_EXISTS)) {\n            _context3.next = 24;\n            break;\n          }\n\n          return _context3.abrupt(\"return\", res.status(409).json({\n            error: true,\n            reason: _context3.t0.message\n          }));\n\n        case 24:\n          return _context3.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context3.t0.message\n          }));\n\n        case 25:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 19]]);\n};\n\nexports.updateEmployee = updateEmployee;\n\nvar deleteEmployee = function deleteEmployee(req, res) {\n  var validation, _id, business;\n\n  return _regenerator[\"default\"].async(function deleteEmployee$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          validation = _joi[\"default\"].validate(req.body, deleteSchema);\n\n          if (!validation.error) {\n            _context4.next = 4;\n            break;\n          }\n\n          throw new Error(validation.error);\n\n        case 4:\n          _id = req.body.id;\n          business = req.user.business;\n          _context4.next = 8;\n          return _regenerator[\"default\"].awrap((0, _user[\"default\"])().findOneAndUpdate({\n            _id: _id,\n            business: business\n          }, {\n            $set: {\n              isDelete: true\n            }\n          }));\n\n        case 8:\n          return _context4.abrupt(\"return\", res.json({\n            data: {}\n          }));\n\n        case 11:\n          _context4.prev = 11;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.log(_context4.t0);\n          return _context4.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context4.t0.message\n          }));\n\n        case 15:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, [[0, 11]]);\n};\n\nexports.deleteEmployee = deleteEmployee;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "employee.js"
      ],
      "names": [
        "registerSchema",
        "Joi",
        "object",
        "name",
        "string",
        "min",
        "required",
        "email",
        "password",
        "country",
        "optional",
        "allow",
        "city",
        "phone",
        "address",
        "zip",
        "defaultStore",
        "role",
        "accessPin",
        "updateSchema",
        "id",
        "deleteSchema",
        "getEmployees",
        "req",
        "res",
        "business",
        "user",
        "query",
        "page",
        "limit",
        "paginate",
        "isDelete",
        "isSuper",
        "populate",
        "data",
        "json",
        "console",
        "log",
        "status",
        "error",
        "reason",
        "message",
        "createEmployee",
        "validation",
        "validate",
        "body",
        "Error",
        "findOne",
        "existingUser",
        "ERRORS",
        "EMAIL_ALREADY_EXISTS",
        "create",
        "isActive",
        "updateEmployee",
        "_id",
        "toUpdate",
        "equals",
        "findOneAndUpdate",
        "deleteEmployee",
        "$set"
      ],
      "mappings": "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",
      "sourceRoot": "/app/src/controllers",
      "sourcesContent": [
        "import _UserModel from '../models/user'\nimport Joi from '@hapi/joi'\nimport ERRORS from '../constants/errors'\n\nconst registerSchema = Joi.object({\n  name: Joi.string().min(1).required(),\n  email: Joi.string().email().required(),\n  password: Joi.string().min(3).required(),\n  country: Joi.string().optional().allow(''),\n  city: Joi.string().optional().allow(''),\n  phone: Joi.string().optional().allow(''),\n  address: Joi.string().optional().allow(''),\n  zip: Joi.string().optional().allow(''),\n  defaultStore: Joi.string().required(),\n  role: Joi.string().required(),\n  accessPin: Joi.string().required()\n})\n\nconst updateSchema = Joi.object({\n  id: Joi.string().required(),\n  name: Joi.string().min(1).required(),\n  email: Joi.string().email().required(),\n  password: Joi.string().min(3).optional().allow(''),\n  country: Joi.string().optional().allow(''),\n  city: Joi.string().optional().allow(''),\n  phone: Joi.string().optional().allow(''),\n  address: Joi.string().optional().allow(''),\n  zip: Joi.string().optional().allow(''),\n  defaultStore: Joi.string().required(),\n  role: Joi.string().required(),\n  accessPin: Joi.string().required()\n})\n\nconst deleteSchema = Joi.object({\n  id: Joi.string().required()\n})\n\nexport const getEmployees = async (req, res) => {\n  try {\n    const business = req.user.business\n    const { page, limit } = req.query\n    const data = await _UserModel().paginate({ business, isDelete: false, isSuper: false }, { page, limit, populate: 'role' })\n    return res.json(data)\n  } catch (err) {\n    console.log(err)\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const createEmployee = async (req, res) => {\n  try {\n    const validation = Joi.validate(req.body, registerSchema)\n    if (validation.error) throw new Error(validation.error)\n    const business = req.user.business\n    const { name, email, password, country, city, phone, address, zip, defaultStore, role, accessPin } = req.body\n\n    const existingUser = await _UserModel().findOne({ business, email })\n    if (existingUser) {\n      throw new Error(ERRORS.EMAIL_ALREADY_EXISTS)\n    }\n\n    const data = await _UserModel().create({\n      name,\n      email,\n      password,\n      business: req.user.business,\n      defaultStore,\n      role,\n      accessPin,\n      country,\n      city,\n      phone,\n      address,\n      zip,\n      isActive: true,\n    })\n    return res.json({ data })\n  } catch (err) {\n    console.log(err)\n    if (err.message === ERRORS.EMAIL_ALREADY_EXISTS) return res.status(409).json({ error: true, reason: err.message })\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const updateEmployee = async (req, res) => {\n  try {\n    const validation = Joi.validate(req.body, updateSchema)\n    if (validation.error) throw new Error(validation.error)\n\n    const { id: _id, name, email, password, country, city, phone, address, zip, defaultStore, role, accessPin } = req.body\n    const toUpdate = {\n      name,\n      email,\n      password,\n      business: req.user.business,\n      defaultStore,\n      role,\n      accessPin,\n      country,\n      city,\n      phone,\n      address,\n      zip,\n      isActive: true,\n    };\n\n    if (!password) delete toUpdate.password;\n    if (email) {\n      const existingUser = await _UserModel().findOne({ email, business: req.user.business })\n      if (existingUser && !existingUser._id.equals(_id)) {\n        throw new Error(ERRORS.EMAIL_ALREADY_EXISTS)\n      }\n    }\n    const data = await _UserModel().findOneAndUpdate({ business: req.user.business, _id }, toUpdate)\n    return res.json({ data })\n  } catch (err) {\n    console.log(err)\n    if (err.message === ERRORS.EMAIL_ALREADY_EXISTS) return res.status(409).json({ error: true, reason: err.message })\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const deleteEmployee = async (req, res) => {\n  try {\n    const validation = Joi.validate(req.body, deleteSchema)\n    if (validation.error) throw new Error(validation.error)\n\n    const { id: _id } = req.body\n    const business = req.user.business\n\n    await _UserModel().findOneAndUpdate({ _id, business }, { $set: { isDelete: true } })\n    return res.json({ data: {} })\n  } catch (err) {\n    console.log(err)\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573021617935
  },
  "{\"sourceRoot\":\"/app/src/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/routes/stores.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/routes/stores.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/routes/stores.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/routes/stores.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/routes",
        "sourceFileName": "stores.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _store = require(\"../controllers/store\");\n\nvar router = (0, _express.Router)();\nrouter.get('/', _store.getAllStores);\nrouter.get('/get_current_store', _store.getCurrentStore);\nrouter.get('/get_store', _store.getStoreById);\nrouter.post('/update', _store.updateStoreInformation);\nrouter.post('/add_new', _store.addNewStore);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0b3Jlcy5qcyJdLCJuYW1lcyI6WyJyb3V0ZXIiLCJnZXQiLCJnZXRBbGxTdG9yZXMiLCJnZXRDdXJyZW50U3RvcmUiLCJnZXRTdG9yZUJ5SWQiLCJwb3N0IiwidXBkYXRlU3RvcmVJbmZvcm1hdGlvbiIsImFkZE5ld1N0b3JlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBRUEsSUFBTUEsTUFBTSxHQUFHLHNCQUFmO0FBRUFBLE1BQU0sQ0FBQ0MsR0FBUCxDQUFXLEdBQVgsRUFBZ0JDLG1CQUFoQjtBQUNBRixNQUFNLENBQUNDLEdBQVAsQ0FBVyxvQkFBWCxFQUFpQ0Usc0JBQWpDO0FBQ0FILE1BQU0sQ0FBQ0MsR0FBUCxDQUFXLFlBQVgsRUFBeUJHLG1CQUF6QjtBQUNBSixNQUFNLENBQUNLLElBQVAsQ0FBWSxTQUFaLEVBQXVCQyw2QkFBdkI7QUFDQU4sTUFBTSxDQUFDSyxJQUFQLENBQVksVUFBWixFQUF3QkUsa0JBQXhCO2VBRWVQLE0iLCJzb3VyY2VSb290IjoiL2FwcC9zcmMvcm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUm91dGVyIH0gZnJvbSAnZXhwcmVzcydcbmltcG9ydCB7IGdldEFsbFN0b3JlcywgZ2V0Q3VycmVudFN0b3JlLCB1cGRhdGVTdG9yZUluZm9ybWF0aW9uLCBnZXRTdG9yZUJ5SWQsIGFkZE5ld1N0b3JlIH0gZnJvbSAnLi4vY29udHJvbGxlcnMvc3RvcmUnXG5cbmNvbnN0IHJvdXRlciA9IFJvdXRlcigpXG5cbnJvdXRlci5nZXQoJy8nLCBnZXRBbGxTdG9yZXMpXG5yb3V0ZXIuZ2V0KCcvZ2V0X2N1cnJlbnRfc3RvcmUnLCBnZXRDdXJyZW50U3RvcmUpXG5yb3V0ZXIuZ2V0KCcvZ2V0X3N0b3JlJywgZ2V0U3RvcmVCeUlkKVxucm91dGVyLnBvc3QoJy91cGRhdGUnLCB1cGRhdGVTdG9yZUluZm9ybWF0aW9uKVxucm91dGVyLnBvc3QoJy9hZGRfbmV3JywgYWRkTmV3U3RvcmUpXG5cbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "stores.js"
      ],
      "names": [
        "router",
        "get",
        "getAllStores",
        "getCurrentStore",
        "getStoreById",
        "post",
        "updateStoreInformation",
        "addNewStore"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AAEA,IAAMA,MAAM,GAAG,sBAAf;AAEAA,MAAM,CAACC,GAAP,CAAW,GAAX,EAAgBC,mBAAhB;AACAF,MAAM,CAACC,GAAP,CAAW,oBAAX,EAAiCE,sBAAjC;AACAH,MAAM,CAACC,GAAP,CAAW,YAAX,EAAyBG,mBAAzB;AACAJ,MAAM,CAACK,IAAP,CAAY,SAAZ,EAAuBC,6BAAvB;AACAN,MAAM,CAACK,IAAP,CAAY,UAAZ,EAAwBE,kBAAxB;eAEeP,M",
      "sourceRoot": "/app/src/routes",
      "sourcesContent": [
        "import { Router } from 'express'\nimport { getAllStores, getCurrentStore, updateStoreInformation, getStoreById, addNewStore } from '../controllers/store'\n\nconst router = Router()\n\nrouter.get('/', getAllStores)\nrouter.get('/get_current_store', getCurrentStore)\nrouter.get('/get_store', getStoreById)\nrouter.post('/update', updateStoreInformation)\nrouter.post('/add_new', addNewStore)\n\nexport default router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573021617943
  },
  "{\"sourceRoot\":\"/app/src/controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/controllers/store.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/controllers/store.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/controllers/store.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/controllers/store.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/controllers",
        "sourceFileName": "store.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.addNewStore = exports.getStoreById = exports.updateStoreInformation = exports.getCurrentStore = exports.getAllStores = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _store = _interopRequireDefault(require(\"../models/store\"));\n\nvar _joi = _interopRequireDefault(require(\"@hapi/joi\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar getAllStores = function getAllStores(req, res) {\n  var _req$query, page, limit, data;\n\n  return _regenerator[\"default\"].async(function getAllStores$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _req$query = req.query, page = _req$query.page, limit = _req$query.limit;\n          _context.next = 4;\n          return _regenerator[\"default\"].awrap((0, _store[\"default\"])().paginate({}, {\n            page: page,\n            limit: limit\n          }));\n\n        case 4:\n          data = _context.sent;\n          return _context.abrupt(\"return\", res.json(data));\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n          res.status(500).json({\n            error: true,\n            reason: _context.t0.message\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 8]]);\n};\n\nexports.getAllStores = getAllStores;\n\nvar getCurrentStore = function getCurrentStore(req, res) {\n  var storeId, data;\n  return _regenerator[\"default\"].async(function getCurrentStore$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          storeId = req.storeId;\n          _context2.next = 4;\n          return _regenerator[\"default\"].awrap((0, _store[\"default\"])().findOne({\n            _id: storeId\n          }));\n\n        case 4:\n          data = _context2.sent;\n          return _context2.abrupt(\"return\", res.json({\n            data: data\n          }));\n\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0);\n          res.status(500).json({\n            error: true,\n            reason: _context2.t0.message\n          });\n\n        case 12:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 8]]);\n};\n\nexports.getCurrentStore = getCurrentStore;\n\nvar updateStoreInformation = function updateStoreInformation(req, res) {\n  var _req$body, _id, rest, data;\n\n  return _regenerator[\"default\"].async(function updateStoreInformation$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _req$body = req.body, _id = _req$body.id, rest = (0, _objectWithoutProperties2[\"default\"])(_req$body, [\"id\"]);\n          _context3.next = 4;\n          return _regenerator[\"default\"].awrap((0, _store[\"default\"])().findOneAndUpdate({\n            _id: _id\n          }, rest, {\n            \"new\": true\n          }));\n\n        case 4:\n          data = _context3.sent;\n          return _context3.abrupt(\"return\", res.json({\n            data: data\n          }));\n\n        case 8:\n          _context3.prev = 8;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(_context3.t0);\n          res.status(500).json({\n            error: true,\n            reason: _context3.t0.message\n          });\n\n        case 12:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 8]]);\n};\n\nexports.updateStoreInformation = updateStoreInformation;\n\nvar getStoreById = function getStoreById(req, res) {\n  var _id, data;\n\n  return _regenerator[\"default\"].async(function getStoreById$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _id = req.query.id;\n          _context4.next = 4;\n          return _regenerator[\"default\"].awrap((0, _store[\"default\"])().findOne({\n            _id: _id\n          }));\n\n        case 4:\n          data = _context4.sent;\n          return _context4.abrupt(\"return\", res.json({\n            data: data\n          }));\n\n        case 8:\n          _context4.prev = 8;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.log(_context4.t0);\n          res.status(500).json({\n            error: true,\n            reason: _context4.t0.message\n          });\n\n        case 12:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, [[0, 8]]);\n};\n\nexports.getStoreById = getStoreById;\n\nvar addNewStore = function addNewStore(req, res) {\n  var data;\n  return _regenerator[\"default\"].async(function addNewStore$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return _regenerator[\"default\"].awrap((0, _store[\"default\"])().create(_objectSpread({}, req.body, {\n            isDefault: false\n          })));\n\n        case 3:\n          data = _context5.sent;\n          return _context5.abrupt(\"return\", res.json({\n            data: data\n          }));\n\n        case 7:\n          _context5.prev = 7;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.log(_context5.t0);\n          res.status(500).json({\n            error: true,\n            reason: _context5.t0.message\n          });\n\n        case 11:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, [[0, 7]]);\n};\n\nexports.addNewStore = addNewStore;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0b3JlLmpzIl0sIm5hbWVzIjpbImdldEFsbFN0b3JlcyIsInJlcSIsInJlcyIsInF1ZXJ5IiwicGFnZSIsImxpbWl0IiwicGFnaW5hdGUiLCJkYXRhIiwianNvbiIsImNvbnNvbGUiLCJsb2ciLCJzdGF0dXMiLCJlcnJvciIsInJlYXNvbiIsIm1lc3NhZ2UiLCJnZXRDdXJyZW50U3RvcmUiLCJzdG9yZUlkIiwiZmluZE9uZSIsIl9pZCIsInVwZGF0ZVN0b3JlSW5mb3JtYXRpb24iLCJib2R5IiwiaWQiLCJyZXN0IiwiZmluZE9uZUFuZFVwZGF0ZSIsImdldFN0b3JlQnlJZCIsImFkZE5ld1N0b3JlIiwiY3JlYXRlIiwiaXNEZWZhdWx0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7Ozs7O0FBRU8sSUFBTUEsWUFBWSxHQUFHLFNBQWZBLFlBQWUsQ0FBT0MsR0FBUCxFQUFZQyxHQUFaO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLHVCQUVBRCxHQUFHLENBQUNFLEtBRkosRUFFaEJDLElBRmdCLGNBRWhCQSxJQUZnQixFQUVWQyxLQUZVLGNBRVZBLEtBRlU7QUFBQTtBQUFBLCtDQUdMLHlCQUFjQyxRQUFkLENBQXVCLEVBQXZCLEVBQTJCO0FBQUVGLFlBQUFBLElBQUksRUFBSkEsSUFBRjtBQUFRQyxZQUFBQSxLQUFLLEVBQUxBO0FBQVIsV0FBM0IsQ0FISzs7QUFBQTtBQUdsQkUsVUFBQUEsSUFIa0I7QUFBQSwyQ0FJakJMLEdBQUcsQ0FBQ00sSUFBSixDQUFTRCxJQUFULENBSmlCOztBQUFBO0FBQUE7QUFBQTtBQU14QkUsVUFBQUEsT0FBTyxDQUFDQyxHQUFSO0FBQ0FSLFVBQUFBLEdBQUcsQ0FBQ1MsTUFBSixDQUFXLEdBQVgsRUFBZ0JILElBQWhCLENBQXFCO0FBQUVJLFlBQUFBLEtBQUssRUFBRSxJQUFUO0FBQWVDLFlBQUFBLE1BQU0sRUFBRSxZQUFJQztBQUEzQixXQUFyQjs7QUFQd0I7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsQ0FBckI7Ozs7QUFXQSxJQUFNQyxlQUFlLEdBQUcsU0FBbEJBLGVBQWtCLENBQU9kLEdBQVAsRUFBWUMsR0FBWjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUVuQmMsVUFBQUEsT0FGbUIsR0FFUGYsR0FGTyxDQUVuQmUsT0FGbUI7QUFBQTtBQUFBLCtDQUdSLHlCQUFjQyxPQUFkLENBQXNCO0FBQUVDLFlBQUFBLEdBQUcsRUFBRUY7QUFBUCxXQUF0QixDQUhROztBQUFBO0FBR3JCVCxVQUFBQSxJQUhxQjtBQUFBLDRDQUlwQkwsR0FBRyxDQUFDTSxJQUFKLENBQVM7QUFDZEQsWUFBQUEsSUFBSSxFQUFKQTtBQURjLFdBQVQsQ0FKb0I7O0FBQUE7QUFBQTtBQUFBO0FBUTNCRSxVQUFBQSxPQUFPLENBQUNDLEdBQVI7QUFDQVIsVUFBQUEsR0FBRyxDQUFDUyxNQUFKLENBQVcsR0FBWCxFQUFnQkgsSUFBaEIsQ0FBcUI7QUFBRUksWUFBQUEsS0FBSyxFQUFFLElBQVQ7QUFBZUMsWUFBQUEsTUFBTSxFQUFFLGFBQUlDO0FBQTNCLFdBQXJCOztBQVQyQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxDQUF4Qjs7OztBQWFBLElBQU1LLHNCQUFzQixHQUFHLFNBQXpCQSxzQkFBeUIsQ0FBT2xCLEdBQVAsRUFBWUMsR0FBWjtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxzQkFFTEQsR0FBRyxDQUFDbUIsSUFGQyxFQUV0QkYsR0FGc0IsYUFFMUJHLEVBRjBCLEVBRWRDLElBRmM7QUFBQTtBQUFBLCtDQUdmLHlCQUFjQyxnQkFBZCxDQUErQjtBQUFFTCxZQUFBQSxHQUFHLEVBQUhBO0FBQUYsV0FBL0IsRUFBd0NJLElBQXhDLEVBQThDO0FBQUUsbUJBQUs7QUFBUCxXQUE5QyxDQUhlOztBQUFBO0FBRzVCZixVQUFBQSxJQUg0QjtBQUFBLDRDQUszQkwsR0FBRyxDQUFDTSxJQUFKLENBQVM7QUFBRUQsWUFBQUEsSUFBSSxFQUFKQTtBQUFGLFdBQVQsQ0FMMkI7O0FBQUE7QUFBQTtBQUFBO0FBT2xDRSxVQUFBQSxPQUFPLENBQUNDLEdBQVI7QUFDQVIsVUFBQUEsR0FBRyxDQUFDUyxNQUFKLENBQVcsR0FBWCxFQUFnQkgsSUFBaEIsQ0FBcUI7QUFBRUksWUFBQUEsS0FBSyxFQUFFLElBQVQ7QUFBZUMsWUFBQUEsTUFBTSxFQUFFLGFBQUlDO0FBQTNCLFdBQXJCOztBQVJrQztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxDQUEvQjs7OztBQVlBLElBQU1VLFlBQVksR0FBRyxTQUFmQSxZQUFlLENBQU92QixHQUFQLEVBQVlDLEdBQVo7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRVpnQixVQUFBQSxHQUZZLEdBRUpqQixHQUFHLENBQUNFLEtBRkEsQ0FFaEJrQixFQUZnQjtBQUFBO0FBQUEsK0NBR0wseUJBQWNKLE9BQWQsQ0FBc0I7QUFBRUMsWUFBQUEsR0FBRyxFQUFIQTtBQUFGLFdBQXRCLENBSEs7O0FBQUE7QUFHbEJYLFVBQUFBLElBSGtCO0FBQUEsNENBS2pCTCxHQUFHLENBQUNNLElBQUosQ0FBUztBQUFFRCxZQUFBQSxJQUFJLEVBQUpBO0FBQUYsV0FBVCxDQUxpQjs7QUFBQTtBQUFBO0FBQUE7QUFPeEJFLFVBQUFBLE9BQU8sQ0FBQ0MsR0FBUjtBQUNBUixVQUFBQSxHQUFHLENBQUNTLE1BQUosQ0FBVyxHQUFYLEVBQWdCSCxJQUFoQixDQUFxQjtBQUFFSSxZQUFBQSxLQUFLLEVBQUUsSUFBVDtBQUFlQyxZQUFBQSxNQUFNLEVBQUUsYUFBSUM7QUFBM0IsV0FBckI7O0FBUndCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLENBQXJCOzs7O0FBWUEsSUFBTVcsV0FBVyxHQUFHLFNBQWRBLFdBQWMsQ0FBT3hCLEdBQVAsRUFBWUMsR0FBWjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsK0NBRUoseUJBQWN3QixNQUFkLG1CQUEwQnpCLEdBQUcsQ0FBQ21CLElBQTlCO0FBQW9DTyxZQUFBQSxTQUFTLEVBQUU7QUFBL0MsYUFGSTs7QUFBQTtBQUVqQnBCLFVBQUFBLElBRmlCO0FBQUEsNENBR2hCTCxHQUFHLENBQUNNLElBQUosQ0FBUztBQUFFRCxZQUFBQSxJQUFJLEVBQUpBO0FBQUYsV0FBVCxDQUhnQjs7QUFBQTtBQUFBO0FBQUE7QUFLdkJFLFVBQUFBLE9BQU8sQ0FBQ0MsR0FBUjtBQUNBUixVQUFBQSxHQUFHLENBQUNTLE1BQUosQ0FBVyxHQUFYLEVBQWdCSCxJQUFoQixDQUFxQjtBQUFFSSxZQUFBQSxLQUFLLEVBQUUsSUFBVDtBQUFlQyxZQUFBQSxNQUFNLEVBQUUsYUFBSUM7QUFBM0IsV0FBckI7O0FBTnVCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLENBQXBCIiwic291cmNlUm9vdCI6Ii9hcHAvc3JjL2NvbnRyb2xsZXJzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IF9TdG9yZU1vZGVsIGZyb20gJy4uL21vZGVscy9zdG9yZSdcbmltcG9ydCBKb2kgZnJvbSAnQGhhcGkvam9pJ1xuXG5leHBvcnQgY29uc3QgZ2V0QWxsU3RvcmVzID0gYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgeyBwYWdlLCBsaW1pdCB9ID0gcmVxLnF1ZXJ5XG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IF9TdG9yZU1vZGVsKCkucGFnaW5hdGUoe30sIHsgcGFnZSwgbGltaXQgfSlcbiAgICByZXR1cm4gcmVzLmpzb24oZGF0YSlcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgY29uc29sZS5sb2coZXJyKVxuICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgZXJyb3I6IHRydWUsIHJlYXNvbjogZXJyLm1lc3NhZ2UgfSlcbiAgfVxufVxuXG5leHBvcnQgY29uc3QgZ2V0Q3VycmVudFN0b3JlID0gYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgeyBzdG9yZUlkIH0gPSByZXFcbiAgICBjb25zdCBkYXRhID0gYXdhaXQgX1N0b3JlTW9kZWwoKS5maW5kT25lKHsgX2lkOiBzdG9yZUlkIH0pXG4gICAgcmV0dXJuIHJlcy5qc29uKHtcbiAgICAgIGRhdGFcbiAgICB9KVxuICB9IGNhdGNoIChlcnIpIHtcbiAgICBjb25zb2xlLmxvZyhlcnIpXG4gICAgcmVzLnN0YXR1cyg1MDApLmpzb24oeyBlcnJvcjogdHJ1ZSwgcmVhc29uOiBlcnIubWVzc2FnZSB9KVxuICB9XG59XG5cbmV4cG9ydCBjb25zdCB1cGRhdGVTdG9yZUluZm9ybWF0aW9uID0gYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgeyBpZDogX2lkLCAuLi5yZXN0IH0gPSByZXEuYm9keVxuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCBfU3RvcmVNb2RlbCgpLmZpbmRPbmVBbmRVcGRhdGUoeyBfaWQgfSwgcmVzdCwgeyBuZXc6IHRydWUgfSlcblxuICAgIHJldHVybiByZXMuanNvbih7IGRhdGEgfSlcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgY29uc29sZS5sb2coZXJyKVxuICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgZXJyb3I6IHRydWUsIHJlYXNvbjogZXJyLm1lc3NhZ2UgfSlcbiAgfVxufVxuXG5leHBvcnQgY29uc3QgZ2V0U3RvcmVCeUlkID0gYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgeyBpZDogX2lkIH0gPSByZXEucXVlcnlcbiAgICBjb25zdCBkYXRhID0gYXdhaXQgX1N0b3JlTW9kZWwoKS5maW5kT25lKHsgX2lkIH0pXG5cbiAgICByZXR1cm4gcmVzLmpzb24oeyBkYXRhIH0pXG4gIH0gY2F0Y2ggKGVycikge1xuICAgIGNvbnNvbGUubG9nKGVycilcbiAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7IGVycm9yOiB0cnVlLCByZWFzb246IGVyci5tZXNzYWdlIH0pXG4gIH1cbn1cblxuZXhwb3J0IGNvbnN0IGFkZE5ld1N0b3JlID0gYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IF9TdG9yZU1vZGVsKCkuY3JlYXRlKHsgLi4ucmVxLmJvZHksIGlzRGVmYXVsdDogZmFsc2UgfSlcbiAgICByZXR1cm4gcmVzLmpzb24oeyBkYXRhIH0pXG4gIH0gY2F0Y2ggKGVycikge1xuICAgIGNvbnNvbGUubG9nKGVycilcbiAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7IGVycm9yOiB0cnVlLCByZWFzb246IGVyci5tZXNzYWdlIH0pXG4gIH1cbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "store.js"
      ],
      "names": [
        "getAllStores",
        "req",
        "res",
        "query",
        "page",
        "limit",
        "paginate",
        "data",
        "json",
        "console",
        "log",
        "status",
        "error",
        "reason",
        "message",
        "getCurrentStore",
        "storeId",
        "findOne",
        "_id",
        "updateStoreInformation",
        "body",
        "id",
        "rest",
        "findOneAndUpdate",
        "getStoreById",
        "addNewStore",
        "create",
        "isDefault"
      ],
      "mappings": "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",
      "sourceRoot": "/app/src/controllers",
      "sourcesContent": [
        "import _StoreModel from '../models/store'\nimport Joi from '@hapi/joi'\n\nexport const getAllStores = async (req, res) => {\n  try {\n    const { page, limit } = req.query\n    const data = await _StoreModel().paginate({}, { page, limit })\n    return res.json(data)\n  } catch (err) {\n    console.log(err)\n    res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const getCurrentStore = async (req, res) => {\n  try {\n    const { storeId } = req\n    const data = await _StoreModel().findOne({ _id: storeId })\n    return res.json({\n      data\n    })\n  } catch (err) {\n    console.log(err)\n    res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const updateStoreInformation = async (req, res) => {\n  try {\n    const { id: _id, ...rest } = req.body\n    const data = await _StoreModel().findOneAndUpdate({ _id }, rest, { new: true })\n\n    return res.json({ data })\n  } catch (err) {\n    console.log(err)\n    res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const getStoreById = async (req, res) => {\n  try {\n    const { id: _id } = req.query\n    const data = await _StoreModel().findOne({ _id })\n\n    return res.json({ data })\n  } catch (err) {\n    console.log(err)\n    res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const addNewStore = async (req, res) => {\n  try {\n    const data = await _StoreModel().create({ ...req.body, isDefault: false })\n    return res.json({ data })\n  } catch (err) {\n    console.log(err)\n    res.status(500).json({ error: true, reason: err.message })\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573021617939
  },
  "{\"sourceRoot\":\"/app/src/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/routes/colors.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/routes/colors.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/routes/colors.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/routes/colors.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/routes",
        "sourceFileName": "colors.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _color = require(\"../controllers/color\");\n\nvar router = (0, _express.Router)();\nrouter.get('/', _color.getColors);\nrouter.post('/create', _color.createColor);\nrouter.post('/delete', _color.deleteColor);\nrouter.post('/update', _color.updateColor);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbG9ycy5qcyJdLCJuYW1lcyI6WyJyb3V0ZXIiLCJnZXQiLCJnZXRDb2xvcnMiLCJwb3N0IiwiY3JlYXRlQ29sb3IiLCJkZWxldGVDb2xvciIsInVwZGF0ZUNvbG9yIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBRUE7O0FBQ0EsSUFBTUEsTUFBTSxHQUFHLHNCQUFmO0FBRUFBLE1BQU0sQ0FBQ0MsR0FBUCxDQUFXLEdBQVgsRUFBZ0JDLGdCQUFoQjtBQUNBRixNQUFNLENBQUNHLElBQVAsQ0FBWSxTQUFaLEVBQXVCQyxrQkFBdkI7QUFDQUosTUFBTSxDQUFDRyxJQUFQLENBQVksU0FBWixFQUF1QkUsa0JBQXZCO0FBQ0FMLE1BQU0sQ0FBQ0csSUFBUCxDQUFZLFNBQVosRUFBdUJHLGtCQUF2QjtlQUdlTixNIiwic291cmNlUm9vdCI6Ii9hcHAvc3JjL3JvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJvdXRlciB9IGZyb20gJ2V4cHJlc3MnXG5cbmltcG9ydCB7IGdldENvbG9ycywgY3JlYXRlQ29sb3IsIGRlbGV0ZUNvbG9yLCB1cGRhdGVDb2xvciB9IGZyb20gJy4uL2NvbnRyb2xsZXJzL2NvbG9yJ1xuY29uc3Qgcm91dGVyID0gUm91dGVyKClcblxucm91dGVyLmdldCgnLycsIGdldENvbG9ycylcbnJvdXRlci5wb3N0KCcvY3JlYXRlJywgY3JlYXRlQ29sb3IpXG5yb3V0ZXIucG9zdCgnL2RlbGV0ZScsIGRlbGV0ZUNvbG9yKVxucm91dGVyLnBvc3QoJy91cGRhdGUnLCB1cGRhdGVDb2xvcilcblxuXG5leHBvcnQgZGVmYXVsdCByb3V0ZXJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "colors.js"
      ],
      "names": [
        "router",
        "get",
        "getColors",
        "post",
        "createColor",
        "deleteColor",
        "updateColor"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA;;AACA,IAAMA,MAAM,GAAG,sBAAf;AAEAA,MAAM,CAACC,GAAP,CAAW,GAAX,EAAgBC,gBAAhB;AACAF,MAAM,CAACG,IAAP,CAAY,SAAZ,EAAuBC,kBAAvB;AACAJ,MAAM,CAACG,IAAP,CAAY,SAAZ,EAAuBE,kBAAvB;AACAL,MAAM,CAACG,IAAP,CAAY,SAAZ,EAAuBG,kBAAvB;eAGeN,M",
      "sourceRoot": "/app/src/routes",
      "sourcesContent": [
        "import { Router } from 'express'\n\nimport { getColors, createColor, deleteColor, updateColor } from '../controllers/color'\nconst router = Router()\n\nrouter.get('/', getColors)\nrouter.post('/create', createColor)\nrouter.post('/delete', deleteColor)\nrouter.post('/update', updateColor)\n\n\nexport default router\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573021617943
  },
  "{\"sourceRoot\":\"/app/src/controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/controllers/color.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/controllers/color.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/controllers/color.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/controllers/color.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/controllers",
        "sourceFileName": "color.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deleteColor = exports.updateColor = exports.createColor = exports.getColors = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _color = _interopRequireDefault(require(\"../models/color\"));\n\nvar _joi = _interopRequireDefault(require(\"@hapi/joi\"));\n\nvar _errors = _interopRequireDefault(require(\"../constants/errors\"));\n\nvar createSchema = _joi[\"default\"].object({\n  name: _joi[\"default\"].string().required(),\n  colorCode: _joi[\"default\"].string().required()\n});\n\nvar updateSchema = _joi[\"default\"].object({\n  id: _joi[\"default\"].string().required(),\n  name: _joi[\"default\"].string().required(),\n  colorCode: _joi[\"default\"].string().required()\n});\n\nvar deleteSchema = _joi[\"default\"].object({\n  id: _joi[\"default\"].array().items(_joi[\"default\"].string()).required()\n});\n\nvar getColors = function getColors(req, res) {\n  var _req$query, page, limit, data;\n\n  return _regenerator[\"default\"].async(function getColors$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _req$query = req.query, page = _req$query.page, limit = _req$query.limit;\n          _context.next = 4;\n          return _regenerator[\"default\"].awrap((0, _color[\"default\"])().paginate({\n            isDelete: false\n          }, {\n            page: page,\n            limit: limit\n          }));\n\n        case 4:\n          data = _context.sent;\n          return _context.abrupt(\"return\", res.json(data));\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n          return _context.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context.t0.message\n          }));\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 8]]);\n};\n\nexports.getColors = getColors;\n\nvar createColor = function createColor(req, res) {\n  var validation, _req$body, name, colorCode, existingColor, data;\n\n  return _regenerator[\"default\"].async(function createColor$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          validation = _joi[\"default\"].validate(req.body, createSchema);\n\n          if (!validation.error) {\n            _context2.next = 4;\n            break;\n          }\n\n          throw new Error(validation.error);\n\n        case 4:\n          _req$body = req.body, name = _req$body.name, colorCode = _req$body.colorCode;\n          _context2.next = 7;\n          return _regenerator[\"default\"].awrap((0, _color[\"default\"])().findOne({\n            name: name,\n            isDelete: false\n          }));\n\n        case 7:\n          existingColor = _context2.sent;\n\n          if (!existingColor) {\n            _context2.next = 10;\n            break;\n          }\n\n          throw new Error(_errors[\"default\"].RESOURCE_ALREADY_EXISTS);\n\n        case 10:\n          _context2.next = 12;\n          return _regenerator[\"default\"].awrap((0, _color[\"default\"])().create({\n            name: name,\n            colorCode: colorCode\n          }));\n\n        case 12:\n          data = _context2.sent;\n          return _context2.abrupt(\"return\", res.json({\n            data: data\n          }));\n\n        case 16:\n          _context2.prev = 16;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0);\n\n          if (!(_context2.t0.message === _errors[\"default\"].RESOURCE_ALREADY_EXISTS)) {\n            _context2.next = 21;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", res.status(409).json({\n            error: true,\n            reason: _context2.t0.message\n          }));\n\n        case 21:\n          return _context2.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context2.t0.message\n          }));\n\n        case 22:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 16]]);\n};\n\nexports.createColor = createColor;\n\nvar updateColor = function updateColor(req, res) {\n  var validation, _req$body2, _id, name, colorCode, toUpdate, existingColor, data;\n\n  return _regenerator[\"default\"].async(function updateColor$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          validation = _joi[\"default\"].validate(req.body, updateSchema);\n\n          if (!validation.error) {\n            _context3.next = 4;\n            break;\n          }\n\n          throw new Error(validation.error);\n\n        case 4:\n          _req$body2 = req.body, _id = _req$body2.id, name = _req$body2.name, colorCode = _req$body2.colorCode;\n          toUpdate = {\n            name: name,\n            colorCode: colorCode\n          };\n\n          if (!name) {\n            _context3.next = 12;\n            break;\n          }\n\n          _context3.next = 9;\n          return _regenerator[\"default\"].awrap((0, _color[\"default\"])().findOne({\n            name: name,\n            isDelete: false\n          }));\n\n        case 9:\n          existingColor = _context3.sent;\n\n          if (!(existingColor && !existingColor._id.equals(_id))) {\n            _context3.next = 12;\n            break;\n          }\n\n          throw new Error(_errors[\"default\"].RESOURCE_ALREADY_EXISTS);\n\n        case 12:\n          _context3.next = 14;\n          return _regenerator[\"default\"].awrap((0, _color[\"default\"])().findOneAndUpdate({\n            _id: _id,\n            isDelete: false\n          }, toUpdate, {\n            \"new\": true\n          }));\n\n        case 14:\n          data = _context3.sent;\n          return _context3.abrupt(\"return\", res.json({\n            data: data\n          }));\n\n        case 18:\n          _context3.prev = 18;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(_context3.t0);\n\n          if (!(_context3.t0.message === _errors[\"default\"].RESOURCE_ALREADY_EXISTS)) {\n            _context3.next = 23;\n            break;\n          }\n\n          return _context3.abrupt(\"return\", res.status(409).json({\n            error: true,\n            reason: _context3.t0.message\n          }));\n\n        case 23:\n          return _context3.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context3.t0.message\n          }));\n\n        case 24:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 18]]);\n};\n\nexports.updateColor = updateColor;\n\nvar deleteColor = function deleteColor(req, res) {\n  var validation, _id;\n\n  return _regenerator[\"default\"].async(function deleteColor$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          validation = _joi[\"default\"].validate(req.body, deleteSchema);\n\n          if (!validation.error) {\n            _context4.next = 4;\n            break;\n          }\n\n          throw new Error(validation.error);\n\n        case 4:\n          _id = req.body.id;\n          _context4.next = 7;\n          return _regenerator[\"default\"].awrap((0, _color[\"default\"])().updateMany({\n            _id: {\n              $in: _id\n            }\n          }, {\n            $set: {\n              isDelete: true\n            }\n          }, {\n            \"new\": true\n          }));\n\n        case 7:\n          return _context4.abrupt(\"return\", res.json({\n            data: {}\n          }));\n\n        case 10:\n          _context4.prev = 10;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.log(_context4.t0);\n          return _context4.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context4.t0.message\n          }));\n\n        case 14:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, [[0, 10]]);\n};\n\nexports.deleteColor = deleteColor;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "color.js"
      ],
      "names": [
        "createSchema",
        "Joi",
        "object",
        "name",
        "string",
        "required",
        "colorCode",
        "updateSchema",
        "id",
        "deleteSchema",
        "array",
        "items",
        "getColors",
        "req",
        "res",
        "query",
        "page",
        "limit",
        "paginate",
        "isDelete",
        "data",
        "json",
        "console",
        "log",
        "status",
        "error",
        "reason",
        "message",
        "createColor",
        "validation",
        "validate",
        "body",
        "Error",
        "findOne",
        "existingColor",
        "ERRORS",
        "RESOURCE_ALREADY_EXISTS",
        "create",
        "updateColor",
        "_id",
        "toUpdate",
        "equals",
        "findOneAndUpdate",
        "deleteColor",
        "updateMany",
        "$in",
        "$set"
      ],
      "mappings": "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",
      "sourceRoot": "/app/src/controllers",
      "sourcesContent": [
        "import _ColorModel from '../models/color'\nimport Joi from '@hapi/joi'\nimport ERRORS from '../constants/errors'\n\nconst createSchema = Joi.object({\n  name: Joi.string().required(),\n  colorCode: Joi.string().required(),\n})\n\nconst updateSchema = Joi.object({\n  id: Joi.string().required(),\n  name: Joi.string().required(),\n  colorCode: Joi.string().required(),\n})\n\nconst deleteSchema = Joi.object({\n  id: Joi.array().items(Joi.string()).required()\n})\n\nexport const getColors = async (req, res) => {\n  try {\n    const { page, limit } = req.query\n    const data = await _ColorModel().paginate({ isDelete: false }, { page, limit })\n    return res.json(data)\n  } catch (err) {\n    console.log(err)\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const createColor = async (req, res) => {\n  try {\n    const validation = Joi.validate(req.body, createSchema)\n    if (validation.error) throw new Error(validation.error)\n    const { name, colorCode } = req.body\n    const existingColor = await _ColorModel().findOne({ name, isDelete: false })\n    if (existingColor) {\n      throw new Error(ERRORS.RESOURCE_ALREADY_EXISTS)\n    }\n\n    const data = await _ColorModel().create({\n      name,\n      colorCode\n    })\n    return res.json({ data })\n  } catch (err) {\n    console.log(err)\n    if (err.message === ERRORS.RESOURCE_ALREADY_EXISTS) return res.status(409).json({ error: true, reason: err.message })\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const updateColor = async (req, res) => {\n  try {\n    const validation = Joi.validate(req.body, updateSchema)\n    if (validation.error) throw new Error(validation.error)\n    const { id: _id, name, colorCode } = req.body\n    const toUpdate = {\n      name,\n      colorCode\n    };\n\n\n    if (name) {\n      const existingColor = await _ColorModel().findOne({ name, isDelete: false })\n      if (existingColor && !existingColor._id.equals(_id)) {\n        throw new Error(ERRORS.RESOURCE_ALREADY_EXISTS)\n      }\n    }\n    const data = await _ColorModel().findOneAndUpdate({ _id, isDelete: false }, toUpdate, { new: true })\n    return res.json({ data })\n  } catch (err) {\n    console.log(err)\n    if (err.message === ERRORS.RESOURCE_ALREADY_EXISTS) return res.status(409).json({ error: true, reason: err.message })\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const deleteColor = async (req, res) => {\n  try {\n    const validation = Joi.validate(req.body, deleteSchema)\n    if (validation.error) throw new Error(validation.error)\n\n    const { id: _id } = req.body\n\n    await _ColorModel().updateMany({ _id: { $in: _id } }, { $set: { isDelete: true } }, { new: true })\n    return res.json({ data: {} })\n  } catch (err) {\n    console.log(err)\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573021617935
  },
  "{\"sourceRoot\":\"/app/src/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/models/color.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/models/color.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/models/color.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/models/color.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/models",
        "sourceFileName": "color.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongoose = require(\"mongoose\");\n\nvar _multiTenant = require(\"../lib/multiTenant\");\n\nvar colorSchema = new _mongoose.Schema({\n  name: {\n    type: String,\n    required: true\n  },\n  colorCode: {\n    type: String,\n    required: true\n  },\n  isDelete: {\n    type: Boolean,\n    \"default\": false\n  }\n}, {\n  timestamps: true,\n  skipVersioning: true\n});\n\nvar _default = (0, _multiTenant.tenantModel)('Color', colorSchema);\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbG9yLmpzIl0sIm5hbWVzIjpbImNvbG9yU2NoZW1hIiwiU2NoZW1hIiwibmFtZSIsInR5cGUiLCJTdHJpbmciLCJyZXF1aXJlZCIsImNvbG9yQ29kZSIsImlzRGVsZXRlIiwiQm9vbGVhbiIsInRpbWVzdGFtcHMiLCJza2lwVmVyc2lvbmluZyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUVBLElBQU1BLFdBQVcsR0FBRyxJQUFJQyxnQkFBSixDQUFXO0FBQzdCQyxFQUFBQSxJQUFJLEVBQUU7QUFDSkMsSUFBQUEsSUFBSSxFQUFFQyxNQURGO0FBRUpDLElBQUFBLFFBQVEsRUFBRTtBQUZOLEdBRHVCO0FBSzdCQyxFQUFBQSxTQUFTLEVBQUU7QUFDVEgsSUFBQUEsSUFBSSxFQUFFQyxNQURHO0FBRVRDLElBQUFBLFFBQVEsRUFBRTtBQUZELEdBTGtCO0FBUzdCRSxFQUFBQSxRQUFRLEVBQUU7QUFDUkosSUFBQUEsSUFBSSxFQUFFSyxPQURFO0FBRVIsZUFBUztBQUZEO0FBVG1CLENBQVgsRUFhakI7QUFBRUMsRUFBQUEsVUFBVSxFQUFFLElBQWQ7QUFBb0JDLEVBQUFBLGNBQWMsRUFBRTtBQUFwQyxDQWJpQixDQUFwQjs7ZUFlZSw4QkFBWSxPQUFaLEVBQXFCVixXQUFyQixDIiwic291cmNlUm9vdCI6Ii9hcHAvc3JjL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNjaGVtYSB9IGZyb20gJ21vbmdvb3NlJ1xuaW1wb3J0IHsgdGVuYW50TW9kZWwgfSBmcm9tICcuLi9saWIvbXVsdGlUZW5hbnQnXG5cbmNvbnN0IGNvbG9yU2NoZW1hID0gbmV3IFNjaGVtYSh7XG4gIG5hbWU6IHtcbiAgICB0eXBlOiBTdHJpbmcsXG4gICAgcmVxdWlyZWQ6IHRydWVcbiAgfSxcbiAgY29sb3JDb2RlOiB7XG4gICAgdHlwZTogU3RyaW5nLFxuICAgIHJlcXVpcmVkOiB0cnVlXG4gIH0sXG4gIGlzRGVsZXRlOiB7XG4gICAgdHlwZTogQm9vbGVhbixcbiAgICBkZWZhdWx0OiBmYWxzZVxuICB9XG59LCB7IHRpbWVzdGFtcHM6IHRydWUsIHNraXBWZXJzaW9uaW5nOiB0cnVlIH0pXG5cbmV4cG9ydCBkZWZhdWx0IHRlbmFudE1vZGVsKCdDb2xvcicsIGNvbG9yU2NoZW1hKVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "color.js"
      ],
      "names": [
        "colorSchema",
        "Schema",
        "name",
        "type",
        "String",
        "required",
        "colorCode",
        "isDelete",
        "Boolean",
        "timestamps",
        "skipVersioning"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AAEA,IAAMA,WAAW,GAAG,IAAIC,gBAAJ,CAAW;AAC7BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAEC,MADF;AAEJC,IAAAA,QAAQ,EAAE;AAFN,GADuB;AAK7BC,EAAAA,SAAS,EAAE;AACTH,IAAAA,IAAI,EAAEC,MADG;AAETC,IAAAA,QAAQ,EAAE;AAFD,GALkB;AAS7BE,EAAAA,QAAQ,EAAE;AACRJ,IAAAA,IAAI,EAAEK,OADE;AAER,eAAS;AAFD;AATmB,CAAX,EAajB;AAAEC,EAAAA,UAAU,EAAE,IAAd;AAAoBC,EAAAA,cAAc,EAAE;AAApC,CAbiB,CAApB;;eAee,8BAAY,OAAZ,EAAqBV,WAArB,C",
      "sourceRoot": "/app/src/models",
      "sourcesContent": [
        "import { Schema } from 'mongoose'\nimport { tenantModel } from '../lib/multiTenant'\n\nconst colorSchema = new Schema({\n  name: {\n    type: String,\n    required: true\n  },\n  colorCode: {\n    type: String,\n    required: true\n  },\n  isDelete: {\n    type: Boolean,\n    default: false\n  }\n}, { timestamps: true, skipVersioning: true })\n\nexport default tenantModel('Color', colorSchema)\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573021617939
  },
  "{\"sourceRoot\":\"/app/src/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/routes/manufacturer.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/routes/manufacturer.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/routes/manufacturer.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/routes/manufacturer.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/routes",
        "sourceFileName": "manufacturer.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _manufacturer = require(\"../controllers/manufacturer\");\n\nvar router = (0, _express.Router)();\nrouter.get('/', _manufacturer.getManufacturers);\nrouter.post('/create', _manufacturer.createManufacturer);\nrouter.post('/delete', _manufacturer.deleteManufacturer);\nrouter.post('/update', _manufacturer.updateManufacturer);\nrouter.post('/update_triggers', _manufacturer.updateManufacturerTriggers);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1hbnVmYWN0dXJlci5qcyJdLCJuYW1lcyI6WyJyb3V0ZXIiLCJnZXQiLCJnZXRNYW51ZmFjdHVyZXJzIiwicG9zdCIsImNyZWF0ZU1hbnVmYWN0dXJlciIsImRlbGV0ZU1hbnVmYWN0dXJlciIsInVwZGF0ZU1hbnVmYWN0dXJlciIsInVwZGF0ZU1hbnVmYWN0dXJlclRyaWdnZXJzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBRUE7O0FBQ0EsSUFBTUEsTUFBTSxHQUFHLHNCQUFmO0FBRUFBLE1BQU0sQ0FBQ0MsR0FBUCxDQUFXLEdBQVgsRUFBZ0JDLDhCQUFoQjtBQUNBRixNQUFNLENBQUNHLElBQVAsQ0FBWSxTQUFaLEVBQXVCQyxnQ0FBdkI7QUFDQUosTUFBTSxDQUFDRyxJQUFQLENBQVksU0FBWixFQUF1QkUsZ0NBQXZCO0FBQ0FMLE1BQU0sQ0FBQ0csSUFBUCxDQUFZLFNBQVosRUFBdUJHLGdDQUF2QjtBQUNBTixNQUFNLENBQUNHLElBQVAsQ0FBWSxrQkFBWixFQUFnQ0ksd0NBQWhDO2VBRWVQLE0iLCJzb3VyY2VSb290IjoiL2FwcC9zcmMvcm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUm91dGVyIH0gZnJvbSAnZXhwcmVzcydcblxuaW1wb3J0IHsgZ2V0TWFudWZhY3R1cmVycywgY3JlYXRlTWFudWZhY3R1cmVyLCBkZWxldGVNYW51ZmFjdHVyZXIsIHVwZGF0ZU1hbnVmYWN0dXJlcix1cGRhdGVNYW51ZmFjdHVyZXJUcmlnZ2Vyc30gZnJvbSAnLi4vY29udHJvbGxlcnMvbWFudWZhY3R1cmVyJ1xuY29uc3Qgcm91dGVyID0gUm91dGVyKClcblxucm91dGVyLmdldCgnLycsIGdldE1hbnVmYWN0dXJlcnMpXG5yb3V0ZXIucG9zdCgnL2NyZWF0ZScsIGNyZWF0ZU1hbnVmYWN0dXJlcilcbnJvdXRlci5wb3N0KCcvZGVsZXRlJywgZGVsZXRlTWFudWZhY3R1cmVyKVxucm91dGVyLnBvc3QoJy91cGRhdGUnLCB1cGRhdGVNYW51ZmFjdHVyZXIpXG5yb3V0ZXIucG9zdCgnL3VwZGF0ZV90cmlnZ2VycycsIHVwZGF0ZU1hbnVmYWN0dXJlclRyaWdnZXJzKVxuXG5leHBvcnQgZGVmYXVsdCByb3V0ZXJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "manufacturer.js"
      ],
      "names": [
        "router",
        "get",
        "getManufacturers",
        "post",
        "createManufacturer",
        "deleteManufacturer",
        "updateManufacturer",
        "updateManufacturerTriggers"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA;;AACA,IAAMA,MAAM,GAAG,sBAAf;AAEAA,MAAM,CAACC,GAAP,CAAW,GAAX,EAAgBC,8BAAhB;AACAF,MAAM,CAACG,IAAP,CAAY,SAAZ,EAAuBC,gCAAvB;AACAJ,MAAM,CAACG,IAAP,CAAY,SAAZ,EAAuBE,gCAAvB;AACAL,MAAM,CAACG,IAAP,CAAY,SAAZ,EAAuBG,gCAAvB;AACAN,MAAM,CAACG,IAAP,CAAY,kBAAZ,EAAgCI,wCAAhC;eAEeP,M",
      "sourceRoot": "/app/src/routes",
      "sourcesContent": [
        "import { Router } from 'express'\n\nimport { getManufacturers, createManufacturer, deleteManufacturer, updateManufacturer,updateManufacturerTriggers} from '../controllers/manufacturer'\nconst router = Router()\n\nrouter.get('/', getManufacturers)\nrouter.post('/create', createManufacturer)\nrouter.post('/delete', deleteManufacturer)\nrouter.post('/update', updateManufacturer)\nrouter.post('/update_triggers', updateManufacturerTriggers)\n\nexport default router\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573021617943
  },
  "{\"sourceRoot\":\"/app/src/controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/controllers/manufacturer.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/controllers/manufacturer.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/controllers/manufacturer.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/controllers/manufacturer.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/controllers",
        "sourceFileName": "manufacturer.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.updateManufacturerTriggers = exports.deleteManufacturer = exports.updateManufacturer = exports.createManufacturer = exports.getManufacturers = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _manufacturer = _interopRequireDefault(require(\"../models/manufacturer\"));\n\nvar _joi = _interopRequireDefault(require(\"@hapi/joi\"));\n\nvar _flat = _interopRequireDefault(require(\"flat\"));\n\nvar _errors = _interopRequireDefault(require(\"../constants/errors\"));\n\nvar manufacturerSchema = _joi[\"default\"].object({\n  name: _joi[\"default\"].string().min(1).required(),\n  imageUrl: _joi[\"default\"].string().optional().allow(''),\n  triggers: _joi[\"default\"].object().optional()\n});\n\nvar updateTriggersSchema = _joi[\"default\"].object({\n  id: _joi[\"default\"].array().items(_joi[\"default\"].string()).required(),\n  triggers: _joi[\"default\"].object({\n    onPOS: _joi[\"default\"][\"boolean\"](),\n    onWidget: _joi[\"default\"][\"boolean\"]()\n  }).required()\n});\n\nvar getManufacturers = function getManufacturers(req, res) {\n  var _req$query, limit, page, data;\n\n  return _regenerator[\"default\"].async(function getManufacturers$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _req$query = req.query, limit = _req$query.limit, page = _req$query.page;\n          _context.next = 4;\n          return _regenerator[\"default\"].awrap((0, _manufacturer[\"default\"])().paginate({\n            isDelete: false\n          }, {\n            limit: limit,\n            page: page,\n            select: '-isDelete -tenantId'\n          }));\n\n        case 4:\n          data = _context.sent;\n          return _context.abrupt(\"return\", res.json(data));\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n          return _context.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context.t0.message\n          }));\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 8]]);\n};\n\nexports.getManufacturers = getManufacturers;\n\nvar createManufacturer = function createManufacturer(req, res) {\n  var validation, existing, data;\n  return _regenerator[\"default\"].async(function createManufacturer$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          validation = _joi[\"default\"].validate(req.body, manufacturerSchema);\n\n          if (!validation.error) {\n            _context2.next = 4;\n            break;\n          }\n\n          throw new Error(validation.error);\n\n        case 4:\n          _context2.next = 6;\n          return _regenerator[\"default\"].awrap((0, _manufacturer[\"default\"])().findOne({\n            name: {\n              $regex: new RegExp(\"^\".concat(req.body.name, \"$\")),\n              $options: 'i'\n            },\n            isDelete: false\n          }));\n\n        case 6:\n          existing = _context2.sent;\n\n          if (!existing) {\n            _context2.next = 9;\n            break;\n          }\n\n          throw new Error(_errors[\"default\"].RESOURCE_ALREADY_EXISTS);\n\n        case 9:\n          _context2.next = 11;\n          return _regenerator[\"default\"].awrap((0, _manufacturer[\"default\"])().create(req.body));\n\n        case 11:\n          data = _context2.sent;\n          return _context2.abrupt(\"return\", res.json({\n            data: data\n          }));\n\n        case 15:\n          _context2.prev = 15;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0);\n          return _context2.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context2.t0.message\n          }));\n\n        case 19:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 15]]);\n};\n\nexports.createManufacturer = createManufacturer;\n\nvar updateManufacturer = function updateManufacturer(req, res) {\n  var _req$body, _id, rest, data;\n\n  return _regenerator[\"default\"].async(function updateManufacturer$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _req$body = req.body, _id = _req$body.id, rest = (0, _objectWithoutProperties2[\"default\"])(_req$body, [\"id\"]);\n          _context3.next = 4;\n          return _regenerator[\"default\"].awrap((0, _manufacturer[\"default\"])().findOneAndUpdate({\n            _id: _id\n          }, {\n            $set: (0, _flat[\"default\"])(rest)\n          }, {\n            \"new\": true\n          }));\n\n        case 4:\n          data = _context3.sent;\n          return _context3.abrupt(\"return\", res.json({\n            data: data\n          }));\n\n        case 8:\n          _context3.prev = 8;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(_context3.t0);\n          return _context3.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context3.t0.message\n          }));\n\n        case 12:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 8]]);\n};\n\nexports.updateManufacturer = updateManufacturer;\n\nvar deleteManufacturer = function deleteManufacturer(req, res) {\n  var ids, data;\n  return _regenerator[\"default\"].async(function deleteManufacturer$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          ids = req.body.id;\n          _context4.next = 4;\n          return _regenerator[\"default\"].awrap((0, _manufacturer[\"default\"])().updateMany({\n            _id: {\n              $in: ids\n            }\n          }, {\n            $set: {\n              isDelete: true\n            }\n          }, {\n            \"new\": true\n          }));\n\n        case 4:\n          data = _context4.sent;\n          return _context4.abrupt(\"return\", res.json({\n            data: data\n          }));\n\n        case 8:\n          _context4.prev = 8;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.log(_context4.t0);\n          return _context4.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context4.t0.message\n          }));\n\n        case 12:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, [[0, 8]]);\n};\n\nexports.deleteManufacturer = deleteManufacturer;\n\nvar updateManufacturerTriggers = function updateManufacturerTriggers(req, res) {\n  var validation, _req$body2, _id, rest, data;\n\n  return _regenerator[\"default\"].async(function updateManufacturerTriggers$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          validation = _joi[\"default\"].validate(req.body, updateTriggersSchema);\n\n          if (!validation.error) {\n            _context5.next = 4;\n            break;\n          }\n\n          throw new Error(validation.error);\n\n        case 4:\n          _req$body2 = req.body, _id = _req$body2.id, rest = (0, _objectWithoutProperties2[\"default\"])(_req$body2, [\"id\"]);\n          _context5.next = 7;\n          return _regenerator[\"default\"].awrap((0, _manufacturer[\"default\"])().updateMany({\n            _id: {\n              $in: _id\n            }\n          }, {\n            $set: (0, _flat[\"default\"])(rest)\n          }, {\n            \"new\": true\n          }));\n\n        case 7:\n          data = _context5.sent;\n          return _context5.abrupt(\"return\", res.json({}));\n\n        case 11:\n          _context5.prev = 11;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.log(_context5.t0);\n          return _context5.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context5.t0.message\n          }));\n\n        case 15:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, [[0, 11]]);\n};\n\nexports.updateManufacturerTriggers = updateManufacturerTriggers;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "manufacturer.js"
      ],
      "names": [
        "manufacturerSchema",
        "Joi",
        "object",
        "name",
        "string",
        "min",
        "required",
        "imageUrl",
        "optional",
        "allow",
        "triggers",
        "updateTriggersSchema",
        "id",
        "array",
        "items",
        "onPOS",
        "onWidget",
        "getManufacturers",
        "req",
        "res",
        "query",
        "limit",
        "page",
        "paginate",
        "isDelete",
        "select",
        "data",
        "json",
        "console",
        "log",
        "status",
        "error",
        "reason",
        "message",
        "createManufacturer",
        "validation",
        "validate",
        "body",
        "Error",
        "findOne",
        "$regex",
        "RegExp",
        "$options",
        "existing",
        "ERRORS",
        "RESOURCE_ALREADY_EXISTS",
        "create",
        "updateManufacturer",
        "_id",
        "rest",
        "findOneAndUpdate",
        "$set",
        "deleteManufacturer",
        "ids",
        "updateMany",
        "$in",
        "updateManufacturerTriggers"
      ],
      "mappings": "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",
      "sourceRoot": "/app/src/controllers",
      "sourcesContent": [
        "import _ManufacturerModel from '../models/manufacturer'\nimport Joi from '@hapi/joi'\nimport flatten from 'flat'\nimport ERRORS from '../constants/errors'\n\nconst manufacturerSchema = Joi.object({\n  name: Joi.string().min(1).required(),\n  imageUrl: Joi.string().optional().allow(''),\n  triggers: Joi.object().optional(),\n})\n\nconst updateTriggersSchema = Joi.object({\n  id: Joi.array().items(Joi.string()).required(),\n  triggers: Joi.object({\n    onPOS: Joi.boolean(),\n    onWidget: Joi.boolean()\n  }).required()\n})\n\nexport const getManufacturers = async (req, res) => {\n  try {\n    const { limit, page } = req.query\n    const data = await _ManufacturerModel().paginate({ isDelete: false }, { limit, page, select: '-isDelete -tenantId' })\n\n    return res.json(data)\n  } catch (err) {\n    console.log(err)\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const createManufacturer = async (req, res) => {\n  try {\n    const validation = Joi.validate(req.body, manufacturerSchema)\n    if (validation.error) throw new Error(validation.error)\n\n    const existing = await _ManufacturerModel().findOne({ name: { $regex: new RegExp(`^${req.body.name}$`), $options: 'i' }, isDelete: false })\n    if (existing) {\n      throw new Error(ERRORS.RESOURCE_ALREADY_EXISTS)\n    }\n\n    const data = await _ManufacturerModel().create(req.body)\n    return res.json({ data })\n  } catch (err) {\n    console.log(err)\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const updateManufacturer = async (req, res) => {\n  try {\n    const { id: _id, ...rest } = req.body\n    const data = await _ManufacturerModel().findOneAndUpdate({ _id }, { $set: flatten(rest) }, { new: true })\n\n    return res.json({ data })\n  } catch (err) {\n    console.log(err)\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const deleteManufacturer = async (req, res) => {\n  try {\n    const { id: ids } = req.body\n    const data = await _ManufacturerModel().updateMany({ _id: { $in: ids } }, { $set: { isDelete: true } }, { new: true })\n\n    return res.json({ data })\n  } catch (err) {\n    console.log(err)\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const updateManufacturerTriggers = async (req, res) => {\n  try {\n    const validation = Joi.validate(req.body, updateTriggersSchema)\n    if (validation.error) throw new Error(validation.error)\n    const { id: _id, ...rest } = req.body\n\n    const data = await _ManufacturerModel().updateMany({_id:{$in:_id}}, { $set: flatten(rest) }, { new: true })\n    return res.json({})\n  } catch (err) {\n    console.log(err)\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573021617935
  },
  "{\"sourceRoot\":\"/app/src/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/models/manufacturer.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/models/manufacturer.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/models/manufacturer.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/models/manufacturer.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/models",
        "sourceFileName": "manufacturer.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongoose = require(\"mongoose\");\n\nvar _multiTenant = require(\"../lib/multiTenant\");\n\nvar manufacturerSchema = new _mongoose.Schema({\n  name: {\n    type: String,\n    required: true\n  },\n  imageUrl: String,\n  triggers: {\n    onPOS: Boolean,\n    onWidget: Boolean\n  },\n  isDelete: {\n    type: Boolean,\n    \"default\": false\n  }\n}, {\n  timestamps: true,\n  skipVersioning: true\n});\n\nvar _default = (0, _multiTenant.tenantModel)('Manufacturer', manufacturerSchema);\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1hbnVmYWN0dXJlci5qcyJdLCJuYW1lcyI6WyJtYW51ZmFjdHVyZXJTY2hlbWEiLCJTY2hlbWEiLCJuYW1lIiwidHlwZSIsIlN0cmluZyIsInJlcXVpcmVkIiwiaW1hZ2VVcmwiLCJ0cmlnZ2VycyIsIm9uUE9TIiwiQm9vbGVhbiIsIm9uV2lkZ2V0IiwiaXNEZWxldGUiLCJ0aW1lc3RhbXBzIiwic2tpcFZlcnNpb25pbmciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFHQSxJQUFNQSxrQkFBa0IsR0FBRyxJQUFJQyxnQkFBSixDQUFXO0FBQ3BDQyxFQUFBQSxJQUFJLEVBQUU7QUFDSkMsSUFBQUEsSUFBSSxFQUFFQyxNQURGO0FBRUpDLElBQUFBLFFBQVEsRUFBRTtBQUZOLEdBRDhCO0FBS3BDQyxFQUFBQSxRQUFRLEVBQUVGLE1BTDBCO0FBTXBDRyxFQUFBQSxRQUFRLEVBQUU7QUFDUkMsSUFBQUEsS0FBSyxFQUFFQyxPQURDO0FBRVJDLElBQUFBLFFBQVEsRUFBRUQ7QUFGRixHQU4wQjtBQVVwQ0UsRUFBQUEsUUFBUSxFQUFFO0FBQ1JSLElBQUFBLElBQUksRUFBRU0sT0FERTtBQUVSLGVBQVM7QUFGRDtBQVYwQixDQUFYLEVBY3hCO0FBQUVHLEVBQUFBLFVBQVUsRUFBRSxJQUFkO0FBQW9CQyxFQUFBQSxjQUFjLEVBQUU7QUFBcEMsQ0Fkd0IsQ0FBM0I7O2VBZ0JlLDhCQUFZLGNBQVosRUFBNEJiLGtCQUE1QixDIiwic291cmNlUm9vdCI6Ii9hcHAvc3JjL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNjaGVtYSB9IGZyb20gJ21vbmdvb3NlJ1xuaW1wb3J0IHsgdGVuYW50TW9kZWwgfSBmcm9tICcuLi9saWIvbXVsdGlUZW5hbnQnXG5cblxuY29uc3QgbWFudWZhY3R1cmVyU2NoZW1hID0gbmV3IFNjaGVtYSh7XG4gIG5hbWU6IHtcbiAgICB0eXBlOiBTdHJpbmcsXG4gICAgcmVxdWlyZWQ6IHRydWVcbiAgfSxcbiAgaW1hZ2VVcmw6IFN0cmluZyxcbiAgdHJpZ2dlcnM6IHtcbiAgICBvblBPUzogQm9vbGVhbixcbiAgICBvbldpZGdldDogQm9vbGVhblxuICB9LFxuICBpc0RlbGV0ZToge1xuICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgZGVmYXVsdDogZmFsc2VcbiAgfVxufSwgeyB0aW1lc3RhbXBzOiB0cnVlLCBza2lwVmVyc2lvbmluZzogdHJ1ZSB9KVxuXG5leHBvcnQgZGVmYXVsdCB0ZW5hbnRNb2RlbCgnTWFudWZhY3R1cmVyJywgbWFudWZhY3R1cmVyU2NoZW1hKVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "manufacturer.js"
      ],
      "names": [
        "manufacturerSchema",
        "Schema",
        "name",
        "type",
        "String",
        "required",
        "imageUrl",
        "triggers",
        "onPOS",
        "Boolean",
        "onWidget",
        "isDelete",
        "timestamps",
        "skipVersioning"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AAGA,IAAMA,kBAAkB,GAAG,IAAIC,gBAAJ,CAAW;AACpCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAEC,MADF;AAEJC,IAAAA,QAAQ,EAAE;AAFN,GAD8B;AAKpCC,EAAAA,QAAQ,EAAEF,MAL0B;AAMpCG,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,EAAEC,OADC;AAERC,IAAAA,QAAQ,EAAED;AAFF,GAN0B;AAUpCE,EAAAA,QAAQ,EAAE;AACRR,IAAAA,IAAI,EAAEM,OADE;AAER,eAAS;AAFD;AAV0B,CAAX,EAcxB;AAAEG,EAAAA,UAAU,EAAE,IAAd;AAAoBC,EAAAA,cAAc,EAAE;AAApC,CAdwB,CAA3B;;eAgBe,8BAAY,cAAZ,EAA4Bb,kBAA5B,C",
      "sourceRoot": "/app/src/models",
      "sourcesContent": [
        "import { Schema } from 'mongoose'\nimport { tenantModel } from '../lib/multiTenant'\n\n\nconst manufacturerSchema = new Schema({\n  name: {\n    type: String,\n    required: true\n  },\n  imageUrl: String,\n  triggers: {\n    onPOS: Boolean,\n    onWidget: Boolean\n  },\n  isDelete: {\n    type: Boolean,\n    default: false\n  }\n}, { timestamps: true, skipVersioning: true })\n\nexport default tenantModel('Manufacturer', manufacturerSchema)\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573021617943
  },
  "{\"sourceRoot\":\"/app/src/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/routes/devices.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/routes/devices.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/routes/devices.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/routes/devices.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/routes",
        "sourceFileName": "devices.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _device = require(\"../controllers/device\");\n\nvar router = (0, _express.Router)();\nrouter.get('/', _device.getDevices);\nrouter.post('/create', _device.createDevice);\nrouter.post('/delete', _device.deleteDevice);\nrouter.post('/update', _device.updateDevice);\nrouter.post('/update_triggers', _device.updateDeviceTriggers);\nrouter.post('/get_file_upload_url', _device.getSignedUrlForDeviceImage);\nrouter.post('/delete_image', _device.deleteImage);\nrouter.post('/by_manufacturer', _device.getDevicesByManufacturer);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRldmljZXMuanMiXSwibmFtZXMiOlsicm91dGVyIiwiZ2V0IiwiZ2V0RGV2aWNlcyIsInBvc3QiLCJjcmVhdGVEZXZpY2UiLCJkZWxldGVEZXZpY2UiLCJ1cGRhdGVEZXZpY2UiLCJ1cGRhdGVEZXZpY2VUcmlnZ2VycyIsImdldFNpZ25lZFVybEZvckRldmljZUltYWdlIiwiZGVsZXRlSW1hZ2UiLCJnZXREZXZpY2VzQnlNYW51ZmFjdHVyZXIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFFQTs7QUFDQSxJQUFNQSxNQUFNLEdBQUcsc0JBQWY7QUFFQUEsTUFBTSxDQUFDQyxHQUFQLENBQVcsR0FBWCxFQUFnQkMsa0JBQWhCO0FBQ0FGLE1BQU0sQ0FBQ0csSUFBUCxDQUFZLFNBQVosRUFBdUJDLG9CQUF2QjtBQUNBSixNQUFNLENBQUNHLElBQVAsQ0FBWSxTQUFaLEVBQXVCRSxvQkFBdkI7QUFDQUwsTUFBTSxDQUFDRyxJQUFQLENBQVksU0FBWixFQUF1Qkcsb0JBQXZCO0FBQ0FOLE1BQU0sQ0FBQ0csSUFBUCxDQUFZLGtCQUFaLEVBQWdDSSw0QkFBaEM7QUFDQVAsTUFBTSxDQUFDRyxJQUFQLENBQVksc0JBQVosRUFBb0NLLGtDQUFwQztBQUNBUixNQUFNLENBQUNHLElBQVAsQ0FBWSxlQUFaLEVBQTZCTSxtQkFBN0I7QUFDQVQsTUFBTSxDQUFDRyxJQUFQLENBQVksa0JBQVosRUFBZ0NPLGdDQUFoQztlQUVlVixNIiwic291cmNlUm9vdCI6Ii9hcHAvc3JjL3JvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJvdXRlciB9IGZyb20gJ2V4cHJlc3MnXG5cbmltcG9ydCB7IGdldERldmljZXMsIGNyZWF0ZURldmljZSwgdXBkYXRlRGV2aWNlLCBkZWxldGVEZXZpY2UsIHVwZGF0ZURldmljZVRyaWdnZXJzLCBnZXRTaWduZWRVcmxGb3JEZXZpY2VJbWFnZSwgZGVsZXRlSW1hZ2UsIGdldERldmljZXNCeU1hbnVmYWN0dXJlciB9IGZyb20gJy4uL2NvbnRyb2xsZXJzL2RldmljZSdcbmNvbnN0IHJvdXRlciA9IFJvdXRlcigpXG5cbnJvdXRlci5nZXQoJy8nLCBnZXREZXZpY2VzKVxucm91dGVyLnBvc3QoJy9jcmVhdGUnLCBjcmVhdGVEZXZpY2UpXG5yb3V0ZXIucG9zdCgnL2RlbGV0ZScsIGRlbGV0ZURldmljZSlcbnJvdXRlci5wb3N0KCcvdXBkYXRlJywgdXBkYXRlRGV2aWNlKVxucm91dGVyLnBvc3QoJy91cGRhdGVfdHJpZ2dlcnMnLCB1cGRhdGVEZXZpY2VUcmlnZ2VycylcbnJvdXRlci5wb3N0KCcvZ2V0X2ZpbGVfdXBsb2FkX3VybCcsIGdldFNpZ25lZFVybEZvckRldmljZUltYWdlKVxucm91dGVyLnBvc3QoJy9kZWxldGVfaW1hZ2UnLCBkZWxldGVJbWFnZSlcbnJvdXRlci5wb3N0KCcvYnlfbWFudWZhY3R1cmVyJywgZ2V0RGV2aWNlc0J5TWFudWZhY3R1cmVyKVxuXG5leHBvcnQgZGVmYXVsdCByb3V0ZXJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "devices.js"
      ],
      "names": [
        "router",
        "get",
        "getDevices",
        "post",
        "createDevice",
        "deleteDevice",
        "updateDevice",
        "updateDeviceTriggers",
        "getSignedUrlForDeviceImage",
        "deleteImage",
        "getDevicesByManufacturer"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA;;AACA,IAAMA,MAAM,GAAG,sBAAf;AAEAA,MAAM,CAACC,GAAP,CAAW,GAAX,EAAgBC,kBAAhB;AACAF,MAAM,CAACG,IAAP,CAAY,SAAZ,EAAuBC,oBAAvB;AACAJ,MAAM,CAACG,IAAP,CAAY,SAAZ,EAAuBE,oBAAvB;AACAL,MAAM,CAACG,IAAP,CAAY,SAAZ,EAAuBG,oBAAvB;AACAN,MAAM,CAACG,IAAP,CAAY,kBAAZ,EAAgCI,4BAAhC;AACAP,MAAM,CAACG,IAAP,CAAY,sBAAZ,EAAoCK,kCAApC;AACAR,MAAM,CAACG,IAAP,CAAY,eAAZ,EAA6BM,mBAA7B;AACAT,MAAM,CAACG,IAAP,CAAY,kBAAZ,EAAgCO,gCAAhC;eAEeV,M",
      "sourceRoot": "/app/src/routes",
      "sourcesContent": [
        "import { Router } from 'express'\n\nimport { getDevices, createDevice, updateDevice, deleteDevice, updateDeviceTriggers, getSignedUrlForDeviceImage, deleteImage, getDevicesByManufacturer } from '../controllers/device'\nconst router = Router()\n\nrouter.get('/', getDevices)\nrouter.post('/create', createDevice)\nrouter.post('/delete', deleteDevice)\nrouter.post('/update', updateDevice)\nrouter.post('/update_triggers', updateDeviceTriggers)\nrouter.post('/get_file_upload_url', getSignedUrlForDeviceImage)\nrouter.post('/delete_image', deleteImage)\nrouter.post('/by_manufacturer', getDevicesByManufacturer)\n\nexport default router\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573021617943
  },
  "{\"sourceRoot\":\"/app/src/controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/controllers/device.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/controllers/device.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/controllers/device.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/controllers/device.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/controllers",
        "sourceFileName": "device.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getDevicesByManufacturer = exports.deleteImage = exports.getSignedUrlForDeviceImage = exports.updateDeviceTriggers = exports.deleteDevice = exports.updateDevice = exports.createDevice = exports.getDevices = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _device = _interopRequireDefault(require(\"../models/device\"));\n\nvar _joi = _interopRequireDefault(require(\"@hapi/joi\"));\n\nvar _flat = _interopRequireDefault(require(\"flat\"));\n\nvar _aws = require(\"../utils/aws\");\n\nvar _errors = _interopRequireDefault(require(\"../constants/errors\"));\n\nvar createDeviceSchema = _joi[\"default\"].object({\n  name: _joi[\"default\"].string().required(),\n  manufacturer: _joi[\"default\"].string().required(),\n  colors: _joi[\"default\"].array().items(_joi[\"default\"].string()).optional(),\n  imageUrl: _joi[\"default\"].string().optional().allow(''),\n  triggers: _joi[\"default\"].object().optional()\n});\n\nvar updateDeviceSchema = _joi[\"default\"].object({\n  id: _joi[\"default\"].string().required(),\n  name: _joi[\"default\"].string(),\n  manufacturer: _joi[\"default\"].string(),\n  colors: _joi[\"default\"].array().items(_joi[\"default\"].string()).optional(),\n  imageUrl: _joi[\"default\"].string().optional().allow(''),\n  triggers: _joi[\"default\"].object().optional()\n});\n\nvar deleteSchema = _joi[\"default\"].object({\n  id: _joi[\"default\"].array().items(_joi[\"default\"].string()).required()\n});\n\nvar updateTriggersSchema = _joi[\"default\"].object({\n  id: _joi[\"default\"].array().items(_joi[\"default\"].string()).required(),\n  triggers: _joi[\"default\"].object({\n    onPOS: _joi[\"default\"][\"boolean\"](),\n    onWidget: _joi[\"default\"][\"boolean\"]()\n  }).required()\n});\n\nvar getByManufacturerSchema = _joi[\"default\"].object({\n  manufacturer: _joi[\"default\"].string().required()\n});\n\nvar getDevices = function getDevices(req, res) {\n  var _req$query, page, limit, data;\n\n  return _regenerator[\"default\"].async(function getDevices$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _req$query = req.query, page = _req$query.page, limit = _req$query.limit;\n          _context.next = 4;\n          return _regenerator[\"default\"].awrap((0, _device[\"default\"])().paginate({\n            isDelete: false\n          }, {\n            page: page,\n            limit: limit,\n            select: '-isDelete',\n            populate: [{\n              path: 'colors',\n              select: 'name colorCode'\n            }, {\n              path: 'manufacturer',\n              select: 'name'\n            }]\n          }));\n\n        case 4:\n          data = _context.sent;\n          return _context.abrupt(\"return\", res.json(data));\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n          return _context.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context.t0.message\n          }));\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 8]]);\n};\n\nexports.getDevices = getDevices;\n\nvar createDevice = function createDevice(req, res) {\n  var validation, existingDevice, data;\n  return _regenerator[\"default\"].async(function createDevice$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          validation = _joi[\"default\"].validate(req.body, createDeviceSchema);\n\n          if (!validation.error) {\n            _context2.next = 4;\n            break;\n          }\n\n          throw new Error(validation.error);\n\n        case 4:\n          _context2.next = 6;\n          return _regenerator[\"default\"].awrap((0, _device[\"default\"])().findOne({\n            name: {\n              $regex: new RegExp(\"^\".concat(req.body.name, \"$\")),\n              $options: 'i'\n            },\n            isDelete: false\n          }));\n\n        case 6:\n          existingDevice = _context2.sent;\n\n          if (!existingDevice) {\n            _context2.next = 9;\n            break;\n          }\n\n          throw new Error(_errors[\"default\"].RESOURCE_ALREADY_EXISTS);\n\n        case 9:\n          _context2.next = 11;\n          return _regenerator[\"default\"].awrap((0, _device[\"default\"])().create(req.body));\n\n        case 11:\n          data = _context2.sent;\n          return _context2.abrupt(\"return\", res.json({\n            data: data\n          }));\n\n        case 15:\n          _context2.prev = 15;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0);\n\n          if (!(_context2.t0.message === _errors[\"default\"].RESOURCE_ALREADY_EXISTS)) {\n            _context2.next = 20;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", res.status(409).json({\n            error: true,\n            reason: _context2.t0.message\n          }));\n\n        case 20:\n          return _context2.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context2.t0.message\n          }));\n\n        case 21:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 15]]);\n};\n\nexports.createDevice = createDevice;\n\nvar updateDevice = function updateDevice(req, res) {\n  var validation, _req$body, _id, rest, existingDevice, data;\n\n  return _regenerator[\"default\"].async(function updateDevice$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          validation = _joi[\"default\"].validate(req.body, updateDeviceSchema);\n\n          if (!validation.error) {\n            _context3.next = 4;\n            break;\n          }\n\n          throw new Error(validation.error);\n\n        case 4:\n          _req$body = req.body, _id = _req$body.id, rest = (0, _objectWithoutProperties2[\"default\"])(_req$body, [\"id\"]);\n\n          if (!rest.name) {\n            _context3.next = 11;\n            break;\n          }\n\n          _context3.next = 8;\n          return _regenerator[\"default\"].awrap((0, _device[\"default\"])().findOne({\n            name: {\n              $regex: new RegExp(rest.name),\n              $options: 'i'\n            },\n            isDelete: false\n          }));\n\n        case 8:\n          existingDevice = _context3.sent;\n\n          if (!(existingDevice && !existingDevice._id.equals(_id))) {\n            _context3.next = 11;\n            break;\n          }\n\n          throw new Error(_errors[\"default\"].RESOURCE_ALREADY_EXISTS);\n\n        case 11:\n          _context3.next = 13;\n          return _regenerator[\"default\"].awrap((0, _device[\"default\"])().findOneAndUpdate({\n            _id: _id,\n            isDelete: false\n          }, {\n            $set: (0, _flat[\"default\"])(rest)\n          }, {\n            \"new\": true\n          }));\n\n        case 13:\n          data = _context3.sent;\n          return _context3.abrupt(\"return\", res.json({\n            data: data\n          }));\n\n        case 17:\n          _context3.prev = 17;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(_context3.t0);\n\n          if (!(_context3.t0.message === _errors[\"default\"].RESOURCE_ALREADY_EXISTS)) {\n            _context3.next = 22;\n            break;\n          }\n\n          return _context3.abrupt(\"return\", res.status(409).json({\n            error: true,\n            reason: _context3.t0.message\n          }));\n\n        case 22:\n          return _context3.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context3.t0.message\n          }));\n\n        case 23:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 17]]);\n};\n\nexports.updateDevice = updateDevice;\n\nvar deleteDevice = function deleteDevice(req, res) {\n  var validation, ids, data;\n  return _regenerator[\"default\"].async(function deleteDevice$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          validation = _joi[\"default\"].validate(req.body, deleteSchema);\n\n          if (!validation.error) {\n            _context4.next = 4;\n            break;\n          }\n\n          throw new Error(validation.error);\n\n        case 4:\n          ids = req.body.id;\n          _context4.next = 7;\n          return _regenerator[\"default\"].awrap((0, _device[\"default\"])().updateMany({\n            _id: {\n              $in: ids\n            }\n          }, {\n            $set: {\n              isDelete: true\n            }\n          }, {\n            \"new\": true\n          }));\n\n        case 7:\n          data = _context4.sent;\n          return _context4.abrupt(\"return\", res.json({\n            data: data\n          }));\n\n        case 11:\n          _context4.prev = 11;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.log(_context4.t0);\n          return _context4.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context4.t0.message\n          }));\n\n        case 15:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, [[0, 11]]);\n};\n\nexports.deleteDevice = deleteDevice;\n\nvar updateDeviceTriggers = function updateDeviceTriggers(req, res) {\n  var validation, _req$body2, _id, rest, data;\n\n  return _regenerator[\"default\"].async(function updateDeviceTriggers$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          validation = _joi[\"default\"].validate(req.body, updateTriggersSchema);\n\n          if (!validation.error) {\n            _context5.next = 4;\n            break;\n          }\n\n          throw new Error(validation.error);\n\n        case 4:\n          _req$body2 = req.body, _id = _req$body2.id, rest = (0, _objectWithoutProperties2[\"default\"])(_req$body2, [\"id\"]);\n          _context5.next = 7;\n          return _regenerator[\"default\"].awrap((0, _device[\"default\"])().updateMany({\n            _id: {\n              $in: _id\n            }\n          }, {\n            $set: (0, _flat[\"default\"])(rest)\n          }, {\n            \"new\": true\n          }));\n\n        case 7:\n          data = _context5.sent;\n          return _context5.abrupt(\"return\", res.json({}));\n\n        case 11:\n          _context5.prev = 11;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.log(_context5.t0);\n          return _context5.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context5.t0.message\n          }));\n\n        case 15:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, [[0, 11]]);\n};\n\nexports.updateDeviceTriggers = updateDeviceTriggers;\n\nvar getSignedUrlForDeviceImage = function getSignedUrlForDeviceImage(req, res) {\n  var file, result;\n  return _regenerator[\"default\"].async(function getSignedUrlForDeviceImage$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          file = req.body.file;\n          _context6.next = 4;\n          return _regenerator[\"default\"].awrap((0, _aws.getSignedUrlForObject)(file, 'devices'));\n\n        case 4:\n          result = _context6.sent;\n          return _context6.abrupt(\"return\", res.json({\n            data: result\n          }));\n\n        case 8:\n          _context6.prev = 8;\n          _context6.t0 = _context6[\"catch\"](0);\n          console.log(_context6.t0);\n          return _context6.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context6.t0.message\n          }));\n\n        case 12:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, [[0, 8]]);\n};\n\nexports.getSignedUrlForDeviceImage = getSignedUrlForDeviceImage;\n\nvar deleteImage = function deleteImage(req, res) {\n  var _id, data, url, result;\n\n  return _regenerator[\"default\"].async(function deleteImage$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          _id = req.body.id;\n\n          if (_id) {\n            _context7.next = 4;\n            break;\n          }\n\n          throw new Error('id is missing from request body.');\n\n        case 4:\n          _context7.next = 6;\n          return _regenerator[\"default\"].awrap((0, _device[\"default\"])().findOne({\n            _id: _id\n          }));\n\n        case 6:\n          data = _context7.sent;\n          url = data.imageUrl;\n          _context7.next = 10;\n          return _regenerator[\"default\"].awrap((0, _aws.deleteObject)(url));\n\n        case 10:\n          result = _context7.sent;\n\n          if (result.error) {\n            _context7.next = 15;\n            break;\n          }\n\n          return _context7.abrupt(\"return\", res.json({\n            data: result\n          }));\n\n        case 15:\n          throw new Error(result.reason);\n\n        case 16:\n          _context7.next = 22;\n          break;\n\n        case 18:\n          _context7.prev = 18;\n          _context7.t0 = _context7[\"catch\"](0);\n          console.log(_context7.t0);\n          return _context7.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context7.t0.message\n          }));\n\n        case 22:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, null, null, [[0, 18]]);\n};\n\nexports.deleteImage = deleteImage;\n\nvar getDevicesByManufacturer = function getDevicesByManufacturer(req, res) {\n  var validation, manufacturer, data;\n  return _regenerator[\"default\"].async(function getDevicesByManufacturer$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.prev = 0;\n          validation = _joi[\"default\"].validate(req.body, getByManufacturerSchema);\n\n          if (!validation.error) {\n            _context8.next = 4;\n            break;\n          }\n\n          throw new Error(validation.error);\n\n        case 4:\n          manufacturer = req.body.manufacturer;\n          _context8.next = 7;\n          return _regenerator[\"default\"].awrap((0, _device[\"default\"])().find({\n            isDelete: false,\n            manufacturer: manufacturer\n          }).select('name'));\n\n        case 7:\n          data = _context8.sent;\n          return _context8.abrupt(\"return\", res.json(data));\n\n        case 11:\n          _context8.prev = 11;\n          _context8.t0 = _context8[\"catch\"](0);\n          console.log(_context8.t0);\n          return _context8.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context8.t0.message\n          }));\n\n        case 15:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, null, null, [[0, 11]]);\n};\n\nexports.getDevicesByManufacturer = getDevicesByManufacturer;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRldmljZS5qcyJdLCJuYW1lcyI6WyJjcmVhdGVEZXZpY2VTY2hlbWEiLCJKb2kiLCJvYmplY3QiLCJuYW1lIiwic3RyaW5nIiwicmVxdWlyZWQiLCJtYW51ZmFjdHVyZXIiLCJjb2xvcnMiLCJhcnJheSIsIml0ZW1zIiwib3B0aW9uYWwiLCJpbWFnZVVybCIsImFsbG93IiwidHJpZ2dlcnMiLCJ1cGRhdGVEZXZpY2VTY2hlbWEiLCJpZCIsImRlbGV0ZVNjaGVtYSIsInVwZGF0ZVRyaWdnZXJzU2NoZW1hIiwib25QT1MiLCJvbldpZGdldCIsImdldEJ5TWFudWZhY3R1cmVyU2NoZW1hIiwiZ2V0RGV2aWNlcyIsInJlcSIsInJlcyIsInF1ZXJ5IiwicGFnZSIsImxpbWl0IiwicGFnaW5hdGUiLCJpc0RlbGV0ZSIsInNlbGVjdCIsInBvcHVsYXRlIiwicGF0aCIsImRhdGEiLCJqc29uIiwiY29uc29sZSIsImxvZyIsInN0YXR1cyIsImVycm9yIiwicmVhc29uIiwibWVzc2FnZSIsImNyZWF0ZURldmljZSIsInZhbGlkYXRpb24iLCJ2YWxpZGF0ZSIsImJvZHkiLCJFcnJvciIsImZpbmRPbmUiLCIkcmVnZXgiLCJSZWdFeHAiLCIkb3B0aW9ucyIsImV4aXN0aW5nRGV2aWNlIiwiRVJST1JTIiwiUkVTT1VSQ0VfQUxSRUFEWV9FWElTVFMiLCJjcmVhdGUiLCJ1cGRhdGVEZXZpY2UiLCJfaWQiLCJyZXN0IiwiZXF1YWxzIiwiZmluZE9uZUFuZFVwZGF0ZSIsIiRzZXQiLCJkZWxldGVEZXZpY2UiLCJpZHMiLCJ1cGRhdGVNYW55IiwiJGluIiwidXBkYXRlRGV2aWNlVHJpZ2dlcnMiLCJnZXRTaWduZWRVcmxGb3JEZXZpY2VJbWFnZSIsImZpbGUiLCJyZXN1bHQiLCJkZWxldGVJbWFnZSIsInVybCIsImdldERldmljZXNCeU1hbnVmYWN0dXJlciIsImZpbmQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFF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QUFBQSwrQ0FNakIsMEJBQWVnRSxJQUFmLENBQW9CO0FBQUUxQyxZQUFBQSxRQUFRLEVBQUUsS0FBWjtBQUFtQnRCLFlBQUFBLFlBQVksRUFBWkE7QUFBbkIsV0FBcEIsRUFBdUR1QixNQUF2RCxDQUE4RCxNQUE5RCxDQU5pQjs7QUFBQTtBQU05QkcsVUFBQUEsSUFOOEI7QUFBQSw0Q0FPN0JULEdBQUcsQ0FBQ1UsSUFBSixDQUFTRCxJQUFULENBUDZCOztBQUFBO0FBQUE7QUFBQTtBQVNwQ0UsVUFBQUEsT0FBTyxDQUFDQyxHQUFSO0FBVG9DLDRDQVU3QlosR0FBRyxDQUFDYSxNQUFKLENBQVcsR0FBWCxFQUFnQkgsSUFBaEIsQ0FBcUI7QUFBRUksWUFBQUEsS0FBSyxFQUFFLElBQVQ7QUFBZUMsWUFBQUEsTUFBTSxFQUFFLGFBQUlDO0FBQTNCLFdBQXJCLENBVjZCOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLENBQWpDIiwic291cmNlUm9vdCI6Ii9hcHAvc3JjL2NvbnRyb2xsZXJzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IF9EZXZpY2VNb2RlbCBmcm9tICcuLi9tb2RlbHMvZGV2aWNlJ1xuaW1wb3J0IEpvaSBmcm9tICdAaGFwaS9qb2knXG5pbXBvcnQgZmxhdHRlbiBmcm9tICdmbGF0J1xuaW1wb3J0IHsgZ2V0U2lnbmVkVXJsRm9yT2JqZWN0LCBkZWxldGVPYmplY3QgfSBmcm9tICcuLi91dGlscy9hd3MnXG5pbXBvcnQgRVJST1JTIGZyb20gJy4uL2NvbnN0YW50cy9lcnJvcnMnXG5cbmNvbnN0IGNyZWF0ZURldmljZVNjaGVtYSA9IEpvaS5vYmplY3Qoe1xuICBuYW1lOiBKb2kuc3RyaW5nKCkucmVxdWlyZWQoKSxcbiAgbWFudWZhY3R1cmVyOiBKb2kuc3RyaW5nKCkucmVxdWlyZWQoKSxcbiAgY29sb3JzOiBKb2kuYXJyYXkoKS5pdGVtcyhKb2kuc3RyaW5nKCkpLm9wdGlvbmFsKCksXG4gIGltYWdlVXJsOiBKb2kuc3RyaW5nKCkub3B0aW9uYWwoKS5hbGxvdygnJyksXG4gIHRyaWdnZXJzOiBKb2kub2JqZWN0KCkub3B0aW9uYWwoKSxcbn0pXG5cbmNvbnN0IHVwZGF0ZURldmljZVNjaGVtYSA9IEpvaS5vYmplY3Qoe1xuICBpZDogSm9pLnN0cmluZygpLnJlcXVpcmVkKCksXG4gIG5hbWU6IEpvaS5zdHJpbmcoKSxcbiAgbWFudWZhY3R1cmVyOiBKb2kuc3RyaW5nKCksXG4gIGNvbG9yczogSm9pLmFycmF5KCkuaXRlbXMoSm9pLnN0cmluZygpKS5vcHRpb25hbCgpLFxuICBpbWFnZVVybDogSm9pLnN0cmluZygpLm9wdGlvbmFsKCkuYWxsb3coJycpLFxuICB0cmlnZ2VyczogSm9pLm9iamVjdCgpLm9wdGlvbmFsKCksXG59KVxuXG5jb25zdCBkZWxldGVTY2hlbWEgPSBKb2kub2JqZWN0KHtcbiAgaWQ6IEpvaS5hcnJheSgpLml0ZW1zKEpvaS5zdHJpbmcoKSkucmVxdWlyZWQoKSxcbn0pXG5cbmNvbnN0IHVwZGF0ZVRyaWdnZXJzU2NoZW1hID0gSm9pLm9iamVjdCh7XG4gIGlkOiBKb2kuYXJyYXkoKS5pdGVtcyhKb2kuc3RyaW5nKCkpLnJlcXVpcmVkKCksXG4gIHRyaWdnZXJzOiBKb2kub2JqZWN0KHtcbiAgICBvblBPUzogSm9pLmJvb2xlYW4oKSxcbiAgICBvbldpZGdldDogSm9pLmJvb2xlYW4oKVxuICB9KS5yZXF1aXJlZCgpXG59KVxuXG5jb25zdCBnZXRCeU1hbnVmYWN0dXJlclNjaGVtYSA9IEpvaS5vYmplY3Qoe1xuICBtYW51ZmFjdHVyZXI6IEpvaS5zdHJpbmcoKS5yZXF1aXJlZCgpLFxufSlcblxuZXhwb3J0IGNvbnN0IGdldERldmljZXMgPSBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCB7IHBhZ2UsIGxpbWl0IH0gPSByZXEucXVlcnlcbiAgICBjb25zdCBkYXRhID0gYXdhaXQgX0RldmljZU1vZGVsKCkucGFnaW5hdGUoeyBpc0RlbGV0ZTogZmFsc2UgfSwgeyBwYWdlLCBsaW1pdCwgc2VsZWN0OiAnLWlzRGVsZXRlJywgcG9wdWxhdGU6IFt7IHBhdGg6ICdjb2xvcnMnLCBzZWxlY3Q6ICduYW1lIGNvbG9yQ29kZScgfSwgeyBwYXRoOiAnbWFudWZhY3R1cmVyJywgc2VsZWN0OiAnbmFtZScgfV0gfSlcblxuICAgIHJldHVybiByZXMuanNvbihkYXRhKVxuICB9IGNhdGNoIChlcnIpIHtcbiAgICBjb25zb2xlLmxvZyhlcnIpXG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgZXJyb3I6IHRydWUsIHJlYXNvbjogZXJyLm1lc3NhZ2UgfSlcbiAgfVxufVxuXG5leHBvcnQgY29uc3QgY3JlYXRlRGV2aWNlID0gYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgdmFsaWRhdGlvbiA9IEpvaS52YWxpZGF0ZShyZXEuYm9keSwgY3JlYXRlRGV2aWNlU2NoZW1hKVxuICAgIGlmICh2YWxpZGF0aW9uLmVycm9yKSB0aHJvdyBuZXcgRXJyb3IodmFsaWRhdGlvbi5lcnJvcilcblxuICAgIGNvbnN0IGV4aXN0aW5nRGV2aWNlID0gYXdhaXQgX0RldmljZU1vZGVsKCkuZmluZE9uZSh7IG5hbWU6IHsgJHJlZ2V4OiBuZXcgUmVnRXhwKGBeJHtyZXEuYm9keS5uYW1lfSRgKSwgJG9wdGlvbnM6ICdpJyB9LCBpc0RlbGV0ZTogZmFsc2UgfSlcbiAgICBpZiAoZXhpc3RpbmdEZXZpY2UpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihFUlJPUlMuUkVTT1VSQ0VfQUxSRUFEWV9FWElTVFMpXG4gICAgfVxuXG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IF9EZXZpY2VNb2RlbCgpLmNyZWF0ZShyZXEuYm9keSlcbiAgICByZXR1cm4gcmVzLmpzb24oeyBkYXRhIH0pXG4gIH0gY2F0Y2ggKGVycikge1xuICAgIGNvbnNvbGUubG9nKGVycilcbiAgICBpZiAoZXJyLm1lc3NhZ2UgPT09IEVSUk9SUy5SRVNPVVJDRV9BTFJFQURZX0VYSVNUUykgcmV0dXJuIHJlcy5zdGF0dXMoNDA5KS5qc29uKHsgZXJyb3I6IHRydWUsIHJlYXNvbjogZXJyLm1lc3NhZ2UgfSlcbiAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLmpzb24oeyBlcnJvcjogdHJ1ZSwgcmVhc29uOiBlcnIubWVzc2FnZSB9KVxuICB9XG59XG5cbmV4cG9ydCBjb25zdCB1cGRhdGVEZXZpY2UgPSBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCB2YWxpZGF0aW9uID0gSm9pLnZhbGlkYXRlKHJlcS5ib2R5LCB1cGRhdGVEZXZpY2VTY2hlbWEpXG4gICAgaWYgKHZhbGlkYXRpb24uZXJyb3IpIHRocm93IG5ldyBFcnJvcih2YWxpZGF0aW9uLmVycm9yKVxuXG4gICAgY29uc3QgeyBpZDogX2lkLCAuLi5yZXN0IH0gPSByZXEuYm9keVxuICAgIGlmIChyZXN0Lm5hbWUpIHtcbiAgICAgIGNvbnN0IGV4aXN0aW5nRGV2aWNlID0gYXdhaXQgX0RldmljZU1vZGVsKCkuZmluZE9uZSh7IG5hbWU6IHsgJHJlZ2V4OiBuZXcgUmVnRXhwKHJlc3QubmFtZSksICRvcHRpb25zOiAnaScgfSwgaXNEZWxldGU6IGZhbHNlIH0pXG4gICAgICBpZiAoZXhpc3RpbmdEZXZpY2UgJiYgIWV4aXN0aW5nRGV2aWNlLl9pZC5lcXVhbHMoX2lkKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoRVJST1JTLlJFU09VUkNFX0FMUkVBRFlfRVhJU1RTKVxuICAgICAgfVxuICAgIH1cblxuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCBfRGV2aWNlTW9kZWwoKS5maW5kT25lQW5kVXBkYXRlKHsgX2lkLCBpc0RlbGV0ZTogZmFsc2UgfSwgeyAkc2V0OiBmbGF0dGVuKHJlc3QpIH0sIHsgbmV3OiB0cnVlIH0pXG5cbiAgICByZXR1cm4gcmVzLmpzb24oeyBkYXRhIH0pXG4gIH0gY2F0Y2ggKGVycikge1xuICAgIGNvbnNvbGUubG9nKGVycilcbiAgICBpZiAoZXJyLm1lc3NhZ2UgPT09IEVSUk9SUy5SRVNPVVJDRV9BTFJFQURZX0VYSVNUUykgcmV0dXJuIHJlcy5zdGF0dXMoNDA5KS5qc29uKHsgZXJyb3I6IHRydWUsIHJlYXNvbjogZXJyLm1lc3NhZ2UgfSlcbiAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLmpzb24oeyBlcnJvcjogdHJ1ZSwgcmVhc29uOiBlcnIubWVzc2FnZSB9KVxuICB9XG59XG5cbmV4cG9ydCBjb25zdCBkZWxldGVEZXZpY2UgPSBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCB2YWxpZGF0aW9uID0gSm9pLnZhbGlkYXRlKHJlcS5ib2R5LCBkZWxldGVTY2hlbWEpXG4gICAgaWYgKHZhbGlkYXRpb24uZXJyb3IpIHRocm93IG5ldyBFcnJvcih2YWxpZGF0aW9uLmVycm9yKVxuXG4gICAgY29uc3QgeyBpZDogaWRzIH0gPSByZXEuYm9keVxuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCBfRGV2aWNlTW9kZWwoKS51cGRhdGVNYW55KHsgX2lkOiB7ICRpbjogaWRzIH0gfSwgeyAkc2V0OiB7IGlzRGVsZXRlOiB0cnVlIH0gfSwgeyBuZXc6IHRydWUgfSlcblxuICAgIHJldHVybiByZXMuanNvbih7IGRhdGEgfSlcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgY29uc29sZS5sb2coZXJyKVxuICAgIHJldHVybiByZXMuc3RhdHVzKDUwMCkuanNvbih7IGVycm9yOiB0cnVlLCByZWFzb246IGVyci5tZXNzYWdlIH0pXG4gIH1cbn1cblxuZXhwb3J0IGNvbnN0IHVwZGF0ZURldmljZVRyaWdnZXJzID0gYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgdmFsaWRhdGlvbiA9IEpvaS52YWxpZGF0ZShyZXEuYm9keSwgdXBkYXRlVHJpZ2dlcnNTY2hlbWEpXG4gICAgaWYgKHZhbGlkYXRpb24uZXJyb3IpIHRocm93IG5ldyBFcnJvcih2YWxpZGF0aW9uLmVycm9yKVxuICAgIGNvbnN0IHsgaWQ6IF9pZCwgLi4ucmVzdCB9ID0gcmVxLmJvZHlcblxuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCBfRGV2aWNlTW9kZWwoKS51cGRhdGVNYW55KHsgX2lkOiB7ICRpbjogX2lkIH0gfSwgeyAkc2V0OiBmbGF0dGVuKHJlc3QpIH0sIHsgbmV3OiB0cnVlIH0pXG4gICAgcmV0dXJuIHJlcy5qc29uKHt9KVxuICB9IGNhdGNoIChlcnIpIHtcbiAgICBjb25zb2xlLmxvZyhlcnIpXG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgZXJyb3I6IHRydWUsIHJlYXNvbjogZXJyLm1lc3NhZ2UgfSlcbiAgfVxufVxuXG5leHBvcnQgY29uc3QgZ2V0U2lnbmVkVXJsRm9yRGV2aWNlSW1hZ2UgPSBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCB7IGZpbGUgfSA9IHJlcS5ib2R5XG4gICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgZ2V0U2lnbmVkVXJsRm9yT2JqZWN0KGZpbGUsICdkZXZpY2VzJylcblxuICAgIHJldHVybiByZXMuanNvbih7IGRhdGE6IHJlc3VsdCB9KVxuICB9IGNhdGNoIChlcnIpIHtcbiAgICBjb25zb2xlLmxvZyhlcnIpXG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgZXJyb3I6IHRydWUsIHJlYXNvbjogZXJyLm1lc3NhZ2UgfSlcbiAgfVxufVxuXG5leHBvcnQgY29uc3QgZGVsZXRlSW1hZ2UgPSBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCB7IGlkOiBfaWQgfSA9IHJlcS5ib2R5XG4gICAgaWYgKCFfaWQpIHRocm93IG5ldyBFcnJvcignaWQgaXMgbWlzc2luZyBmcm9tIHJlcXVlc3QgYm9keS4nKVxuXG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IF9EZXZpY2VNb2RlbCgpLmZpbmRPbmUoeyBfaWQgfSlcbiAgICBjb25zdCB1cmwgPSBkYXRhLmltYWdlVXJsXG4gICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgZGVsZXRlT2JqZWN0KHVybClcbiAgICBpZiAoIXJlc3VsdC5lcnJvcikgcmV0dXJuIHJlcy5qc29uKHsgZGF0YTogcmVzdWx0IH0pXG4gICAgZWxzZSB0aHJvdyBuZXcgRXJyb3IocmVzdWx0LnJlYXNvbilcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgY29uc29sZS5sb2coZXJyKVxuICAgIHJldHVybiByZXMuc3RhdHVzKDUwMCkuanNvbih7IGVycm9yOiB0cnVlLCByZWFzb246IGVyci5tZXNzYWdlIH0pXG4gIH1cbn1cblxuZXhwb3J0IGNvbnN0IGdldERldmljZXNCeU1hbnVmYWN0dXJlciA9IGFzeW5jIChyZXEsIHJlcykgPT4ge1xuXG4gIHRyeSB7XG4gICAgY29uc3QgdmFsaWRhdGlvbiA9IEpvaS52YWxpZGF0ZShyZXEuYm9keSwgZ2V0QnlNYW51ZmFjdHVyZXJTY2hlbWEpXG4gICAgaWYgKHZhbGlkYXRpb24uZXJyb3IpIHRocm93IG5ldyBFcnJvcih2YWxpZGF0aW9uLmVycm9yKVxuICAgIGNvbnN0IHsgbWFudWZhY3R1cmVyIH0gPSByZXEuYm9keVxuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCBfRGV2aWNlTW9kZWwoKS5maW5kKHsgaXNEZWxldGU6IGZhbHNlLCBtYW51ZmFjdHVyZXIgfSkuc2VsZWN0KCduYW1lJylcbiAgICByZXR1cm4gcmVzLmpzb24oZGF0YSlcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgY29uc29sZS5sb2coZXJyKVxuICAgIHJldHVybiByZXMuc3RhdHVzKDUwMCkuanNvbih7IGVycm9yOiB0cnVlLCByZWFzb246IGVyci5tZXNzYWdlIH0pXG4gIH1cbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "device.js"
      ],
      "names": [
        "createDeviceSchema",
        "Joi",
        "object",
        "name",
        "string",
        "required",
        "manufacturer",
        "colors",
        "array",
        "items",
        "optional",
        "imageUrl",
        "allow",
        "triggers",
        "updateDeviceSchema",
        "id",
        "deleteSchema",
        "updateTriggersSchema",
        "onPOS",
        "onWidget",
        "getByManufacturerSchema",
        "getDevices",
        "req",
        "res",
        "query",
        "page",
        "limit",
        "paginate",
        "isDelete",
        "select",
        "populate",
        "path",
        "data",
        "json",
        "console",
        "log",
        "status",
        "error",
        "reason",
        "message",
        "createDevice",
        "validation",
        "validate",
        "body",
        "Error",
        "findOne",
        "$regex",
        "RegExp",
        "$options",
        "existingDevice",
        "ERRORS",
        "RESOURCE_ALREADY_EXISTS",
        "create",
        "updateDevice",
        "_id",
        "rest",
        "equals",
        "findOneAndUpdate",
        "$set",
        "deleteDevice",
        "ids",
        "updateMany",
        "$in",
        "updateDeviceTriggers",
        "getSignedUrlForDeviceImage",
        "file",
        "result",
        "deleteImage",
        "url",
        "getDevicesByManufacturer",
        "find"
      ],
      "mappings": "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",
      "sourceRoot": "/app/src/controllers",
      "sourcesContent": [
        "import _DeviceModel from '../models/device'\nimport Joi from '@hapi/joi'\nimport flatten from 'flat'\nimport { getSignedUrlForObject, deleteObject } from '../utils/aws'\nimport ERRORS from '../constants/errors'\n\nconst createDeviceSchema = Joi.object({\n  name: Joi.string().required(),\n  manufacturer: Joi.string().required(),\n  colors: Joi.array().items(Joi.string()).optional(),\n  imageUrl: Joi.string().optional().allow(''),\n  triggers: Joi.object().optional(),\n})\n\nconst updateDeviceSchema = Joi.object({\n  id: Joi.string().required(),\n  name: Joi.string(),\n  manufacturer: Joi.string(),\n  colors: Joi.array().items(Joi.string()).optional(),\n  imageUrl: Joi.string().optional().allow(''),\n  triggers: Joi.object().optional(),\n})\n\nconst deleteSchema = Joi.object({\n  id: Joi.array().items(Joi.string()).required(),\n})\n\nconst updateTriggersSchema = Joi.object({\n  id: Joi.array().items(Joi.string()).required(),\n  triggers: Joi.object({\n    onPOS: Joi.boolean(),\n    onWidget: Joi.boolean()\n  }).required()\n})\n\nconst getByManufacturerSchema = Joi.object({\n  manufacturer: Joi.string().required(),\n})\n\nexport const getDevices = async (req, res) => {\n  try {\n    const { page, limit } = req.query\n    const data = await _DeviceModel().paginate({ isDelete: false }, { page, limit, select: '-isDelete', populate: [{ path: 'colors', select: 'name colorCode' }, { path: 'manufacturer', select: 'name' }] })\n\n    return res.json(data)\n  } catch (err) {\n    console.log(err)\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const createDevice = async (req, res) => {\n  try {\n    const validation = Joi.validate(req.body, createDeviceSchema)\n    if (validation.error) throw new Error(validation.error)\n\n    const existingDevice = await _DeviceModel().findOne({ name: { $regex: new RegExp(`^${req.body.name}$`), $options: 'i' }, isDelete: false })\n    if (existingDevice) {\n      throw new Error(ERRORS.RESOURCE_ALREADY_EXISTS)\n    }\n\n    const data = await _DeviceModel().create(req.body)\n    return res.json({ data })\n  } catch (err) {\n    console.log(err)\n    if (err.message === ERRORS.RESOURCE_ALREADY_EXISTS) return res.status(409).json({ error: true, reason: err.message })\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const updateDevice = async (req, res) => {\n  try {\n    const validation = Joi.validate(req.body, updateDeviceSchema)\n    if (validation.error) throw new Error(validation.error)\n\n    const { id: _id, ...rest } = req.body\n    if (rest.name) {\n      const existingDevice = await _DeviceModel().findOne({ name: { $regex: new RegExp(rest.name), $options: 'i' }, isDelete: false })\n      if (existingDevice && !existingDevice._id.equals(_id)) {\n        throw new Error(ERRORS.RESOURCE_ALREADY_EXISTS)\n      }\n    }\n\n    const data = await _DeviceModel().findOneAndUpdate({ _id, isDelete: false }, { $set: flatten(rest) }, { new: true })\n\n    return res.json({ data })\n  } catch (err) {\n    console.log(err)\n    if (err.message === ERRORS.RESOURCE_ALREADY_EXISTS) return res.status(409).json({ error: true, reason: err.message })\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const deleteDevice = async (req, res) => {\n  try {\n    const validation = Joi.validate(req.body, deleteSchema)\n    if (validation.error) throw new Error(validation.error)\n\n    const { id: ids } = req.body\n    const data = await _DeviceModel().updateMany({ _id: { $in: ids } }, { $set: { isDelete: true } }, { new: true })\n\n    return res.json({ data })\n  } catch (err) {\n    console.log(err)\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const updateDeviceTriggers = async (req, res) => {\n  try {\n    const validation = Joi.validate(req.body, updateTriggersSchema)\n    if (validation.error) throw new Error(validation.error)\n    const { id: _id, ...rest } = req.body\n\n    const data = await _DeviceModel().updateMany({ _id: { $in: _id } }, { $set: flatten(rest) }, { new: true })\n    return res.json({})\n  } catch (err) {\n    console.log(err)\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const getSignedUrlForDeviceImage = async (req, res) => {\n  try {\n    const { file } = req.body\n    const result = await getSignedUrlForObject(file, 'devices')\n\n    return res.json({ data: result })\n  } catch (err) {\n    console.log(err)\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const deleteImage = async (req, res) => {\n  try {\n    const { id: _id } = req.body\n    if (!_id) throw new Error('id is missing from request body.')\n\n    const data = await _DeviceModel().findOne({ _id })\n    const url = data.imageUrl\n    const result = await deleteObject(url)\n    if (!result.error) return res.json({ data: result })\n    else throw new Error(result.reason)\n  } catch (err) {\n    console.log(err)\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const getDevicesByManufacturer = async (req, res) => {\n\n  try {\n    const validation = Joi.validate(req.body, getByManufacturerSchema)\n    if (validation.error) throw new Error(validation.error)\n    const { manufacturer } = req.body\n    const data = await _DeviceModel().find({ isDelete: false, manufacturer }).select('name')\n    return res.json(data)\n  } catch (err) {\n    console.log(err)\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573021617935
  },
  "{\"sourceRoot\":\"/app/src/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/models/device.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/models/device.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/models/device.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/models/device.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/models",
        "sourceFileName": "device.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongoose = require(\"mongoose\");\n\nvar _multiTenant = require(\"../lib/multiTenant\");\n\nvar deviceSchema = new _mongoose.Schema({\n  name: {\n    type: String,\n    required: true\n  },\n  manufacturer: {\n    type: _mongoose.Schema.Types.ObjectId,\n    ref: 'Manufacturer'\n  },\n  colors: [{\n    type: _mongoose.Schema.Types.ObjectId,\n    ref: 'Color'\n  }],\n  imageUrl: String,\n  triggers: {\n    onPOS: Boolean,\n    onWidget: Boolean\n  },\n  isDelete: {\n    type: Boolean,\n    \"default\": false\n  }\n}, {\n  timestamps: true,\n  skipVersioning: true\n});\n\nvar _default = (0, _multiTenant.tenantModel)('Device', deviceSchema);\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRldmljZS5qcyJdLCJuYW1lcyI6WyJkZXZpY2VTY2hlbWEiLCJTY2hlbWEiLCJuYW1lIiwidHlwZSIsIlN0cmluZyIsInJlcXVpcmVkIiwibWFudWZhY3R1cmVyIiwiVHlwZXMiLCJPYmplY3RJZCIsInJlZiIsImNvbG9ycyIsImltYWdlVXJsIiwidHJpZ2dlcnMiLCJvblBPUyIsIkJvb2xlYW4iLCJvbldpZGdldCIsImlzRGVsZXRlIiwidGltZXN0YW1wcyIsInNraXBWZXJzaW9uaW5nIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBRUEsSUFBTUEsWUFBWSxHQUFHLElBQUlDLGdCQUFKLENBQVc7QUFDOUJDLEVBQUFBLElBQUksRUFBRTtBQUNKQyxJQUFBQSxJQUFJLEVBQUVDLE1BREY7QUFFSkMsSUFBQUEsUUFBUSxFQUFFO0FBRk4sR0FEd0I7QUFLOUJDLEVBQUFBLFlBQVksRUFBRTtBQUNaSCxJQUFBQSxJQUFJLEVBQUVGLGlCQUFPTSxLQUFQLENBQWFDLFFBRFA7QUFFWkMsSUFBQUEsR0FBRyxFQUFFO0FBRk8sR0FMZ0I7QUFTOUJDLEVBQUFBLE1BQU0sRUFBRSxDQUFDO0FBQ1BQLElBQUFBLElBQUksRUFBRUYsaUJBQU9NLEtBQVAsQ0FBYUMsUUFEWjtBQUVQQyxJQUFBQSxHQUFHLEVBQUU7QUFGRSxHQUFELENBVHNCO0FBYTlCRSxFQUFBQSxRQUFRLEVBQUVQLE1BYm9CO0FBYzlCUSxFQUFBQSxRQUFRLEVBQUU7QUFDUkMsSUFBQUEsS0FBSyxFQUFFQyxPQURDO0FBRVJDLElBQUFBLFFBQVEsRUFBRUQ7QUFGRixHQWRvQjtBQWtCOUJFLEVBQUFBLFFBQVEsRUFBRTtBQUNSYixJQUFBQSxJQUFJLEVBQUVXLE9BREU7QUFFUixlQUFTO0FBRkQ7QUFsQm9CLENBQVgsRUFzQmxCO0FBQUVHLEVBQUFBLFVBQVUsRUFBRSxJQUFkO0FBQW9CQyxFQUFBQSxjQUFjLEVBQUU7QUFBcEMsQ0F0QmtCLENBQXJCOztlQXdCZSw4QkFBWSxRQUFaLEVBQXNCbEIsWUFBdEIsQyIsInNvdXJjZVJvb3QiOiIvYXBwL3NyYy9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTY2hlbWEgfSBmcm9tICdtb25nb29zZSdcbmltcG9ydCB7IHRlbmFudE1vZGVsIH0gZnJvbSAnLi4vbGliL211bHRpVGVuYW50J1xuXG5jb25zdCBkZXZpY2VTY2hlbWEgPSBuZXcgU2NoZW1hKHtcbiAgbmFtZToge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgICByZXF1aXJlZDogdHJ1ZVxuICB9LFxuICBtYW51ZmFjdHVyZXI6IHtcbiAgICB0eXBlOiBTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG4gICAgcmVmOiAnTWFudWZhY3R1cmVyJ1xuICB9LFxuICBjb2xvcnM6IFt7XG4gICAgdHlwZTogU2NoZW1hLlR5cGVzLk9iamVjdElkLFxuICAgIHJlZjogJ0NvbG9yJ1xuICB9XSxcbiAgaW1hZ2VVcmw6IFN0cmluZyxcbiAgdHJpZ2dlcnM6IHtcbiAgICBvblBPUzogQm9vbGVhbixcbiAgICBvbldpZGdldDogQm9vbGVhblxuICB9LFxuICBpc0RlbGV0ZToge1xuICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgZGVmYXVsdDogZmFsc2VcbiAgfVxufSwgeyB0aW1lc3RhbXBzOiB0cnVlLCBza2lwVmVyc2lvbmluZzogdHJ1ZSB9KVxuXG5leHBvcnQgZGVmYXVsdCB0ZW5hbnRNb2RlbCgnRGV2aWNlJywgZGV2aWNlU2NoZW1hKVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "device.js"
      ],
      "names": [
        "deviceSchema",
        "Schema",
        "name",
        "type",
        "String",
        "required",
        "manufacturer",
        "Types",
        "ObjectId",
        "ref",
        "colors",
        "imageUrl",
        "triggers",
        "onPOS",
        "Boolean",
        "onWidget",
        "isDelete",
        "timestamps",
        "skipVersioning"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AAEA,IAAMA,YAAY,GAAG,IAAIC,gBAAJ,CAAW;AAC9BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAEC,MADF;AAEJC,IAAAA,QAAQ,EAAE;AAFN,GADwB;AAK9BC,EAAAA,YAAY,EAAE;AACZH,IAAAA,IAAI,EAAEF,iBAAOM,KAAP,CAAaC,QADP;AAEZC,IAAAA,GAAG,EAAE;AAFO,GALgB;AAS9BC,EAAAA,MAAM,EAAE,CAAC;AACPP,IAAAA,IAAI,EAAEF,iBAAOM,KAAP,CAAaC,QADZ;AAEPC,IAAAA,GAAG,EAAE;AAFE,GAAD,CATsB;AAa9BE,EAAAA,QAAQ,EAAEP,MAboB;AAc9BQ,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,EAAEC,OADC;AAERC,IAAAA,QAAQ,EAAED;AAFF,GAdoB;AAkB9BE,EAAAA,QAAQ,EAAE;AACRb,IAAAA,IAAI,EAAEW,OADE;AAER,eAAS;AAFD;AAlBoB,CAAX,EAsBlB;AAAEG,EAAAA,UAAU,EAAE,IAAd;AAAoBC,EAAAA,cAAc,EAAE;AAApC,CAtBkB,CAArB;;eAwBe,8BAAY,QAAZ,EAAsBlB,YAAtB,C",
      "sourceRoot": "/app/src/models",
      "sourcesContent": [
        "import { Schema } from 'mongoose'\nimport { tenantModel } from '../lib/multiTenant'\n\nconst deviceSchema = new Schema({\n  name: {\n    type: String,\n    required: true\n  },\n  manufacturer: {\n    type: Schema.Types.ObjectId,\n    ref: 'Manufacturer'\n  },\n  colors: [{\n    type: Schema.Types.ObjectId,\n    ref: 'Color'\n  }],\n  imageUrl: String,\n  triggers: {\n    onPOS: Boolean,\n    onWidget: Boolean\n  },\n  isDelete: {\n    type: Boolean,\n    default: false\n  }\n}, { timestamps: true, skipVersioning: true })\n\nexport default tenantModel('Device', deviceSchema)\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573021617939
  },
  "{\"sourceRoot\":\"/app/src/utils\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/utils/aws.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/utils",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/utils/aws.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/utils/aws.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/utils/aws.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/utils",
        "sourceFileName": "aws.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deleteObject = exports.getSignedUrlForObject = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _awsSdk = _interopRequireDefault(require(\"aws-sdk\"));\n\nvar _uuid = _interopRequireDefault(require(\"uuid4\"));\n\nvar _storage = require(\"../lib/storage\");\n\nvar generateFileName = function generateFileName(fileName, fileType, path) {\n  var tenantId = (0, _storage.getCurrentTenantId)();\n  var uuid = (0, _uuid[\"default\"])();\n  return \"\".concat(path, \"/\").concat(tenantId, \"_\").concat(uuid, \"_\").concat(fileName, \".\").concat(fileType);\n};\n\nvar getSignedUrlForObject = function getSignedUrlForObject(fileString, path) {\n  var fileParts, fileType, fileName, newFileName, s3, ACL, S3_BUCKET, s3Params, result, data;\n  return _regenerator[\"default\"].async(function getSignedUrlForObject$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          fileParts = fileString.split('.');\n          fileType = fileParts.splice(fileParts.length - 1, 1)[0];\n          fileName = fileParts.join('.');\n          newFileName = generateFileName(fileName, fileType, path);\n          s3 = new _awsSdk[\"default\"].S3();\n          ACL = 'public-read';\n          S3_BUCKET = process.env.AWSBucket;\n          s3Params = {\n            Bucket: S3_BUCKET,\n            Key: newFileName,\n            Expires: 60 * 10,\n            ContentType: fileType,\n            ACL: ACL\n          };\n          _context.next = 11;\n          return _regenerator[\"default\"].awrap(s3.getSignedUrlPromise('putObject', s3Params));\n\n        case 11:\n          result = _context.sent;\n          data = {\n            signedUrl: result,\n            header: {\n              ContentType: fileType,\n              \"x-amz-acl\": ACL\n            },\n            url: \"https://\".concat(S3_BUCKET, \".s3.amazonaws.com/\").concat(newFileName)\n          };\n          return _context.abrupt(\"return\", data);\n\n        case 16:\n          _context.prev = 16;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n          return _context.abrupt(\"return\", {\n            error: true,\n            reason: _context.t0.message\n          });\n\n        case 20:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 16]]);\n};\n\nexports.getSignedUrlForObject = getSignedUrlForObject;\n\nvar deleteObject = function deleteObject(url) {\n  var S3_BUCKET, urlObj, fileName, s3, result;\n  return _regenerator[\"default\"].async(function deleteObject$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          S3_BUCKET = process.env.AWSBucket;\n          urlObj = new URL(url);\n          fileName = urlObj.pathname.slice(1);\n          s3 = new _awsSdk[\"default\"].S3();\n          _context2.next = 7;\n          return _regenerator[\"default\"].awrap(s3.deleteObject({\n            Bucket: S3_BUCKET,\n            Key: fileName\n          }).promise());\n\n        case 7:\n          result = _context2.sent;\n          return _context2.abrupt(\"return\", result);\n\n        case 11:\n          _context2.prev = 11;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0);\n          return _context2.abrupt(\"return\", {\n            error: true,\n            reason: _context2.t0.message\n          });\n\n        case 15:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 11]]);\n};\n\nexports.deleteObject = deleteObject;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF3cy5qcyJdLCJuYW1lcyI6WyJnZW5lcmF0ZUZpbGVOYW1lIiwiZmlsZU5hbWUiLCJmaWxlVHlwZSIsInBhdGgiLCJ0ZW5hbnRJZCIsInV1aWQiLCJnZXRTaWduZWRVcmxGb3JPYmplY3QiLCJmaWxlU3RyaW5nIiwiZmlsZVBhcnRzIiwic3BsaXQiLCJzcGxpY2UiLCJsZW5ndGgiLCJqb2luIiwibmV3RmlsZU5hbWUiLCJzMyIsIkFXUyIsIlMzIiwiQUNMIiwiUzNfQlVDS0VUIiwicHJvY2VzcyIsImVudiIsIkFXU0J1Y2tldCIsInMzUGFyYW1zIiwiQnVja2V0IiwiS2V5IiwiRXhwaXJlcyIsIkNvbnRlbnRUeXBlIiwiZ2V0U2lnbmVkVXJsUHJvbWlzZSIsInJlc3VsdCIsImRhdGEiLCJzaWduZWRVcmwiLCJoZWFkZXIiLCJ1cmwiLCJjb25zb2xlIiwibG9nIiwiZXJyb3IiLCJyZWFzb24iLCJtZXNzYWdlIiwiZGVsZXRlT2JqZWN0IiwidXJsT2JqIiwiVVJMIiwicGF0aG5hbWUiLCJzbGljZSIsInByb21pc2UiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBR0EsSUFBTUEsZ0JBQWdCLEdBQUcsU0FBbkJBLGdCQUFtQixDQUFDQyxRQUFELEVBQVdDLFFBQVgsRUFBcUJDLElBQXJCLEVBQThCO0FBQ3JELE1BQU1DLFFBQVEsR0FBRyxrQ0FBakI7QUFDQSxNQUFNQyxJQUFJLEdBQUcsdUJBQWI7QUFDQSxtQkFBVUYsSUFBVixjQUFrQkMsUUFBbEIsY0FBOEJDLElBQTlCLGNBQXNDSixRQUF0QyxjQUFrREMsUUFBbEQ7QUFDRCxDQUpEOztBQU1PLElBQU1JLHFCQUFxQixHQUFHLFNBQXhCQSxxQkFBd0IsQ0FBT0MsVUFBUCxFQUFtQkosSUFBbkI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFFM0JLLFVBQUFBLFNBRjJCLEdBRWZELFVBQVUsQ0FBQ0UsS0FBWCxDQUFpQixHQUFqQixDQUZlO0FBRzNCUCxVQUFBQSxRQUgyQixHQUdoQk0sU0FBUyxDQUFDRSxNQUFWLENBQWlCRixTQUFTLENBQUNHLE1BQVYsR0FBbUIsQ0FBcEMsRUFBdUMsQ0FBdkMsRUFBMEMsQ0FBMUMsQ0FIZ0I7QUFJM0JWLFVBQUFBLFFBSjJCLEdBSWhCTyxTQUFTLENBQUNJLElBQVYsQ0FBZSxHQUFmLENBSmdCO0FBTTNCQyxVQUFBQSxXQU4yQixHQU1iYixnQkFBZ0IsQ0FBQ0MsUUFBRCxFQUFXQyxRQUFYLEVBQXFCQyxJQUFyQixDQU5IO0FBUTNCVyxVQUFBQSxFQVIyQixHQVF0QixJQUFJQyxtQkFBSUMsRUFBUixFQVJzQjtBQVMzQkMsVUFBQUEsR0FUMkIsR0FTckIsYUFUcUI7QUFVM0JDLFVBQUFBLFNBVjJCLEdBVWZDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxTQVZHO0FBWTNCQyxVQUFBQSxRQVoyQixHQVloQjtBQUNmQyxZQUFBQSxNQUFNLEVBQUVMLFNBRE87QUFFZk0sWUFBQUEsR0FBRyxFQUFFWCxXQUZVO0FBR2ZZLFlBQUFBLE9BQU8sRUFBRSxLQUFLLEVBSEM7QUFJZkMsWUFBQUEsV0FBVyxFQUFFeEIsUUFKRTtBQUtmZSxZQUFBQSxHQUFHLEVBQUhBO0FBTGUsV0FaZ0I7QUFBQTtBQUFBLCtDQW9CWkgsRUFBRSxDQUFDYSxtQkFBSCxDQUF1QixXQUF2QixFQUFvQ0wsUUFBcEMsQ0FwQlk7O0FBQUE7QUFvQjNCTSxVQUFBQSxNQXBCMkI7QUFxQjNCQyxVQUFBQSxJQXJCMkIsR0FxQnBCO0FBQUVDLFlBQUFBLFNBQVMsRUFBRUYsTUFBYjtBQUFxQkcsWUFBQUEsTUFBTSxFQUFFO0FBQUVMLGNBQUFBLFdBQVcsRUFBRXhCLFFBQWY7QUFBeUIsMkJBQWFlO0FBQXRDLGFBQTdCO0FBQTBFZSxZQUFBQSxHQUFHLG9CQUFhZCxTQUFiLCtCQUEyQ0wsV0FBM0M7QUFBN0UsV0FyQm9CO0FBQUEsMkNBc0IxQmdCLElBdEIwQjs7QUFBQTtBQUFBO0FBQUE7QUF3QmpDSSxVQUFBQSxPQUFPLENBQUNDLEdBQVI7QUF4QmlDLDJDQXlCMUI7QUFBRUMsWUFBQUEsS0FBSyxFQUFFLElBQVQ7QUFBZUMsWUFBQUEsTUFBTSxFQUFFLFlBQUlDO0FBQTNCLFdBekIwQjs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxDQUE5Qjs7OztBQThCQSxJQUFNQyxZQUFZLEdBQUcsU0FBZkEsWUFBZSxDQUFPTixHQUFQO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRWxCZCxVQUFBQSxTQUZrQixHQUVOQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsU0FGTjtBQUdsQmtCLFVBQUFBLE1BSGtCLEdBR1QsSUFBSUMsR0FBSixDQUFRUixHQUFSLENBSFM7QUFJbEIvQixVQUFBQSxRQUprQixHQUlQc0MsTUFBTSxDQUFDRSxRQUFQLENBQWdCQyxLQUFoQixDQUFzQixDQUF0QixDQUpPO0FBS2xCNUIsVUFBQUEsRUFMa0IsR0FLYixJQUFJQyxtQkFBSUMsRUFBUixFQUxhO0FBQUE7QUFBQSwrQ0FPSEYsRUFBRSxDQUFDd0IsWUFBSCxDQUFnQjtBQUFFZixZQUFBQSxNQUFNLEVBQUVMLFNBQVY7QUFBcUJNLFlBQUFBLEdBQUcsRUFBRXZCO0FBQTFCLFdBQWhCLEVBQXNEMEMsT0FBdEQsRUFQRzs7QUFBQTtBQU9sQmYsVUFBQUEsTUFQa0I7QUFBQSw0Q0FRakJBLE1BUmlCOztBQUFBO0FBQUE7QUFBQTtBQVV4QkssVUFBQUEsT0FBTyxDQUFDQyxHQUFSO0FBVndCLDRDQVdqQjtBQUFFQyxZQUFBQSxLQUFLLEVBQUUsSUFBVDtBQUFlQyxZQUFBQSxNQUFNLEVBQUUsYUFBSUM7QUFBM0IsV0FYaUI7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsQ0FBckIiLCJzb3VyY2VSb290IjoiL2FwcC9zcmMvdXRpbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQVdTIGZyb20gJ2F3cy1zZGsnXG5pbXBvcnQgdXVpZDQgZnJvbSAndXVpZDQnXG5pbXBvcnQgeyBnZXRDdXJyZW50VGVuYW50SWQgfSBmcm9tICcuLi9saWIvc3RvcmFnZSdcblxuXG5jb25zdCBnZW5lcmF0ZUZpbGVOYW1lID0gKGZpbGVOYW1lLCBmaWxlVHlwZSwgcGF0aCkgPT4ge1xuICBjb25zdCB0ZW5hbnRJZCA9IGdldEN1cnJlbnRUZW5hbnRJZCgpXG4gIGNvbnN0IHV1aWQgPSB1dWlkNCgpXG4gIHJldHVybiBgJHtwYXRofS8ke3RlbmFudElkfV8ke3V1aWR9XyR7ZmlsZU5hbWV9LiR7ZmlsZVR5cGV9YFxufVxuXG5leHBvcnQgY29uc3QgZ2V0U2lnbmVkVXJsRm9yT2JqZWN0ID0gYXN5bmMgKGZpbGVTdHJpbmcsIHBhdGgpID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCBmaWxlUGFydHMgPSBmaWxlU3RyaW5nLnNwbGl0KCcuJylcbiAgICBjb25zdCBmaWxlVHlwZSA9IGZpbGVQYXJ0cy5zcGxpY2UoZmlsZVBhcnRzLmxlbmd0aCAtIDEsIDEpWzBdXG4gICAgY29uc3QgZmlsZU5hbWUgPSBmaWxlUGFydHMuam9pbignLicpXG5cbiAgICBjb25zdCBuZXdGaWxlTmFtZSA9IGdlbmVyYXRlRmlsZU5hbWUoZmlsZU5hbWUsIGZpbGVUeXBlLCBwYXRoKVxuXG4gICAgY29uc3QgczMgPSBuZXcgQVdTLlMzKClcbiAgICBjb25zdCBBQ0wgPSAncHVibGljLXJlYWQnXG4gICAgY29uc3QgUzNfQlVDS0VUID0gcHJvY2Vzcy5lbnYuQVdTQnVja2V0XG5cbiAgICBjb25zdCBzM1BhcmFtcyA9IHtcbiAgICAgIEJ1Y2tldDogUzNfQlVDS0VULFxuICAgICAgS2V5OiBuZXdGaWxlTmFtZSxcbiAgICAgIEV4cGlyZXM6IDYwICogMTAsXG4gICAgICBDb250ZW50VHlwZTogZmlsZVR5cGUsXG4gICAgICBBQ0xcbiAgICB9XG5cbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBzMy5nZXRTaWduZWRVcmxQcm9taXNlKCdwdXRPYmplY3QnLCBzM1BhcmFtcylcbiAgICBjb25zdCBkYXRhID0geyBzaWduZWRVcmw6IHJlc3VsdCwgaGVhZGVyOiB7IENvbnRlbnRUeXBlOiBmaWxlVHlwZSwgXCJ4LWFtei1hY2xcIjogQUNMIH0sIHVybDogYGh0dHBzOi8vJHtTM19CVUNLRVR9LnMzLmFtYXpvbmF3cy5jb20vJHtuZXdGaWxlTmFtZX1gIH1cbiAgICByZXR1cm4gZGF0YVxuICB9IGNhdGNoIChlcnIpIHtcbiAgICBjb25zb2xlLmxvZyhlcnIpXG4gICAgcmV0dXJuIHsgZXJyb3I6IHRydWUsIHJlYXNvbjogZXJyLm1lc3NhZ2UgfVxuICB9XG59XG5cblxuZXhwb3J0IGNvbnN0IGRlbGV0ZU9iamVjdCA9IGFzeW5jICh1cmwpID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCBTM19CVUNLRVQgPSBwcm9jZXNzLmVudi5BV1NCdWNrZXRcbiAgICBjb25zdCB1cmxPYmogPSBuZXcgVVJMKHVybClcbiAgICBjb25zdCBmaWxlTmFtZSA9IHVybE9iai5wYXRobmFtZS5zbGljZSgxKVxuICAgIGNvbnN0IHMzID0gbmV3IEFXUy5TMygpXG5cbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBzMy5kZWxldGVPYmplY3QoeyBCdWNrZXQ6IFMzX0JVQ0tFVCwgS2V5OiBmaWxlTmFtZSB9KS5wcm9taXNlKClcbiAgICByZXR1cm4gcmVzdWx0XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIGNvbnNvbGUubG9nKGVycilcbiAgICByZXR1cm4geyBlcnJvcjogdHJ1ZSwgcmVhc29uOiBlcnIubWVzc2FnZSB9XG4gIH1cbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "aws.js"
      ],
      "names": [
        "generateFileName",
        "fileName",
        "fileType",
        "path",
        "tenantId",
        "uuid",
        "getSignedUrlForObject",
        "fileString",
        "fileParts",
        "split",
        "splice",
        "length",
        "join",
        "newFileName",
        "s3",
        "AWS",
        "S3",
        "ACL",
        "S3_BUCKET",
        "process",
        "env",
        "AWSBucket",
        "s3Params",
        "Bucket",
        "Key",
        "Expires",
        "ContentType",
        "getSignedUrlPromise",
        "result",
        "data",
        "signedUrl",
        "header",
        "url",
        "console",
        "log",
        "error",
        "reason",
        "message",
        "deleteObject",
        "urlObj",
        "URL",
        "pathname",
        "slice",
        "promise"
      ],
      "mappings": "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",
      "sourceRoot": "/app/src/utils",
      "sourcesContent": [
        "import AWS from 'aws-sdk'\nimport uuid4 from 'uuid4'\nimport { getCurrentTenantId } from '../lib/storage'\n\n\nconst generateFileName = (fileName, fileType, path) => {\n  const tenantId = getCurrentTenantId()\n  const uuid = uuid4()\n  return `${path}/${tenantId}_${uuid}_${fileName}.${fileType}`\n}\n\nexport const getSignedUrlForObject = async (fileString, path) => {\n  try {\n    const fileParts = fileString.split('.')\n    const fileType = fileParts.splice(fileParts.length - 1, 1)[0]\n    const fileName = fileParts.join('.')\n\n    const newFileName = generateFileName(fileName, fileType, path)\n\n    const s3 = new AWS.S3()\n    const ACL = 'public-read'\n    const S3_BUCKET = process.env.AWSBucket\n\n    const s3Params = {\n      Bucket: S3_BUCKET,\n      Key: newFileName,\n      Expires: 60 * 10,\n      ContentType: fileType,\n      ACL\n    }\n\n    const result = await s3.getSignedUrlPromise('putObject', s3Params)\n    const data = { signedUrl: result, header: { ContentType: fileType, \"x-amz-acl\": ACL }, url: `https://${S3_BUCKET}.s3.amazonaws.com/${newFileName}` }\n    return data\n  } catch (err) {\n    console.log(err)\n    return { error: true, reason: err.message }\n  }\n}\n\n\nexport const deleteObject = async (url) => {\n  try {\n    const S3_BUCKET = process.env.AWSBucket\n    const urlObj = new URL(url)\n    const fileName = urlObj.pathname.slice(1)\n    const s3 = new AWS.S3()\n\n    const result = await s3.deleteObject({ Bucket: S3_BUCKET, Key: fileName }).promise()\n    return result\n  } catch (err) {\n    console.log(err)\n    return { error: true, reason: err.message }\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573021617947
  },
  "{\"sourceRoot\":\"/app/src/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/routes/productCategories.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/routes/productCategories.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/routes/productCategories.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/routes/productCategories.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/routes",
        "sourceFileName": "productCategories.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _productCategory = require(\"../controllers/productCategory\");\n\nvar router = (0, _express.Router)();\nrouter.get('/', _productCategory.getProductCategories);\nrouter.post('/create', _productCategory.createProductCategory);\nrouter.post('/delete', _productCategory.deleteProductCategory);\nrouter.post('/update', _productCategory.updateProductCategory);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2R1Y3RDYXRlZ29yaWVzLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsImdldCIsImdldFByb2R1Y3RDYXRlZ29yaWVzIiwicG9zdCIsImNyZWF0ZVByb2R1Y3RDYXRlZ29yeSIsImRlbGV0ZVByb2R1Y3RDYXRlZ29yeSIsInVwZGF0ZVByb2R1Y3RDYXRlZ29yeSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUVBOztBQUNBLElBQU1BLE1BQU0sR0FBRyxzQkFBZjtBQUVBQSxNQUFNLENBQUNDLEdBQVAsQ0FBVyxHQUFYLEVBQWdCQyxxQ0FBaEI7QUFDQUYsTUFBTSxDQUFDRyxJQUFQLENBQVksU0FBWixFQUF1QkMsc0NBQXZCO0FBQ0FKLE1BQU0sQ0FBQ0csSUFBUCxDQUFZLFNBQVosRUFBdUJFLHNDQUF2QjtBQUNBTCxNQUFNLENBQUNHLElBQVAsQ0FBWSxTQUFaLEVBQXVCRyxzQ0FBdkI7ZUFHZU4sTSIsInNvdXJjZVJvb3QiOiIvYXBwL3NyYy9yb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSb3V0ZXIgfSBmcm9tICdleHByZXNzJ1xuXG5pbXBvcnQgeyBnZXRQcm9kdWN0Q2F0ZWdvcmllcywgY3JlYXRlUHJvZHVjdENhdGVnb3J5LCBkZWxldGVQcm9kdWN0Q2F0ZWdvcnksIHVwZGF0ZVByb2R1Y3RDYXRlZ29yeSB9IGZyb20gJy4uL2NvbnRyb2xsZXJzL3Byb2R1Y3RDYXRlZ29yeSdcbmNvbnN0IHJvdXRlciA9IFJvdXRlcigpXG5cbnJvdXRlci5nZXQoJy8nLCBnZXRQcm9kdWN0Q2F0ZWdvcmllcylcbnJvdXRlci5wb3N0KCcvY3JlYXRlJywgY3JlYXRlUHJvZHVjdENhdGVnb3J5KVxucm91dGVyLnBvc3QoJy9kZWxldGUnLCBkZWxldGVQcm9kdWN0Q2F0ZWdvcnkpXG5yb3V0ZXIucG9zdCgnL3VwZGF0ZScsIHVwZGF0ZVByb2R1Y3RDYXRlZ29yeSlcblxuXG5leHBvcnQgZGVmYXVsdCByb3V0ZXJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "productCategories.js"
      ],
      "names": [
        "router",
        "get",
        "getProductCategories",
        "post",
        "createProductCategory",
        "deleteProductCategory",
        "updateProductCategory"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA;;AACA,IAAMA,MAAM,GAAG,sBAAf;AAEAA,MAAM,CAACC,GAAP,CAAW,GAAX,EAAgBC,qCAAhB;AACAF,MAAM,CAACG,IAAP,CAAY,SAAZ,EAAuBC,sCAAvB;AACAJ,MAAM,CAACG,IAAP,CAAY,SAAZ,EAAuBE,sCAAvB;AACAL,MAAM,CAACG,IAAP,CAAY,SAAZ,EAAuBG,sCAAvB;eAGeN,M",
      "sourceRoot": "/app/src/routes",
      "sourcesContent": [
        "import { Router } from 'express'\n\nimport { getProductCategories, createProductCategory, deleteProductCategory, updateProductCategory } from '../controllers/productCategory'\nconst router = Router()\n\nrouter.get('/', getProductCategories)\nrouter.post('/create', createProductCategory)\nrouter.post('/delete', deleteProductCategory)\nrouter.post('/update', updateProductCategory)\n\n\nexport default router\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573021617943
  },
  "{\"sourceRoot\":\"/app/src/controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/controllers/productCategory.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/controllers/productCategory.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/controllers/productCategory.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/controllers/productCategory.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/controllers",
        "sourceFileName": "productCategory.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deleteProductCategory = exports.updateProductCategory = exports.createProductCategory = exports.getProductCategories = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _productCategory = _interopRequireDefault(require(\"../models/productCategory\"));\n\nvar _joi = _interopRequireDefault(require(\"@hapi/joi\"));\n\nvar _flat = _interopRequireDefault(require(\"flat\"));\n\nvar _lodash = require(\"lodash\");\n\nvar _errors = _interopRequireDefault(require(\"../constants/errors\"));\n\nvar createSchema = _joi[\"default\"].object({\n  name: _joi[\"default\"].string().required(),\n  parent: _joi[\"default\"].string()\n});\n\nvar updateSchema = _joi[\"default\"].object({\n  id: _joi[\"default\"].string().required(),\n  name: _joi[\"default\"].string(),\n  parent: _joi[\"default\"].string(),\n  valuationMethod: _joi[\"default\"].string().valid(['FIFO', 'LIFO', 'WAC']),\n  triggers: _joi[\"default\"].object({\n    onPOS: _joi[\"default\"][\"boolean\"](),\n    isPart: _joi[\"default\"][\"boolean\"]()\n  })\n});\n\nvar deleteSchema = _joi[\"default\"].object({\n  id: _joi[\"default\"].array().items(_joi[\"default\"].string()).required()\n});\n\nvar hasBulkOperations = function hasBulkOperations(bulk) {\n  return bulk && bulk.s && bulk.s.currentBatch && bulk.s.currentBatch.operations && bulk.s.currentBatch.operations.length > 0;\n};\n\nvar getProductCategories = function getProductCategories(req, res) {\n  var _req$query, page, limit, data;\n\n  return _regenerator[\"default\"].async(function getProductCategories$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _req$query = req.query, page = _req$query.page, limit = _req$query.limit;\n          _context.next = 4;\n          return _regenerator[\"default\"].awrap((0, _productCategory[\"default\"])().paginate({\n            isDelete: false\n          }, {\n            page: page,\n            limit: limit,\n            select: '-isDelete',\n            populate: {\n              path: 'path',\n              select: 'name'\n            }\n          }));\n\n        case 4:\n          data = _context.sent;\n          return _context.abrupt(\"return\", res.json(data));\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n          return _context.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context.t0.message\n          }));\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 8]]);\n};\n\nexports.getProductCategories = getProductCategories;\n\nvar createProductCategory = function createProductCategory(req, res) {\n  var validation, _req$body, name, _req$body$parent, parent, productCategory, parentCategory, data, newID;\n\n  return _regenerator[\"default\"].async(function createProductCategory$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          validation = _joi[\"default\"].validate(req.body, createSchema);\n\n          if (!validation.error) {\n            _context2.next = 4;\n            break;\n          }\n\n          throw new Error(validation.error);\n\n        case 4:\n          _req$body = req.body, name = _req$body.name, _req$body$parent = _req$body.parent, parent = _req$body$parent === void 0 ? '' : _req$body$parent;\n          _context2.next = 7;\n          return _regenerator[\"default\"].awrap((0, _productCategory[\"default\"])().findOne({\n            name: {\n              $regex: new RegExp(\"^\".concat(name, \"$\")),\n              $options: 'i'\n            },\n            isDelete: false\n          }));\n\n        case 7:\n          productCategory = _context2.sent;\n\n          if (!productCategory) {\n            _context2.next = 10;\n            break;\n          }\n\n          throw new Error(_errors[\"default\"].RESOURCE_ALREADY_EXISTS);\n\n        case 10:\n          parentCategory = null;\n\n          if (!parent) {\n            _context2.next = 15;\n            break;\n          }\n\n          _context2.next = 14;\n          return _regenerator[\"default\"].awrap((0, _productCategory[\"default\"])().findById(parent));\n\n        case 14:\n          parentCategory = _context2.sent;\n\n        case 15:\n          data = {};\n          newID = _mongoose[\"default\"].Types.ObjectId();\n\n          if (!parentCategory) {\n            _context2.next = 23;\n            break;\n          }\n\n          _context2.next = 20;\n          return _regenerator[\"default\"].awrap((0, _productCategory[\"default\"])().create({\n            _id: newID,\n            name: name,\n            parent: parentCategory._id,\n            path: [].concat((0, _toConsumableArray2[\"default\"])(parentCategory.path), [newID])\n          }));\n\n        case 20:\n          data = _context2.sent;\n          _context2.next = 26;\n          break;\n\n        case 23:\n          _context2.next = 25;\n          return _regenerator[\"default\"].awrap((0, _productCategory[\"default\"])().create({\n            _id: newID,\n            name: name,\n            path: [newID]\n          }));\n\n        case 25:\n          data = _context2.sent;\n\n        case 26:\n          return _context2.abrupt(\"return\", res.json({\n            data: data\n          }));\n\n        case 29:\n          _context2.prev = 29;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0);\n\n          if (!(_context2.t0.message === _errors[\"default\"].RESOURCE_ALREADY_EXISTS)) {\n            _context2.next = 34;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", res.status(409).json({\n            error: true,\n            reason: _context2.t0.message\n          }));\n\n        case 34:\n          return _context2.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context2.t0.message\n          }));\n\n        case 35:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 29]]);\n};\n\nexports.createProductCategory = createProductCategory;\n\nvar updateProductCategory = function updateProductCategory(req, res) {\n  var validation, _req$body2, _id, parent, rest, existingProductCatergory, oldCategory, parentCategory, pathIndex, oldPathSubset, newPath, $addToSet, childCategories, bulk, data;\n\n  return _regenerator[\"default\"].async(function updateProductCategory$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          validation = _joi[\"default\"].validate(req.body, updateSchema);\n\n          if (!validation.error) {\n            _context3.next = 4;\n            break;\n          }\n\n          throw new Error(validation.error);\n\n        case 4:\n          _req$body2 = req.body, _id = _req$body2.id, parent = _req$body2.parent, rest = (0, _objectWithoutProperties2[\"default\"])(_req$body2, [\"id\", \"parent\"]);\n\n          if (!rest.name) {\n            _context3.next = 11;\n            break;\n          }\n\n          _context3.next = 8;\n          return _regenerator[\"default\"].awrap((0, _productCategory[\"default\"])().findOne({\n            name: {\n              $regex: new RegExp(\"^\".concat(rest.name, \"$\")),\n              $options: 'i'\n            },\n            isDelete: false\n          }));\n\n        case 8:\n          existingProductCatergory = _context3.sent;\n\n          if (!(existingProductCatergory && !existingProductCatergory._id.equals(_id))) {\n            _context3.next = 11;\n            break;\n          }\n\n          throw new Error(_errors[\"default\"].RESOURCE_ALREADY_EXISTS);\n\n        case 11:\n          _context3.next = 13;\n          return _regenerator[\"default\"].awrap((0, _productCategory[\"default\"])().findOne({\n            _id: _id,\n            isDelete: false\n          }));\n\n        case 13:\n          oldCategory = _context3.sent;\n          if (oldCategory.parent) delete rest.valuationMethod;\n\n          if (!(parent && parent !== oldCategory.parent)) {\n            _context3.next = 39;\n            break;\n          }\n\n          _context3.next = 18;\n          return _regenerator[\"default\"].awrap((0, _productCategory[\"default\"])().findOne({\n            _id: parent,\n            isDelete: false\n          }));\n\n        case 18:\n          parentCategory = _context3.sent;\n          pathIndex = (0, _lodash.findIndex)(oldCategory.path, function (val) {\n            return val === parent;\n          });\n          oldPathSubset = oldCategory.path.slice(pathIndex, oldCategory.path.length);\n          newPath = parentCategory.path.concat(oldPathSubset);\n          $addToSet = {\n            path: {\n              $each: newPath\n            }\n          };\n          rest.parent = parent;\n          _context3.next = 26;\n          return _regenerator[\"default\"].awrap((0, _productCategory[\"default\"])().find({\n            parent: _id\n          }));\n\n        case 26:\n          childCategories = _context3.sent;\n          bulk = (0, _productCategory[\"default\"])().collection.initializeOrderedBulkOp();\n          childCategories && childCategories.forEach(function (cat, i) {\n            var childPathIndex = (0, _lodash.findIndex)(cat.path, function (val) {\n              return val === oldCategory.id;\n            });\n            var childOldPathSubset = cat.path.slice(childPathIndex, cat.path.length);\n            var childNewPath = newPath.concat(childOldPathSubset);\n            bulk.find({\n              _id: cat._id\n            }).updateOne({\n              $set: {\n                path: []\n              }\n            });\n            bulk.find({\n              _id: cat._id\n            }).updateOne({\n              $addToSet: {\n                path: {\n                  $each: childNewPath\n                }\n              }\n            });\n          });\n          _context3.next = 31;\n          return _regenerator[\"default\"].awrap((0, _productCategory[\"default\"])().updateOne({\n            _id: _id\n          }, {\n            $set: {\n              path: []\n            }\n          }));\n\n        case 31:\n          _context3.next = 33;\n          return _regenerator[\"default\"].awrap((0, _productCategory[\"default\"])().updateOne({\n            _id: _id\n          }, {\n            $set: (0, _flat[\"default\"])(rest),\n            $addToSet: $addToSet\n          }));\n\n        case 33:\n          if (!hasBulkOperations(bulk)) {\n            _context3.next = 36;\n            break;\n          }\n\n          _context3.next = 36;\n          return _regenerator[\"default\"].awrap(bulk.execute());\n\n        case 36:\n          return _context3.abrupt(\"return\", res.json({\n            data: {}\n          }));\n\n        case 39:\n          _context3.next = 41;\n          return _regenerator[\"default\"].awrap((0, _productCategory[\"default\"])().findOneAndUpdate({\n            _id: _id,\n            isDelete: false\n          }, {\n            $set: (0, _flat[\"default\"])(rest)\n          }, {\n            \"new\": true\n          }));\n\n        case 41:\n          data = _context3.sent;\n          return _context3.abrupt(\"return\", res.json({\n            data: data\n          }));\n\n        case 43:\n          _context3.next = 51;\n          break;\n\n        case 45:\n          _context3.prev = 45;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(_context3.t0);\n\n          if (!(_context3.t0.message === _errors[\"default\"].RESOURCE_ALREADY_EXISTS)) {\n            _context3.next = 50;\n            break;\n          }\n\n          return _context3.abrupt(\"return\", res.status(409).json({\n            error: true,\n            reason: _context3.t0.message\n          }));\n\n        case 50:\n          return _context3.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context3.t0.message\n          }));\n\n        case 51:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 45]]);\n};\n\nexports.updateProductCategory = updateProductCategory;\n\nvar deleteProductCategory = function deleteProductCategory(req, res) {\n  var validation, ids;\n  return _regenerator[\"default\"].async(function deleteProductCategory$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          validation = _joi[\"default\"].validate(req.body, deleteSchema);\n\n          if (!validation.error) {\n            _context4.next = 4;\n            break;\n          }\n\n          throw new Error(validation.error);\n\n        case 4:\n          ids = req.body.id;\n          _context4.next = 7;\n          return _regenerator[\"default\"].awrap((0, _productCategory[\"default\"])().updateMany({\n            _id: {\n              $in: ids\n            }\n          }, {\n            $set: {\n              isDelete: true\n            }\n          }));\n\n        case 7:\n          return _context4.abrupt(\"return\", res.json({\n            data: {}\n          }));\n\n        case 10:\n          _context4.prev = 10;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.log(_context4.t0);\n          return _context4.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context4.t0.message\n          }));\n\n        case 14:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, [[0, 10]]);\n};\n\nexports.deleteProductCategory = deleteProductCategory;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "productCategory.js"
      ],
      "names": [
        "createSchema",
        "Joi",
        "object",
        "name",
        "string",
        "required",
        "parent",
        "updateSchema",
        "id",
        "valuationMethod",
        "valid",
        "triggers",
        "onPOS",
        "isPart",
        "deleteSchema",
        "array",
        "items",
        "hasBulkOperations",
        "bulk",
        "s",
        "currentBatch",
        "operations",
        "length",
        "getProductCategories",
        "req",
        "res",
        "query",
        "page",
        "limit",
        "paginate",
        "isDelete",
        "select",
        "populate",
        "path",
        "data",
        "json",
        "console",
        "log",
        "status",
        "error",
        "reason",
        "message",
        "createProductCategory",
        "validation",
        "validate",
        "body",
        "Error",
        "findOne",
        "$regex",
        "RegExp",
        "$options",
        "productCategory",
        "ERRORS",
        "RESOURCE_ALREADY_EXISTS",
        "parentCategory",
        "findById",
        "newID",
        "mongoose",
        "Types",
        "ObjectId",
        "create",
        "_id",
        "updateProductCategory",
        "rest",
        "existingProductCatergory",
        "equals",
        "oldCategory",
        "pathIndex",
        "val",
        "oldPathSubset",
        "slice",
        "newPath",
        "concat",
        "$addToSet",
        "$each",
        "find",
        "childCategories",
        "collection",
        "initializeOrderedBulkOp",
        "forEach",
        "cat",
        "i",
        "childPathIndex",
        "childOldPathSubset",
        "childNewPath",
        "updateOne",
        "$set",
        "execute",
        "findOneAndUpdate",
        "deleteProductCategory",
        "ids",
        "updateMany",
        "$in"
      ],
      "mappings": "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",
      "sourceRoot": "/app/src/controllers",
      "sourcesContent": [
        "import mongoose from 'mongoose'\nimport _ProductCategoryModel from '../models/productCategory'\nimport Joi from '@hapi/joi'\nimport flatten from 'flat'\nimport { findIndex } from 'lodash'\nimport ERRORS from '../constants/errors'\n\nconst createSchema = Joi.object({\n  name: Joi.string().required(),\n  parent: Joi.string()\n})\n\nconst updateSchema = Joi.object({\n  id: Joi.string().required(),\n  name: Joi.string(),\n  parent: Joi.string(),\n  valuationMethod: Joi.string().valid(['FIFO', 'LIFO', 'WAC']),\n  triggers: Joi.object({\n    onPOS: Joi.boolean(),\n    isPart: Joi.boolean()\n  })\n})\n\nconst deleteSchema = Joi.object({\n  id: Joi.array().items(Joi.string()).required(),\n})\n\n\n\nconst hasBulkOperations = (bulk) => {\n  return bulk\n    && bulk.s\n    && bulk.s.currentBatch\n    && bulk.s.currentBatch.operations\n    && bulk.s.currentBatch.operations.length > 0\n}\n\nexport const getProductCategories = async (req, res) => {\n  try {\n    const { page, limit } = req.query\n    const data = await _ProductCategoryModel().paginate({ isDelete: false }, { page, limit, select: '-isDelete', populate: { path: 'path', select: 'name' } })\n    return res.json(data)\n  } catch (err) {\n    console.log(err)\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const createProductCategory = async (req, res) => {\n  try {\n    const validation = Joi.validate(req.body, createSchema)\n    if (validation.error) throw new Error(validation.error)\n    const { name, parent = '' } = req.body\n\n    const productCategory = await _ProductCategoryModel().findOne({ name: { $regex: new RegExp(`^${name}$`), $options: 'i' }, isDelete: false })\n    if (productCategory) {\n      throw new Error(ERRORS.RESOURCE_ALREADY_EXISTS)\n    }\n\n    let parentCategory = null\n    if (parent) {\n      parentCategory = await _ProductCategoryModel().findById(parent)\n    }\n\n    let data = {}\n    const newID = mongoose.Types.ObjectId()\n    if (parentCategory) {\n      data = await _ProductCategoryModel().create({\n        _id: newID,\n        name,\n        parent: parentCategory._id,\n        path: [...parentCategory.path, newID]\n      })\n    } else {\n      data = await _ProductCategoryModel().create({\n        _id: newID,\n        name,\n        path: [newID]\n      })\n    }\n\n    return res.json({ data })\n  } catch (err) {\n    console.log(err)\n    if (err.message === ERRORS.RESOURCE_ALREADY_EXISTS) return res.status(409).json({ error: true, reason: err.message })\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const updateProductCategory = async (req, res) => {\n  try {\n    const validation = Joi.validate(req.body, updateSchema)\n    if (validation.error) throw new Error(validation.error)\n    const { id: _id, parent, ...rest } = req.body\n\n    if (rest.name) {\n      const existingProductCatergory = await _ProductCategoryModel().findOne({ name: { $regex: new RegExp(`^${rest.name}$`), $options: 'i' }, isDelete: false })\n      if (existingProductCatergory && !existingProductCatergory._id.equals(_id)) {\n        throw new Error(ERRORS.RESOURCE_ALREADY_EXISTS)\n      }\n    }\n\n    const oldCategory = await _ProductCategoryModel().findOne({ _id, isDelete: false })\n    if (oldCategory.parent) delete rest.valuationMethod\n    if (parent && parent !== oldCategory.parent) {\n      const parentCategory = await _ProductCategoryModel().findOne({ _id: parent, isDelete: false })\n      const pathIndex = findIndex(oldCategory.path, (val) => val === parent)\n      const oldPathSubset = oldCategory.path.slice(pathIndex, oldCategory.path.length)\n      const newPath = parentCategory.path.concat(oldPathSubset)\n      const $addToSet = { path: { $each: newPath } }\n      rest.parent = parent\n\n      const childCategories = await _ProductCategoryModel().find({ parent: _id })\n      const bulk = _ProductCategoryModel().collection.initializeOrderedBulkOp()\n\n      childCategories && childCategories.forEach((cat, i) => {\n        const childPathIndex = findIndex(cat.path, (val) => val === oldCategory.id)\n        const childOldPathSubset = cat.path.slice(childPathIndex, cat.path.length)\n        const childNewPath = newPath.concat(childOldPathSubset)\n        bulk.find({ _id: cat._id }).updateOne({ $set: { path: [] } });\n        bulk.find({ _id: cat._id }).updateOne({ $addToSet: { path: { $each: childNewPath } } });\n      })\n\n      await _ProductCategoryModel().updateOne({ _id }, { $set: { path: [] } })\n      await _ProductCategoryModel().updateOne({ _id }, { $set: flatten(rest), $addToSet })\n      if (hasBulkOperations(bulk)) await bulk.execute()\n\n      return res.json({ data: {} })\n    } else {\n      const data = await _ProductCategoryModel().findOneAndUpdate({ _id, isDelete: false }, { $set: flatten(rest) }, { new: true })\n      return res.json({ data })\n    }\n  } catch (err) {\n    console.log(err)\n    if (err.message === ERRORS.RESOURCE_ALREADY_EXISTS) return res.status(409).json({ error: true, reason: err.message })\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const deleteProductCategory = async (req, res) => {\n  try {\n    const validation = Joi.validate(req.body, deleteSchema)\n    if (validation.error) throw new Error(validation.error)\n\n    const { id: ids } = req.body\n\n    await _ProductCategoryModel().updateMany({ _id: { $in: ids } }, { $set: { isDelete: true } })\n    return res.json({ data: {} })\n  } catch (err) {\n    console.log(err)\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573021617939
  },
  "{\"sourceRoot\":\"/app/src/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/models/productCategory.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/models/productCategory.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/models/productCategory.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/models/productCategory.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/models",
        "sourceFileName": "productCategory.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongoose = require(\"mongoose\");\n\nvar _multiTenant = require(\"../lib/multiTenant\");\n\nvar productCategorySchema = new _mongoose.Schema({\n  name: {\n    type: String,\n    required: true\n  },\n  parent: {\n    type: _mongoose.Schema.Types.ObjectId,\n    ref: 'ProductCategory'\n  },\n  path: {\n    type: [_mongoose.Schema.Types.ObjectId],\n    ref: 'ProductCategory'\n  },\n  valuationMethod: {\n    type: String,\n    \"enum\": ['FIFO', 'LIFO', 'WAC']\n  },\n  triggers: {\n    onPOS: {\n      type: Boolean,\n      \"default\": true\n    },\n    isPart: {\n      type: Boolean,\n      \"default\": false\n    }\n  },\n  isDelete: {\n    type: Boolean,\n    \"default\": false\n  }\n}, {\n  timestamps: true,\n  skipVersioning: true\n});\n\nvar _default = (0, _multiTenant.tenantModel)('ProductCategory', productCategorySchema);\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2R1Y3RDYXRlZ29yeS5qcyJdLCJuYW1lcyI6WyJwcm9kdWN0Q2F0ZWdvcnlTY2hlbWEiLCJTY2hlbWEiLCJuYW1lIiwidHlwZSIsIlN0cmluZyIsInJlcXVpcmVkIiwicGFyZW50IiwiVHlwZXMiLCJPYmplY3RJZCIsInJlZiIsInBhdGgiLCJ2YWx1YXRpb25NZXRob2QiLCJ0cmlnZ2VycyIsIm9uUE9TIiwiQm9vbGVhbiIsImlzUGFydCIsImlzRGVsZXRlIiwidGltZXN0YW1wcyIsInNraXBWZXJzaW9uaW5nIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBRUEsSUFBTUEscUJBQXFCLEdBQUcsSUFBSUMsZ0JBQUosQ0FBVztBQUN2Q0MsRUFBQUEsSUFBSSxFQUFFO0FBQ0pDLElBQUFBLElBQUksRUFBRUMsTUFERjtBQUVKQyxJQUFBQSxRQUFRLEVBQUU7QUFGTixHQURpQztBQUt2Q0MsRUFBQUEsTUFBTSxFQUFFO0FBQ05ILElBQUFBLElBQUksRUFBRUYsaUJBQU9NLEtBQVAsQ0FBYUMsUUFEYjtBQUVOQyxJQUFBQSxHQUFHLEVBQUU7QUFGQyxHQUwrQjtBQVN2Q0MsRUFBQUEsSUFBSSxFQUFFO0FBQ0pQLElBQUFBLElBQUksRUFBRSxDQUFDRixpQkFBT00sS0FBUCxDQUFhQyxRQUFkLENBREY7QUFFSkMsSUFBQUEsR0FBRyxFQUFFO0FBRkQsR0FUaUM7QUFhdkNFLEVBQUFBLGVBQWUsRUFBRTtBQUNmUixJQUFBQSxJQUFJLEVBQUVDLE1BRFM7QUFFZixZQUFNLENBQUMsTUFBRCxFQUFTLE1BQVQsRUFBaUIsS0FBakI7QUFGUyxHQWJzQjtBQWlCdkNRLEVBQUFBLFFBQVEsRUFBRTtBQUNSQyxJQUFBQSxLQUFLLEVBQUU7QUFDTFYsTUFBQUEsSUFBSSxFQUFFVyxPQUREO0FBRUwsaUJBQVM7QUFGSixLQURDO0FBS1JDLElBQUFBLE1BQU0sRUFBRTtBQUNOWixNQUFBQSxJQUFJLEVBQUVXLE9BREE7QUFFTixpQkFBUztBQUZIO0FBTEEsR0FqQjZCO0FBMkJ2Q0UsRUFBQUEsUUFBUSxFQUFFO0FBQ1JiLElBQUFBLElBQUksRUFBRVcsT0FERTtBQUVSLGVBQVM7QUFGRDtBQTNCNkIsQ0FBWCxFQWdDM0I7QUFBRUcsRUFBQUEsVUFBVSxFQUFFLElBQWQ7QUFBb0JDLEVBQUFBLGNBQWMsRUFBRTtBQUFwQyxDQWhDMkIsQ0FBOUI7O2VBa0NlLDhCQUFZLGlCQUFaLEVBQStCbEIscUJBQS9CLEMiLCJzb3VyY2VSb290IjoiL2FwcC9zcmMvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU2NoZW1hIH0gZnJvbSAnbW9uZ29vc2UnXG5pbXBvcnQgeyB0ZW5hbnRNb2RlbCB9IGZyb20gJy4uL2xpYi9tdWx0aVRlbmFudCdcblxuY29uc3QgcHJvZHVjdENhdGVnb3J5U2NoZW1hID0gbmV3IFNjaGVtYSh7XG4gIG5hbWU6IHtcbiAgICB0eXBlOiBTdHJpbmcsXG4gICAgcmVxdWlyZWQ6IHRydWVcbiAgfSxcbiAgcGFyZW50OiB7XG4gICAgdHlwZTogU2NoZW1hLlR5cGVzLk9iamVjdElkLFxuICAgIHJlZjogJ1Byb2R1Y3RDYXRlZ29yeSdcbiAgfSxcbiAgcGF0aDoge1xuICAgIHR5cGU6IFtTY2hlbWEuVHlwZXMuT2JqZWN0SWRdLFxuICAgIHJlZjogJ1Byb2R1Y3RDYXRlZ29yeSdcbiAgfSxcbiAgdmFsdWF0aW9uTWV0aG9kOiB7XG4gICAgdHlwZTogU3RyaW5nLFxuICAgIGVudW06IFsnRklGTycsICdMSUZPJywgJ1dBQyddXG4gIH0sXG4gIHRyaWdnZXJzOiB7XG4gICAgb25QT1M6IHtcbiAgICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgICBkZWZhdWx0OiB0cnVlXG4gICAgfSxcbiAgICBpc1BhcnQ6IHtcbiAgICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgICBkZWZhdWx0OiBmYWxzZVxuICAgIH1cbiAgfSxcbiAgaXNEZWxldGU6IHtcbiAgICB0eXBlOiBCb29sZWFuLFxuICAgIGRlZmF1bHQ6IGZhbHNlXG4gIH1cblxufSwgeyB0aW1lc3RhbXBzOiB0cnVlLCBza2lwVmVyc2lvbmluZzogdHJ1ZSB9KVxuXG5leHBvcnQgZGVmYXVsdCB0ZW5hbnRNb2RlbCgnUHJvZHVjdENhdGVnb3J5JywgcHJvZHVjdENhdGVnb3J5U2NoZW1hKVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "productCategory.js"
      ],
      "names": [
        "productCategorySchema",
        "Schema",
        "name",
        "type",
        "String",
        "required",
        "parent",
        "Types",
        "ObjectId",
        "ref",
        "path",
        "valuationMethod",
        "triggers",
        "onPOS",
        "Boolean",
        "isPart",
        "isDelete",
        "timestamps",
        "skipVersioning"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AAEA,IAAMA,qBAAqB,GAAG,IAAIC,gBAAJ,CAAW;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAEC,MADF;AAEJC,IAAAA,QAAQ,EAAE;AAFN,GADiC;AAKvCC,EAAAA,MAAM,EAAE;AACNH,IAAAA,IAAI,EAAEF,iBAAOM,KAAP,CAAaC,QADb;AAENC,IAAAA,GAAG,EAAE;AAFC,GAL+B;AASvCC,EAAAA,IAAI,EAAE;AACJP,IAAAA,IAAI,EAAE,CAACF,iBAAOM,KAAP,CAAaC,QAAd,CADF;AAEJC,IAAAA,GAAG,EAAE;AAFD,GATiC;AAavCE,EAAAA,eAAe,EAAE;AACfR,IAAAA,IAAI,EAAEC,MADS;AAEf,YAAM,CAAC,MAAD,EAAS,MAAT,EAAiB,KAAjB;AAFS,GAbsB;AAiBvCQ,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,EAAE;AACLV,MAAAA,IAAI,EAAEW,OADD;AAEL,iBAAS;AAFJ,KADC;AAKRC,IAAAA,MAAM,EAAE;AACNZ,MAAAA,IAAI,EAAEW,OADA;AAEN,iBAAS;AAFH;AALA,GAjB6B;AA2BvCE,EAAAA,QAAQ,EAAE;AACRb,IAAAA,IAAI,EAAEW,OADE;AAER,eAAS;AAFD;AA3B6B,CAAX,EAgC3B;AAAEG,EAAAA,UAAU,EAAE,IAAd;AAAoBC,EAAAA,cAAc,EAAE;AAApC,CAhC2B,CAA9B;;eAkCe,8BAAY,iBAAZ,EAA+BlB,qBAA/B,C",
      "sourceRoot": "/app/src/models",
      "sourcesContent": [
        "import { Schema } from 'mongoose'\nimport { tenantModel } from '../lib/multiTenant'\n\nconst productCategorySchema = new Schema({\n  name: {\n    type: String,\n    required: true\n  },\n  parent: {\n    type: Schema.Types.ObjectId,\n    ref: 'ProductCategory'\n  },\n  path: {\n    type: [Schema.Types.ObjectId],\n    ref: 'ProductCategory'\n  },\n  valuationMethod: {\n    type: String,\n    enum: ['FIFO', 'LIFO', 'WAC']\n  },\n  triggers: {\n    onPOS: {\n      type: Boolean,\n      default: true\n    },\n    isPart: {\n      type: Boolean,\n      default: false\n    }\n  },\n  isDelete: {\n    type: Boolean,\n    default: false\n  }\n\n}, { timestamps: true, skipVersioning: true })\n\nexport default tenantModel('ProductCategory', productCategorySchema)\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573021617943
  },
  "{\"sourceRoot\":\"/app/src/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/routes/repairCategories.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/routes/repairCategories.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/routes/repairCategories.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/routes/repairCategories.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/routes",
        "sourceFileName": "repairCategories.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _repairCategory = require(\"../controllers/repairCategory\");\n\nvar router = (0, _express.Router)();\nrouter.get('/', _repairCategory.getRepairCategories);\nrouter.post('/create', _repairCategory.createRepairCategory);\nrouter.post('/delete', _repairCategory.deleteRepairCategory);\nrouter.post('/update', _repairCategory.updateRepairCategory);\nrouter.post('/update_triggers', _repairCategory.updateRepairCategoriesTriggers);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlcGFpckNhdGVnb3JpZXMuanMiXSwibmFtZXMiOlsicm91dGVyIiwiZ2V0IiwiZ2V0UmVwYWlyQ2F0ZWdvcmllcyIsInBvc3QiLCJjcmVhdGVSZXBhaXJDYXRlZ29yeSIsImRlbGV0ZVJlcGFpckNhdGVnb3J5IiwidXBkYXRlUmVwYWlyQ2F0ZWdvcnkiLCJ1cGRhdGVSZXBhaXJDYXRlZ29yaWVzVHJpZ2dlcnMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFFQTs7QUFDQSxJQUFNQSxNQUFNLEdBQUcsc0JBQWY7QUFFQUEsTUFBTSxDQUFDQyxHQUFQLENBQVcsR0FBWCxFQUFnQkMsbUNBQWhCO0FBQ0FGLE1BQU0sQ0FBQ0csSUFBUCxDQUFZLFNBQVosRUFBdUJDLG9DQUF2QjtBQUNBSixNQUFNLENBQUNHLElBQVAsQ0FBWSxTQUFaLEVBQXVCRSxvQ0FBdkI7QUFDQUwsTUFBTSxDQUFDRyxJQUFQLENBQVksU0FBWixFQUF1Qkcsb0NBQXZCO0FBQ0FOLE1BQU0sQ0FBQ0csSUFBUCxDQUFZLGtCQUFaLEVBQWdDSSw4Q0FBaEM7ZUFHZVAsTSIsInNvdXJjZVJvb3QiOiIvYXBwL3NyYy9yb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSb3V0ZXIgfSBmcm9tICdleHByZXNzJ1xuXG5pbXBvcnQgeyBnZXRSZXBhaXJDYXRlZ29yaWVzLCBjcmVhdGVSZXBhaXJDYXRlZ29yeSwgZGVsZXRlUmVwYWlyQ2F0ZWdvcnksIHVwZGF0ZVJlcGFpckNhdGVnb3J5LCB1cGRhdGVSZXBhaXJDYXRlZ29yaWVzVHJpZ2dlcnMgfSBmcm9tICcuLi9jb250cm9sbGVycy9yZXBhaXJDYXRlZ29yeSdcbmNvbnN0IHJvdXRlciA9IFJvdXRlcigpXG5cbnJvdXRlci5nZXQoJy8nLCBnZXRSZXBhaXJDYXRlZ29yaWVzKVxucm91dGVyLnBvc3QoJy9jcmVhdGUnLCBjcmVhdGVSZXBhaXJDYXRlZ29yeSlcbnJvdXRlci5wb3N0KCcvZGVsZXRlJywgZGVsZXRlUmVwYWlyQ2F0ZWdvcnkpXG5yb3V0ZXIucG9zdCgnL3VwZGF0ZScsIHVwZGF0ZVJlcGFpckNhdGVnb3J5KVxucm91dGVyLnBvc3QoJy91cGRhdGVfdHJpZ2dlcnMnLCB1cGRhdGVSZXBhaXJDYXRlZ29yaWVzVHJpZ2dlcnMpXG5cblxuZXhwb3J0IGRlZmF1bHQgcm91dGVyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "repairCategories.js"
      ],
      "names": [
        "router",
        "get",
        "getRepairCategories",
        "post",
        "createRepairCategory",
        "deleteRepairCategory",
        "updateRepairCategory",
        "updateRepairCategoriesTriggers"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA;;AACA,IAAMA,MAAM,GAAG,sBAAf;AAEAA,MAAM,CAACC,GAAP,CAAW,GAAX,EAAgBC,mCAAhB;AACAF,MAAM,CAACG,IAAP,CAAY,SAAZ,EAAuBC,oCAAvB;AACAJ,MAAM,CAACG,IAAP,CAAY,SAAZ,EAAuBE,oCAAvB;AACAL,MAAM,CAACG,IAAP,CAAY,SAAZ,EAAuBG,oCAAvB;AACAN,MAAM,CAACG,IAAP,CAAY,kBAAZ,EAAgCI,8CAAhC;eAGeP,M",
      "sourceRoot": "/app/src/routes",
      "sourcesContent": [
        "import { Router } from 'express'\n\nimport { getRepairCategories, createRepairCategory, deleteRepairCategory, updateRepairCategory, updateRepairCategoriesTriggers } from '../controllers/repairCategory'\nconst router = Router()\n\nrouter.get('/', getRepairCategories)\nrouter.post('/create', createRepairCategory)\nrouter.post('/delete', deleteRepairCategory)\nrouter.post('/update', updateRepairCategory)\nrouter.post('/update_triggers', updateRepairCategoriesTriggers)\n\n\nexport default router\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573021617943
  },
  "{\"sourceRoot\":\"/app/src/controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/controllers/repairCategory.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/controllers/repairCategory.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/controllers/repairCategory.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/controllers/repairCategory.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/controllers",
        "sourceFileName": "repairCategory.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.updateRepairCategoriesTriggers = exports.deleteRepairCategory = exports.updateRepairCategory = exports.createRepairCategory = exports.getRepairCategories = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _repairCategory = _interopRequireDefault(require(\"../models/repairCategory\"));\n\nvar _errors = _interopRequireDefault(require(\"../constants/errors\"));\n\nvar _joi = _interopRequireDefault(require(\"@hapi/joi\"));\n\nvar _flat = require(\"flat\");\n\nvar createSchema = _joi[\"default\"].object({\n  name: _joi[\"default\"].string().required(),\n  triggers: _joi[\"default\"].object({\n    onPOS: _joi[\"default\"][\"boolean\"](),\n    onWidget: _joi[\"default\"][\"boolean\"]()\n  }),\n  manufacturers: _joi[\"default\"].array().unique(function (a, b) {\n    return a.manufacturer === b.manufacturer;\n  }).min(1).required().items(_joi[\"default\"].object({\n    manufacturer: _joi[\"default\"].string().required(),\n    devices: _joi[\"default\"].array().unique().min(1).required().items(_joi[\"default\"].string())\n  })),\n  imageUrl: _joi[\"default\"].string().optional().allow('')\n});\n\nvar updateSchema = _joi[\"default\"].object({\n  id: _joi[\"default\"].string().required(),\n  name: _joi[\"default\"].string(),\n  triggers: _joi[\"default\"].object({\n    onPOS: _joi[\"default\"][\"boolean\"](),\n    onWidget: _joi[\"default\"][\"boolean\"]()\n  }),\n  manufacturers: _joi[\"default\"].array().unique(function (a, b) {\n    return a.manufacturer === b.manufacturer;\n  }).min(1).required().items(_joi[\"default\"].object({\n    manufacturer: _joi[\"default\"].string().required(),\n    devices: _joi[\"default\"].array().unique().min(1).required().items(_joi[\"default\"].string())\n  })),\n  imageUrl: _joi[\"default\"].string().optional().allow('')\n});\n\nvar updateTriggersSchema = _joi[\"default\"].object({\n  id: _joi[\"default\"].array().items(_joi[\"default\"].string()).required(),\n  triggers: _joi[\"default\"].object({\n    onPOS: _joi[\"default\"][\"boolean\"](),\n    onWidget: _joi[\"default\"][\"boolean\"]()\n  }).required()\n});\n\nvar deleteSchema = _joi[\"default\"].object({\n  id: _joi[\"default\"].array().items(_joi[\"default\"].string()).required()\n});\n\nvar getRepairCategories = function getRepairCategories(req, res) {\n  var _req$query, page, limit, data;\n\n  return _regenerator[\"default\"].async(function getRepairCategories$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _req$query = req.query, page = _req$query.page, limit = _req$query.limit;\n          _context.next = 4;\n          return _regenerator[\"default\"].awrap((0, _repairCategory[\"default\"])().paginate({\n            isDelete: false\n          }, {\n            page: page,\n            limit: limit,\n            populate: [{\n              path: 'manufacturers.manufacturer',\n              select: 'name'\n            }, {\n              path: 'manufacturers.devices',\n              select: 'name'\n            }]\n          }));\n\n        case 4:\n          data = _context.sent;\n          return _context.abrupt(\"return\", res.json(data));\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n          return _context.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context.t0.message\n          }));\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 8]]);\n};\n\nexports.getRepairCategories = getRepairCategories;\n\nvar createRepairCategory = function createRepairCategory(req, res) {\n  var validation, _req$body, name, triggers, manufacturers, imageUrl, repairCategory, data;\n\n  return _regenerator[\"default\"].async(function createRepairCategory$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          validation = _joi[\"default\"].validate(req.body, createSchema);\n\n          if (!validation.error) {\n            _context2.next = 4;\n            break;\n          }\n\n          throw new Error(validation.error);\n\n        case 4:\n          _req$body = req.body, name = _req$body.name, triggers = _req$body.triggers, manufacturers = _req$body.manufacturers, imageUrl = _req$body.imageUrl;\n          _context2.next = 7;\n          return _regenerator[\"default\"].awrap((0, _repairCategory[\"default\"])().findOne({\n            name: {\n              $regex: new RegExp(name),\n              $options: 'i'\n            },\n            isDelete: false\n          }));\n\n        case 7:\n          repairCategory = _context2.sent;\n\n          if (!repairCategory) {\n            _context2.next = 10;\n            break;\n          }\n\n          throw new Error(_errors[\"default\"].RESOURCE_ALREADY_EXISTS);\n\n        case 10:\n          _context2.next = 12;\n          return _regenerator[\"default\"].awrap((0, _repairCategory[\"default\"])().create({\n            name: name,\n            triggers: triggers,\n            manufacturers: manufacturers,\n            imageUrl: imageUrl\n          }));\n\n        case 12:\n          data = _context2.sent;\n          return _context2.abrupt(\"return\", res.json({\n            data: data\n          }));\n\n        case 16:\n          _context2.prev = 16;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0);\n\n          if (!(_context2.t0.message === _errors[\"default\"].RESOURCE_ALREADY_EXISTS)) {\n            _context2.next = 21;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", res.status(409).json({\n            error: true,\n            reason: _context2.t0.message\n          }));\n\n        case 21:\n          return _context2.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context2.t0.message\n          }));\n\n        case 22:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 16]]);\n};\n\nexports.createRepairCategory = createRepairCategory;\n\nvar updateRepairCategory = function updateRepairCategory(req, res) {\n  var validation, _req$body2, _id, rest, existingRepairCatergory, data;\n\n  return _regenerator[\"default\"].async(function updateRepairCategory$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          validation = _joi[\"default\"].validate(req.body, updateSchema);\n\n          if (!validation.error) {\n            _context3.next = 4;\n            break;\n          }\n\n          throw new Error(validation.error);\n\n        case 4:\n          _req$body2 = req.body, _id = _req$body2.id, rest = (0, _objectWithoutProperties2[\"default\"])(_req$body2, [\"id\"]);\n\n          if (!rest.name) {\n            _context3.next = 11;\n            break;\n          }\n\n          _context3.next = 8;\n          return _regenerator[\"default\"].awrap((0, _repairCategory[\"default\"])().findOne({\n            name: {\n              $regex: new RegExp(rest.name),\n              $options: 'i'\n            },\n            isDelete: false\n          }));\n\n        case 8:\n          existingRepairCatergory = _context3.sent;\n\n          if (!(existingRepairCatergory && !existingRepairCatergory._id.equals(_id))) {\n            _context3.next = 11;\n            break;\n          }\n\n          throw new Error(_errors[\"default\"].RESOURCE_ALREADY_EXISTS);\n\n        case 11:\n          if (rest.triggers) {\n            rest.triggers = (0, _flat.flatten)(rest.triggers);\n          }\n\n          _context3.next = 14;\n          return _regenerator[\"default\"].awrap((0, _repairCategory[\"default\"])().findOneAndUpdate({\n            _id: _id,\n            isDelete: false\n          }, {\n            $set: rest\n          }, {\n            \"new\": true\n          }));\n\n        case 14:\n          data = _context3.sent;\n          return _context3.abrupt(\"return\", res.json({\n            data: data\n          }));\n\n        case 18:\n          _context3.prev = 18;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(_context3.t0);\n\n          if (!(_context3.t0.message === _errors[\"default\"].RESOURCE_ALREADY_EXISTS)) {\n            _context3.next = 23;\n            break;\n          }\n\n          return _context3.abrupt(\"return\", res.status(409).json({\n            error: true,\n            reason: _context3.t0.message\n          }));\n\n        case 23:\n          return _context3.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context3.t0.message\n          }));\n\n        case 24:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 18]]);\n};\n\nexports.updateRepairCategory = updateRepairCategory;\n\nvar deleteRepairCategory = function deleteRepairCategory(req, res) {\n  var validation, _id;\n\n  return _regenerator[\"default\"].async(function deleteRepairCategory$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          validation = _joi[\"default\"].validate(req.body, deleteSchema);\n\n          if (!validation.error) {\n            _context4.next = 4;\n            break;\n          }\n\n          throw new Error(validation.error);\n\n        case 4:\n          _id = req.body.id;\n          _context4.next = 7;\n          return _regenerator[\"default\"].awrap((0, _repairCategory[\"default\"])().updateMany({\n            _id: {\n              $in: _id\n            }\n          }, {\n            $set: {\n              isDelete: true\n            }\n          }));\n\n        case 7:\n          return _context4.abrupt(\"return\", res.json({\n            data: {}\n          }));\n\n        case 10:\n          _context4.prev = 10;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.log(_context4.t0);\n          return _context4.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context4.t0.message\n          }));\n\n        case 14:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, [[0, 10]]);\n};\n\nexports.deleteRepairCategory = deleteRepairCategory;\n\nvar updateRepairCategoriesTriggers = function updateRepairCategoriesTriggers(req, res) {\n  var validation, _req$body3, _id, rest, data;\n\n  return _regenerator[\"default\"].async(function updateRepairCategoriesTriggers$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          validation = _joi[\"default\"].validate(req.body, updateTriggersSchema);\n\n          if (!validation.error) {\n            _context5.next = 4;\n            break;\n          }\n\n          throw new Error(validation.error);\n\n        case 4:\n          _req$body3 = req.body, _id = _req$body3.id, rest = (0, _objectWithoutProperties2[\"default\"])(_req$body3, [\"id\"]);\n          _context5.next = 7;\n          return _regenerator[\"default\"].awrap((0, _repairCategory[\"default\"])().updateMany({\n            _id: {\n              $in: _id\n            }\n          }, {\n            $set: (0, _flat.flatten)(rest)\n          }));\n\n        case 7:\n          data = _context5.sent;\n          return _context5.abrupt(\"return\", res.json({}));\n\n        case 11:\n          _context5.prev = 11;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.log(_context5.t0);\n          return _context5.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context5.t0.message\n          }));\n\n        case 15:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, [[0, 11]]);\n};\n\nexports.updateRepairCategoriesTriggers = updateRepairCategoriesTriggers;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlcGFpckNhdGVnb3J5LmpzIl0sIm5hbWVzIjpbImNyZWF0ZVNjaGVtYSIsIkpvaSIsIm9iamVjdCIsIm5hbWUiLCJzdHJpbmciLCJyZXF1aXJlZCIsInRyaWdnZXJzIiwib25QT1MiLCJvbldpZGdldCIsIm1hbnVmYWN0dXJlcnMiLCJhcnJheSIsInVuaXF1ZSIsImEiLCJiIiwibWFudWZhY3R1cmVyIiwibWluIiwiaXRlbXMiLCJkZXZpY2VzIiwiaW1hZ2VVcmwiLCJvcHRpb25hbCIsImFsbG93IiwidXBkYXRlU2NoZW1hIiwiaWQiLCJ1cGRhdGVUcmlnZ2Vyc1NjaGVtYSIsImRlbGV0ZVNjaGVtYSIsImdldFJlcGFpckNhdGVnb3JpZXMiLCJyZXEiLCJyZXMiLCJxdWVyeSIsInBhZ2UiLCJsaW1pdCIsInBhZ2luYXRlIiwiaXNEZWxldGUiLCJwb3B1bGF0ZSIsInBhdGgiLCJzZWxlY3QiLCJkYXRhIiwianNvbiIsImNvbnNvbGUiLCJsb2ciLCJzdGF0dXMiLCJlcnJvciIsInJlYXNvbiIsIm1lc3NhZ2UiLCJjcmVhdGVSZXBhaXJDYXRlZ29yeSIsInZhbGlkYXRpb24iLCJ2YWxpZGF0ZSIsImJvZHkiLCJFcnJvciIsImZpbmRPbmUiLCIkcmVnZXgiLCJSZWdFeHAiLCIkb3B0aW9ucyIsInJlcGFpckNhdGVnb3J5IiwiRVJST1JTIiwiUkVTT1VSQ0VfQUxSRUFEWV9FWElTVFMiLCJjcmVhdGUiLCJ1cGRhdGVSZXBhaXJDYXRlZ29yeSIsIl9pZCIsInJlc3QiLCJleGlzdGluZ1JlcGFpckNhdGVyZ29yeSIsImVxdWFscyIsImZpbmRPbmVBbmRVcGRhdGUiLCIkc2V0IiwiZGVsZXRlUmVwYWlyQ2F0ZWdvcnkiLCJ1cGRhdGVNYW55IiwiJGluIiwidXBkYXRlUmVwYWlyQ2F0ZWdvcmllc1RyaWdnZXJzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBRUEsSUFBTUEsWUFBWSxHQUFHQyxnQkFBSUMsTUFBSixD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LENBQXZDIiwic291cmNlUm9vdCI6Ii9hcHAvc3JjL2NvbnRyb2xsZXJzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IF9SZXBhaXJDYXRlZ29yeU1vZGVsIGZyb20gJy4uL21vZGVscy9yZXBhaXJDYXRlZ29yeSdcbmltcG9ydCBFUlJPUlMgZnJvbSAnLi4vY29uc3RhbnRzL2Vycm9ycydcbmltcG9ydCBKb2kgZnJvbSAnQGhhcGkvam9pJ1xuaW1wb3J0IHsgZmxhdHRlbiB9IGZyb20gJ2ZsYXQnXG5cbmNvbnN0IGNyZWF0ZVNjaGVtYSA9IEpvaS5vYmplY3Qoe1xuICBuYW1lOiBKb2kuc3RyaW5nKCkucmVxdWlyZWQoKSxcbiAgdHJpZ2dlcnM6IEpvaS5vYmplY3Qoe1xuICAgIG9uUE9TOiBKb2kuYm9vbGVhbigpLFxuICAgIG9uV2lkZ2V0OiBKb2kuYm9vbGVhbigpXG4gIH0pLFxuICBtYW51ZmFjdHVyZXJzOiBKb2kuYXJyYXkoKS51bmlxdWUoKGEsIGIpID0+IGEubWFudWZhY3R1cmVyID09PSBiLm1hbnVmYWN0dXJlcikubWluKDEpLnJlcXVpcmVkKCkuaXRlbXMoSm9pLm9iamVjdCh7XG4gICAgbWFudWZhY3R1cmVyOiBKb2kuc3RyaW5nKCkucmVxdWlyZWQoKSxcbiAgICBkZXZpY2VzOiBKb2kuYXJyYXkoKS51bmlxdWUoKS5taW4oMSkucmVxdWlyZWQoKS5pdGVtcyhKb2kuc3RyaW5nKCkpLFxuICB9KSksXG4gIGltYWdlVXJsOiBKb2kuc3RyaW5nKCkub3B0aW9uYWwoKS5hbGxvdygnJyksXG59KVxuXG5jb25zdCB1cGRhdGVTY2hlbWEgPSBKb2kub2JqZWN0KHtcbiAgaWQ6IEpvaS5zdHJpbmcoKS5yZXF1aXJlZCgpLFxuICBuYW1lOiBKb2kuc3RyaW5nKCksXG4gIHRyaWdnZXJzOiBKb2kub2JqZWN0KHtcbiAgICBvblBPUzogSm9pLmJvb2xlYW4oKSxcbiAgICBvbldpZGdldDogSm9pLmJvb2xlYW4oKVxuICB9KSxcbiAgbWFudWZhY3R1cmVyczogSm9pLmFycmF5KCkudW5pcXVlKChhLCBiKSA9PiBhLm1hbnVmYWN0dXJlciA9PT0gYi5tYW51ZmFjdHVyZXIpLm1pbigxKS5yZXF1aXJlZCgpLml0ZW1zKEpvaS5vYmplY3Qoe1xuICAgIG1hbnVmYWN0dXJlcjogSm9pLnN0cmluZygpLnJlcXVpcmVkKCksXG4gICAgZGV2aWNlczogSm9pLmFycmF5KCkudW5pcXVlKCkubWluKDEpLnJlcXVpcmVkKCkuaXRlbXMoSm9pLnN0cmluZygpKSxcbiAgfSkpLFxuICBpbWFnZVVybDogSm9pLnN0cmluZygpLm9wdGlvbmFsKCkuYWxsb3coJycpLFxufSlcbmNvbnN0IHVwZGF0ZVRyaWdnZXJzU2NoZW1hID0gSm9pLm9iamVjdCh7XG4gIGlkOiBKb2kuYXJyYXkoKS5pdGVtcyhKb2kuc3RyaW5nKCkpLnJlcXVpcmVkKCksXG4gIHRyaWdnZXJzOiBKb2kub2JqZWN0KHtcbiAgICBvblBPUzogSm9pLmJvb2xlYW4oKSxcbiAgICBvbldpZGdldDogSm9pLmJvb2xlYW4oKVxuICB9KS5yZXF1aXJlZCgpXG59KVxuY29uc3QgZGVsZXRlU2NoZW1hID0gSm9pLm9iamVjdCh7XG4gIGlkOiBKb2kuYXJyYXkoKS5pdGVtcyhKb2kuc3RyaW5nKCkpLnJlcXVpcmVkKClcbn0pXG5cbmV4cG9ydCBjb25zdCBnZXRSZXBhaXJDYXRlZ29yaWVzID0gYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgeyBwYWdlLCBsaW1pdCB9ID0gcmVxLnF1ZXJ5XG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IF9SZXBhaXJDYXRlZ29yeU1vZGVsKCkucGFnaW5hdGUoeyBpc0RlbGV0ZTogZmFsc2UgfSwgeyBwYWdlLCBsaW1pdCwgcG9wdWxhdGU6IFt7IHBhdGg6ICdtYW51ZmFjdHVyZXJzLm1hbnVmYWN0dXJlcicsIHNlbGVjdDogJ25hbWUnIH0sIHsgcGF0aDogJ21hbnVmYWN0dXJlcnMuZGV2aWNlcycsIHNlbGVjdDogJ25hbWUnIH1dIH0pXG4gICAgcmV0dXJuIHJlcy5qc29uKGRhdGEpXG4gIH0gY2F0Y2ggKGVycikge1xuICAgIGNvbnNvbGUubG9nKGVycilcbiAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLmpzb24oeyBlcnJvcjogdHJ1ZSwgcmVhc29uOiBlcnIubWVzc2FnZSB9KVxuICB9XG59XG5cbmV4cG9ydCBjb25zdCBjcmVhdGVSZXBhaXJDYXRlZ29yeSA9IGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICB0cnkge1xuICAgIGNvbnN0IHZhbGlkYXRpb24gPSBKb2kudmFsaWRhdGUocmVxLmJvZHksIGNyZWF0ZVNjaGVtYSlcbiAgICBpZiAodmFsaWRhdGlvbi5lcnJvcikgdGhyb3cgbmV3IEVycm9yKHZhbGlkYXRpb24uZXJyb3IpXG4gICAgY29uc3QgeyBuYW1lLCB0cmlnZ2VycywgbWFudWZhY3R1cmVycywgaW1hZ2VVcmwgfSA9IHJlcS5ib2R5XG4gICAgY29uc3QgcmVwYWlyQ2F0ZWdvcnkgPSBhd2FpdCBfUmVwYWlyQ2F0ZWdvcnlNb2RlbCgpLmZpbmRPbmUoeyBuYW1lOiB7ICRyZWdleDogbmV3IFJlZ0V4cChuYW1lKSwgJG9wdGlvbnM6ICdpJyB9LCBpc0RlbGV0ZTogZmFsc2UgfSlcbiAgICBpZiAocmVwYWlyQ2F0ZWdvcnkpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihFUlJPUlMuUkVTT1VSQ0VfQUxSRUFEWV9FWElTVFMpXG4gICAgfVxuXG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IF9SZXBhaXJDYXRlZ29yeU1vZGVsKCkuY3JlYXRlKHtcbiAgICAgIG5hbWUsXG4gICAgICB0cmlnZ2VycyxcbiAgICAgIG1hbnVmYWN0dXJlcnMsXG4gICAgICBpbWFnZVVybFxuICAgIH0pXG4gICAgcmV0dXJuIHJlcy5qc29uKHsgZGF0YSB9KVxuICB9IGNhdGNoIChlcnIpIHtcbiAgICBjb25zb2xlLmxvZyhlcnIpXG4gICAgaWYgKGVyci5tZXNzYWdlID09PSBFUlJPUlMuUkVTT1VSQ0VfQUxSRUFEWV9FWElTVFMpIHJldHVybiByZXMuc3RhdHVzKDQwOSkuanNvbih7IGVycm9yOiB0cnVlLCByZWFzb246IGVyci5tZXNzYWdlIH0pXG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgZXJyb3I6IHRydWUsIHJlYXNvbjogZXJyLm1lc3NhZ2UgfSlcbiAgfVxufVxuXG5leHBvcnQgY29uc3QgdXBkYXRlUmVwYWlyQ2F0ZWdvcnkgPSBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCB2YWxpZGF0aW9uID0gSm9pLnZhbGlkYXRlKHJlcS5ib2R5LCB1cGRhdGVTY2hlbWEpXG4gICAgaWYgKHZhbGlkYXRpb24uZXJyb3IpIHRocm93IG5ldyBFcnJvcih2YWxpZGF0aW9uLmVycm9yKVxuICAgIGNvbnN0IHsgaWQ6IF9pZCwgLi4ucmVzdCB9ID0gcmVxLmJvZHlcblxuICAgIGlmIChyZXN0Lm5hbWUpIHtcbiAgICAgIGNvbnN0IGV4aXN0aW5nUmVwYWlyQ2F0ZXJnb3J5ID0gYXdhaXQgX1JlcGFpckNhdGVnb3J5TW9kZWwoKS5maW5kT25lKHsgbmFtZTogeyAkcmVnZXg6IG5ldyBSZWdFeHAocmVzdC5uYW1lKSwgJG9wdGlvbnM6ICdpJyB9LCBpc0RlbGV0ZTogZmFsc2UgfSlcbiAgICAgIGlmIChleGlzdGluZ1JlcGFpckNhdGVyZ29yeSAmJiAhZXhpc3RpbmdSZXBhaXJDYXRlcmdvcnkuX2lkLmVxdWFscyhfaWQpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihFUlJPUlMuUkVTT1VSQ0VfQUxSRUFEWV9FWElTVFMpXG4gICAgICB9XG4gICAgfVxuICAgIGlmIChyZXN0LnRyaWdnZXJzKSB7XG4gICAgICByZXN0LnRyaWdnZXJzID0gZmxhdHRlbihyZXN0LnRyaWdnZXJzKVxuICAgIH1cbiAgICBjb25zdCBkYXRhID0gYXdhaXQgX1JlcGFpckNhdGVnb3J5TW9kZWwoKS5maW5kT25lQW5kVXBkYXRlKHsgX2lkLCBpc0RlbGV0ZTogZmFsc2UgfSwgeyAkc2V0OiByZXN0IH0sIHsgbmV3OiB0cnVlIH0pXG4gICAgcmV0dXJuIHJlcy5qc29uKHsgZGF0YSB9KVxuICB9IGNhdGNoIChlcnIpIHtcbiAgICBjb25zb2xlLmxvZyhlcnIpXG4gICAgaWYgKGVyci5tZXNzYWdlID09PSBFUlJPUlMuUkVTT1VSQ0VfQUxSRUFEWV9FWElTVFMpIHJldHVybiByZXMuc3RhdHVzKDQwOSkuanNvbih7IGVycm9yOiB0cnVlLCByZWFzb246IGVyci5tZXNzYWdlIH0pXG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgZXJyb3I6IHRydWUsIHJlYXNvbjogZXJyLm1lc3NhZ2UgfSlcbiAgfVxufVxuXG5leHBvcnQgY29uc3QgZGVsZXRlUmVwYWlyQ2F0ZWdvcnkgPSBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCB2YWxpZGF0aW9uID0gSm9pLnZhbGlkYXRlKHJlcS5ib2R5LCBkZWxldGVTY2hlbWEpXG4gICAgaWYgKHZhbGlkYXRpb24uZXJyb3IpIHRocm93IG5ldyBFcnJvcih2YWxpZGF0aW9uLmVycm9yKVxuXG4gICAgY29uc3QgeyBpZDogX2lkIH0gPSByZXEuYm9keVxuICAgIGF3YWl0IF9SZXBhaXJDYXRlZ29yeU1vZGVsKCkudXBkYXRlTWFueSh7IF9pZDogeyAkaW46IF9pZCB9IH0sIHsgJHNldDogeyBpc0RlbGV0ZTogdHJ1ZSB9IH0pXG4gICAgcmV0dXJuIHJlcy5qc29uKHsgZGF0YToge30gfSlcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgY29uc29sZS5sb2coZXJyKVxuICAgIHJldHVybiByZXMuc3RhdHVzKDUwMCkuanNvbih7IGVycm9yOiB0cnVlLCByZWFzb246IGVyci5tZXNzYWdlIH0pXG4gIH1cbn1cblxuZXhwb3J0IGNvbnN0IHVwZGF0ZVJlcGFpckNhdGVnb3JpZXNUcmlnZ2VycyA9IGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICB0cnkge1xuICAgIGNvbnN0IHZhbGlkYXRpb24gPSBKb2kudmFsaWRhdGUocmVxLmJvZHksIHVwZGF0ZVRyaWdnZXJzU2NoZW1hKVxuICAgIGlmICh2YWxpZGF0aW9uLmVycm9yKSB0aHJvdyBuZXcgRXJyb3IodmFsaWRhdGlvbi5lcnJvcilcbiAgICBjb25zdCB7IGlkOiBfaWQsIC4uLnJlc3QgfSA9IHJlcS5ib2R5XG5cbiAgICBjb25zdCBkYXRhID0gYXdhaXQgX1JlcGFpckNhdGVnb3J5TW9kZWwoKS51cGRhdGVNYW55KHsgX2lkOiB7ICRpbjogX2lkIH0gfSwgeyAkc2V0OiBmbGF0dGVuKHJlc3QpIH0pXG4gICAgcmV0dXJuIHJlcy5qc29uKHt9KVxuICB9IGNhdGNoIChlcnIpIHtcbiAgICBjb25zb2xlLmxvZyhlcnIpXG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgZXJyb3I6IHRydWUsIHJlYXNvbjogZXJyLm1lc3NhZ2UgfSlcbiAgfVxufVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "repairCategory.js"
      ],
      "names": [
        "createSchema",
        "Joi",
        "object",
        "name",
        "string",
        "required",
        "triggers",
        "onPOS",
        "onWidget",
        "manufacturers",
        "array",
        "unique",
        "a",
        "b",
        "manufacturer",
        "min",
        "items",
        "devices",
        "imageUrl",
        "optional",
        "allow",
        "updateSchema",
        "id",
        "updateTriggersSchema",
        "deleteSchema",
        "getRepairCategories",
        "req",
        "res",
        "query",
        "page",
        "limit",
        "paginate",
        "isDelete",
        "populate",
        "path",
        "select",
        "data",
        "json",
        "console",
        "log",
        "status",
        "error",
        "reason",
        "message",
        "createRepairCategory",
        "validation",
        "validate",
        "body",
        "Error",
        "findOne",
        "$regex",
        "RegExp",
        "$options",
        "repairCategory",
        "ERRORS",
        "RESOURCE_ALREADY_EXISTS",
        "create",
        "updateRepairCategory",
        "_id",
        "rest",
        "existingRepairCatergory",
        "equals",
        "findOneAndUpdate",
        "$set",
        "deleteRepairCategory",
        "updateMany",
        "$in",
        "updateRepairCategoriesTriggers"
      ],
      "mappings": "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",
      "sourceRoot": "/app/src/controllers",
      "sourcesContent": [
        "import _RepairCategoryModel from '../models/repairCategory'\nimport ERRORS from '../constants/errors'\nimport Joi from '@hapi/joi'\nimport { flatten } from 'flat'\n\nconst createSchema = Joi.object({\n  name: Joi.string().required(),\n  triggers: Joi.object({\n    onPOS: Joi.boolean(),\n    onWidget: Joi.boolean()\n  }),\n  manufacturers: Joi.array().unique((a, b) => a.manufacturer === b.manufacturer).min(1).required().items(Joi.object({\n    manufacturer: Joi.string().required(),\n    devices: Joi.array().unique().min(1).required().items(Joi.string()),\n  })),\n  imageUrl: Joi.string().optional().allow(''),\n})\n\nconst updateSchema = Joi.object({\n  id: Joi.string().required(),\n  name: Joi.string(),\n  triggers: Joi.object({\n    onPOS: Joi.boolean(),\n    onWidget: Joi.boolean()\n  }),\n  manufacturers: Joi.array().unique((a, b) => a.manufacturer === b.manufacturer).min(1).required().items(Joi.object({\n    manufacturer: Joi.string().required(),\n    devices: Joi.array().unique().min(1).required().items(Joi.string()),\n  })),\n  imageUrl: Joi.string().optional().allow(''),\n})\nconst updateTriggersSchema = Joi.object({\n  id: Joi.array().items(Joi.string()).required(),\n  triggers: Joi.object({\n    onPOS: Joi.boolean(),\n    onWidget: Joi.boolean()\n  }).required()\n})\nconst deleteSchema = Joi.object({\n  id: Joi.array().items(Joi.string()).required()\n})\n\nexport const getRepairCategories = async (req, res) => {\n  try {\n    const { page, limit } = req.query\n    const data = await _RepairCategoryModel().paginate({ isDelete: false }, { page, limit, populate: [{ path: 'manufacturers.manufacturer', select: 'name' }, { path: 'manufacturers.devices', select: 'name' }] })\n    return res.json(data)\n  } catch (err) {\n    console.log(err)\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const createRepairCategory = async (req, res) => {\n  try {\n    const validation = Joi.validate(req.body, createSchema)\n    if (validation.error) throw new Error(validation.error)\n    const { name, triggers, manufacturers, imageUrl } = req.body\n    const repairCategory = await _RepairCategoryModel().findOne({ name: { $regex: new RegExp(name), $options: 'i' }, isDelete: false })\n    if (repairCategory) {\n      throw new Error(ERRORS.RESOURCE_ALREADY_EXISTS)\n    }\n\n    const data = await _RepairCategoryModel().create({\n      name,\n      triggers,\n      manufacturers,\n      imageUrl\n    })\n    return res.json({ data })\n  } catch (err) {\n    console.log(err)\n    if (err.message === ERRORS.RESOURCE_ALREADY_EXISTS) return res.status(409).json({ error: true, reason: err.message })\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const updateRepairCategory = async (req, res) => {\n  try {\n    const validation = Joi.validate(req.body, updateSchema)\n    if (validation.error) throw new Error(validation.error)\n    const { id: _id, ...rest } = req.body\n\n    if (rest.name) {\n      const existingRepairCatergory = await _RepairCategoryModel().findOne({ name: { $regex: new RegExp(rest.name), $options: 'i' }, isDelete: false })\n      if (existingRepairCatergory && !existingRepairCatergory._id.equals(_id)) {\n        throw new Error(ERRORS.RESOURCE_ALREADY_EXISTS)\n      }\n    }\n    if (rest.triggers) {\n      rest.triggers = flatten(rest.triggers)\n    }\n    const data = await _RepairCategoryModel().findOneAndUpdate({ _id, isDelete: false }, { $set: rest }, { new: true })\n    return res.json({ data })\n  } catch (err) {\n    console.log(err)\n    if (err.message === ERRORS.RESOURCE_ALREADY_EXISTS) return res.status(409).json({ error: true, reason: err.message })\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const deleteRepairCategory = async (req, res) => {\n  try {\n    const validation = Joi.validate(req.body, deleteSchema)\n    if (validation.error) throw new Error(validation.error)\n\n    const { id: _id } = req.body\n    await _RepairCategoryModel().updateMany({ _id: { $in: _id } }, { $set: { isDelete: true } })\n    return res.json({ data: {} })\n  } catch (err) {\n    console.log(err)\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const updateRepairCategoriesTriggers = async (req, res) => {\n  try {\n    const validation = Joi.validate(req.body, updateTriggersSchema)\n    if (validation.error) throw new Error(validation.error)\n    const { id: _id, ...rest } = req.body\n\n    const data = await _RepairCategoryModel().updateMany({ _id: { $in: _id } }, { $set: flatten(rest) })\n    return res.json({})\n  } catch (err) {\n    console.log(err)\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573021617939
  },
  "{\"sourceRoot\":\"/app/src/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/models/repairCategory.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/models/repairCategory.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/models/repairCategory.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/models/repairCategory.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/models",
        "sourceFileName": "repairCategory.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongoose = require(\"mongoose\");\n\nvar _multiTenant = require(\"../lib/multiTenant\");\n\nvar repairCategorySchema = new _mongoose.Schema({\n  name: {\n    type: String,\n    required: true\n  },\n  imageUrl: String,\n  manufacturers: [{\n    manufacturer: {\n      type: _mongoose.Schema.Types.ObjectId,\n      ref: 'Manufacturer',\n      required: true\n    },\n    devices: [{\n      type: _mongoose.Schema.Types.ObjectId,\n      ref: 'Device'\n    }]\n  }],\n  triggers: {\n    onPOS: {\n      type: Boolean,\n      \"default\": true\n    },\n    onWidget: {\n      type: Boolean,\n      \"default\": true\n    }\n  },\n  isDelete: {\n    type: Boolean,\n    \"default\": false\n  }\n}, {\n  timestamps: true,\n  skipVersioning: true\n});\n\nvar _default = (0, _multiTenant.tenantModel)('RepairCategory', repairCategorySchema);\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlcGFpckNhdGVnb3J5LmpzIl0sIm5hbWVzIjpbInJlcGFpckNhdGVnb3J5U2NoZW1hIiwiU2NoZW1hIiwibmFtZSIsInR5cGUiLCJTdHJpbmciLCJyZXF1aXJlZCIsImltYWdlVXJsIiwibWFudWZhY3R1cmVycyIsIm1hbnVmYWN0dXJlciIsIlR5cGVzIiwiT2JqZWN0SWQiLCJyZWYiLCJkZXZpY2VzIiwidHJpZ2dlcnMiLCJvblBPUyIsIkJvb2xlYW4iLCJvbldpZGdldCIsImlzRGVsZXRlIiwidGltZXN0YW1wcyIsInNraXBWZXJzaW9uaW5nIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBRUEsSUFBTUEsb0JBQW9CLEdBQUcsSUFBSUMsZ0JBQUosQ0FBVztBQUN0Q0MsRUFBQUEsSUFBSSxFQUFFO0FBQ0pDLElBQUFBLElBQUksRUFBRUMsTUFERjtBQUVKQyxJQUFBQSxRQUFRLEVBQUU7QUFGTixHQURnQztBQUt0Q0MsRUFBQUEsUUFBUSxFQUFFRixNQUw0QjtBQU10Q0csRUFBQUEsYUFBYSxFQUFFLENBQUM7QUFDZEMsSUFBQUEsWUFBWSxFQUFFO0FBQ1pMLE1BQUFBLElBQUksRUFBRUYsaUJBQU9RLEtBQVAsQ0FBYUMsUUFEUDtBQUVaQyxNQUFBQSxHQUFHLEVBQUUsY0FGTztBQUdaTixNQUFBQSxRQUFRLEVBQUU7QUFIRSxLQURBO0FBTWRPLElBQUFBLE9BQU8sRUFBRSxDQUFDO0FBQ1JULE1BQUFBLElBQUksRUFBRUYsaUJBQU9RLEtBQVAsQ0FBYUMsUUFEWDtBQUVSQyxNQUFBQSxHQUFHLEVBQUU7QUFGRyxLQUFEO0FBTkssR0FBRCxDQU51QjtBQWlCdENFLEVBQUFBLFFBQVEsRUFBRTtBQUNSQyxJQUFBQSxLQUFLLEVBQUU7QUFDTFgsTUFBQUEsSUFBSSxFQUFFWSxPQUREO0FBRUwsaUJBQVM7QUFGSixLQURDO0FBS1JDLElBQUFBLFFBQVEsRUFBRTtBQUNSYixNQUFBQSxJQUFJLEVBQUVZLE9BREU7QUFFUixpQkFBUztBQUZEO0FBTEYsR0FqQjRCO0FBMkJ0Q0UsRUFBQUEsUUFBUSxFQUFFO0FBQ1JkLElBQUFBLElBQUksRUFBRVksT0FERTtBQUVSLGVBQVM7QUFGRDtBQTNCNEIsQ0FBWCxFQStCMUI7QUFBRUcsRUFBQUEsVUFBVSxFQUFFLElBQWQ7QUFBb0JDLEVBQUFBLGNBQWMsRUFBRTtBQUFwQyxDQS9CMEIsQ0FBN0I7O2VBaUNlLDhCQUFZLGdCQUFaLEVBQThCbkIsb0JBQTlCLEMiLCJzb3VyY2VSb290IjoiL2FwcC9zcmMvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU2NoZW1hIH0gZnJvbSAnbW9uZ29vc2UnXG5pbXBvcnQgeyB0ZW5hbnRNb2RlbCB9IGZyb20gJy4uL2xpYi9tdWx0aVRlbmFudCdcblxuY29uc3QgcmVwYWlyQ2F0ZWdvcnlTY2hlbWEgPSBuZXcgU2NoZW1hKHtcbiAgbmFtZToge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgICByZXF1aXJlZDogdHJ1ZVxuICB9LFxuICBpbWFnZVVybDogU3RyaW5nLFxuICBtYW51ZmFjdHVyZXJzOiBbe1xuICAgIG1hbnVmYWN0dXJlcjoge1xuICAgICAgdHlwZTogU2NoZW1hLlR5cGVzLk9iamVjdElkLFxuICAgICAgcmVmOiAnTWFudWZhY3R1cmVyJyxcbiAgICAgIHJlcXVpcmVkOiB0cnVlXG4gICAgfSxcbiAgICBkZXZpY2VzOiBbe1xuICAgICAgdHlwZTogU2NoZW1hLlR5cGVzLk9iamVjdElkLFxuICAgICAgcmVmOiAnRGV2aWNlJ1xuICAgIH1dXG4gIH1dLFxuICB0cmlnZ2Vyczoge1xuICAgIG9uUE9TOiB7XG4gICAgICB0eXBlOiBCb29sZWFuLFxuICAgICAgZGVmYXVsdDogdHJ1ZVxuICAgIH0sXG4gICAgb25XaWRnZXQ6IHtcbiAgICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgICBkZWZhdWx0OiB0cnVlXG4gICAgfVxuICB9LFxuICBpc0RlbGV0ZToge1xuICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgZGVmYXVsdDogZmFsc2VcbiAgfVxufSwgeyB0aW1lc3RhbXBzOiB0cnVlLCBza2lwVmVyc2lvbmluZzogdHJ1ZSB9KVxuXG5leHBvcnQgZGVmYXVsdCB0ZW5hbnRNb2RlbCgnUmVwYWlyQ2F0ZWdvcnknLCByZXBhaXJDYXRlZ29yeVNjaGVtYSlcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "repairCategory.js"
      ],
      "names": [
        "repairCategorySchema",
        "Schema",
        "name",
        "type",
        "String",
        "required",
        "imageUrl",
        "manufacturers",
        "manufacturer",
        "Types",
        "ObjectId",
        "ref",
        "devices",
        "triggers",
        "onPOS",
        "Boolean",
        "onWidget",
        "isDelete",
        "timestamps",
        "skipVersioning"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AAEA,IAAMA,oBAAoB,GAAG,IAAIC,gBAAJ,CAAW;AACtCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAEC,MADF;AAEJC,IAAAA,QAAQ,EAAE;AAFN,GADgC;AAKtCC,EAAAA,QAAQ,EAAEF,MAL4B;AAMtCG,EAAAA,aAAa,EAAE,CAAC;AACdC,IAAAA,YAAY,EAAE;AACZL,MAAAA,IAAI,EAAEF,iBAAOQ,KAAP,CAAaC,QADP;AAEZC,MAAAA,GAAG,EAAE,cAFO;AAGZN,MAAAA,QAAQ,EAAE;AAHE,KADA;AAMdO,IAAAA,OAAO,EAAE,CAAC;AACRT,MAAAA,IAAI,EAAEF,iBAAOQ,KAAP,CAAaC,QADX;AAERC,MAAAA,GAAG,EAAE;AAFG,KAAD;AANK,GAAD,CANuB;AAiBtCE,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,EAAE;AACLX,MAAAA,IAAI,EAAEY,OADD;AAEL,iBAAS;AAFJ,KADC;AAKRC,IAAAA,QAAQ,EAAE;AACRb,MAAAA,IAAI,EAAEY,OADE;AAER,iBAAS;AAFD;AALF,GAjB4B;AA2BtCE,EAAAA,QAAQ,EAAE;AACRd,IAAAA,IAAI,EAAEY,OADE;AAER,eAAS;AAFD;AA3B4B,CAAX,EA+B1B;AAAEG,EAAAA,UAAU,EAAE,IAAd;AAAoBC,EAAAA,cAAc,EAAE;AAApC,CA/B0B,CAA7B;;eAiCe,8BAAY,gBAAZ,EAA8BnB,oBAA9B,C",
      "sourceRoot": "/app/src/models",
      "sourcesContent": [
        "import { Schema } from 'mongoose'\nimport { tenantModel } from '../lib/multiTenant'\n\nconst repairCategorySchema = new Schema({\n  name: {\n    type: String,\n    required: true\n  },\n  imageUrl: String,\n  manufacturers: [{\n    manufacturer: {\n      type: Schema.Types.ObjectId,\n      ref: 'Manufacturer',\n      required: true\n    },\n    devices: [{\n      type: Schema.Types.ObjectId,\n      ref: 'Device'\n    }]\n  }],\n  triggers: {\n    onPOS: {\n      type: Boolean,\n      default: true\n    },\n    onWidget: {\n      type: Boolean,\n      default: true\n    }\n  },\n  isDelete: {\n    type: Boolean,\n    default: false\n  }\n}, { timestamps: true, skipVersioning: true })\n\nexport default tenantModel('RepairCategory', repairCategorySchema)\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573021617943
  },
  "{\"sourceRoot\":\"/app/src/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/routes/vendor.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/routes/vendor.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/routes/vendor.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/routes/vendor.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/routes",
        "sourceFileName": "vendor.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _vendor = require(\"../controllers/vendor\");\n\nvar router = (0, _express.Router)();\nrouter.get('/', _vendor.getVendors);\nrouter.post('/create', _vendor.createVendor);\nrouter.post('/delete', _vendor.deleteVendor);\nrouter.post('/update', _vendor.updateVendor);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZlbmRvci5qcyJdLCJuYW1lcyI6WyJyb3V0ZXIiLCJnZXQiLCJnZXRWZW5kb3JzIiwicG9zdCIsImNyZWF0ZVZlbmRvciIsImRlbGV0ZVZlbmRvciIsInVwZGF0ZVZlbmRvciJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUVBOztBQUNBLElBQU1BLE1BQU0sR0FBRyxzQkFBZjtBQUVBQSxNQUFNLENBQUNDLEdBQVAsQ0FBVyxHQUFYLEVBQWdCQyxrQkFBaEI7QUFDQUYsTUFBTSxDQUFDRyxJQUFQLENBQVksU0FBWixFQUF1QkMsb0JBQXZCO0FBQ0FKLE1BQU0sQ0FBQ0csSUFBUCxDQUFZLFNBQVosRUFBdUJFLG9CQUF2QjtBQUNBTCxNQUFNLENBQUNHLElBQVAsQ0FBWSxTQUFaLEVBQXVCRyxvQkFBdkI7ZUFHZU4sTSIsInNvdXJjZVJvb3QiOiIvYXBwL3NyYy9yb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSb3V0ZXIgfSBmcm9tICdleHByZXNzJ1xuXG5pbXBvcnQgeyBnZXRWZW5kb3JzLCBjcmVhdGVWZW5kb3IsIGRlbGV0ZVZlbmRvciwgdXBkYXRlVmVuZG9yIH0gZnJvbSAnLi4vY29udHJvbGxlcnMvdmVuZG9yJ1xuY29uc3Qgcm91dGVyID0gUm91dGVyKClcblxucm91dGVyLmdldCgnLycsIGdldFZlbmRvcnMpXG5yb3V0ZXIucG9zdCgnL2NyZWF0ZScsIGNyZWF0ZVZlbmRvcilcbnJvdXRlci5wb3N0KCcvZGVsZXRlJywgZGVsZXRlVmVuZG9yKVxucm91dGVyLnBvc3QoJy91cGRhdGUnLCB1cGRhdGVWZW5kb3IpXG5cblxuZXhwb3J0IGRlZmF1bHQgcm91dGVyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "vendor.js"
      ],
      "names": [
        "router",
        "get",
        "getVendors",
        "post",
        "createVendor",
        "deleteVendor",
        "updateVendor"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA;;AACA,IAAMA,MAAM,GAAG,sBAAf;AAEAA,MAAM,CAACC,GAAP,CAAW,GAAX,EAAgBC,kBAAhB;AACAF,MAAM,CAACG,IAAP,CAAY,SAAZ,EAAuBC,oBAAvB;AACAJ,MAAM,CAACG,IAAP,CAAY,SAAZ,EAAuBE,oBAAvB;AACAL,MAAM,CAACG,IAAP,CAAY,SAAZ,EAAuBG,oBAAvB;eAGeN,M",
      "sourceRoot": "/app/src/routes",
      "sourcesContent": [
        "import { Router } from 'express'\n\nimport { getVendors, createVendor, deleteVendor, updateVendor } from '../controllers/vendor'\nconst router = Router()\n\nrouter.get('/', getVendors)\nrouter.post('/create', createVendor)\nrouter.post('/delete', deleteVendor)\nrouter.post('/update', updateVendor)\n\n\nexport default router\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573021617947
  },
  "{\"sourceRoot\":\"/app/src/controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/controllers/vendor.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/controllers/vendor.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/controllers/vendor.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/controllers/vendor.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/controllers",
        "sourceFileName": "vendor.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deleteVendor = exports.updateVendor = exports.createVendor = exports.getVendors = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _vendor = _interopRequireDefault(require(\"../models/vendor\"));\n\nvar _errors = _interopRequireDefault(require(\"../constants/errors\"));\n\nvar _joi = _interopRequireDefault(require(\"@hapi/joi\"));\n\nvar _flat = require(\"flat\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar createSchema = _joi[\"default\"].object({\n  name: _joi[\"default\"].string().required(),\n  vendorCode: _joi[\"default\"].string().required(),\n  email: _joi[\"default\"].string().optional().allow(''),\n  website: _joi[\"default\"].string().optional().allow(''),\n  phone: _joi[\"default\"].string().optional().allow(''),\n  mobile: _joi[\"default\"].string().optional().allow(''),\n  address: _joi[\"default\"].string().optional().allow(''),\n  postCode: _joi[\"default\"].string().optional().allow(''),\n  doubleTax: _joi[\"default\"][\"boolean\"]().optional().allow(''),\n  skuReminderDate: _joi[\"default\"].string().optional().allow('')\n});\n\nvar updateSchema = _joi[\"default\"].object({\n  id: _joi[\"default\"].string().required(),\n  name: _joi[\"default\"].string().required(),\n  vendorCode: _joi[\"default\"].string().optional().allow(''),\n  email: _joi[\"default\"].string().optional().allow(''),\n  website: _joi[\"default\"].string().optional().allow(''),\n  phone: _joi[\"default\"].string().optional().allow(''),\n  mobile: _joi[\"default\"].string().optional().allow(''),\n  address: _joi[\"default\"].string().optional().allow(''),\n  postCode: _joi[\"default\"].string().optional().allow(''),\n  doubleTax: _joi[\"default\"][\"boolean\"]().optional().allow(''),\n  skuReminderDate: _joi[\"default\"].string().optional().allow('')\n});\n\nvar deleteSchema = _joi[\"default\"].object({\n  id: _joi[\"default\"].array().items(_joi[\"default\"].string()).required()\n});\n\nvar getVendors = function getVendors(req, res) {\n  var _req$query, page, limit, data;\n\n  return _regenerator[\"default\"].async(function getVendors$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _req$query = req.query, page = _req$query.page, limit = _req$query.limit;\n          _context.next = 4;\n          return _regenerator[\"default\"].awrap((0, _vendor[\"default\"])().paginate({\n            isDelete: false\n          }, {\n            page: page,\n            limit: limit\n          }));\n\n        case 4:\n          data = _context.sent;\n          return _context.abrupt(\"return\", res.json(data));\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n          return _context.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context.t0.message\n          }));\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 8]]);\n};\n\nexports.getVendors = getVendors;\n\nvar createVendor = function createVendor(req, res) {\n  var validation, _req$body, name, rest, vendor, data;\n\n  return _regenerator[\"default\"].async(function createVendor$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          validation = _joi[\"default\"].validate(req.body, createSchema);\n\n          if (!validation.error) {\n            _context2.next = 4;\n            break;\n          }\n\n          throw new Error(validation.error);\n\n        case 4:\n          _req$body = req.body, name = _req$body.name, rest = (0, _objectWithoutProperties2[\"default\"])(_req$body, [\"name\"]);\n          _context2.next = 7;\n          return _regenerator[\"default\"].awrap((0, _vendor[\"default\"])().findOne({\n            name: {\n              $regex: new RegExp(name),\n              $options: 'i'\n            },\n            isDelete: false\n          }));\n\n        case 7:\n          vendor = _context2.sent;\n\n          if (!vendor) {\n            _context2.next = 10;\n            break;\n          }\n\n          throw new Error(_errors[\"default\"].RESOURCE_ALREADY_EXISTS);\n\n        case 10:\n          _context2.next = 12;\n          return _regenerator[\"default\"].awrap((0, _vendor[\"default\"])().create(_objectSpread({\n            name: name\n          }, rest)));\n\n        case 12:\n          data = _context2.sent;\n          return _context2.abrupt(\"return\", res.json({\n            data: data\n          }));\n\n        case 16:\n          _context2.prev = 16;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0);\n\n          if (!(_context2.t0.message === _errors[\"default\"].RESOURCE_ALREADY_EXISTS)) {\n            _context2.next = 21;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", res.status(409).json({\n            error: true,\n            reason: _context2.t0.message\n          }));\n\n        case 21:\n          return _context2.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context2.t0.message\n          }));\n\n        case 22:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 16]]);\n};\n\nexports.createVendor = createVendor;\n\nvar updateVendor = function updateVendor(req, res) {\n  var validation, _req$body2, _id, rest, existingVendor, data;\n\n  return _regenerator[\"default\"].async(function updateVendor$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          validation = _joi[\"default\"].validate(req.body, updateSchema);\n\n          if (!validation.error) {\n            _context3.next = 4;\n            break;\n          }\n\n          throw new Error(validation.error);\n\n        case 4:\n          _req$body2 = req.body, _id = _req$body2.id, rest = (0, _objectWithoutProperties2[\"default\"])(_req$body2, [\"id\"]);\n\n          if (!rest.name) {\n            _context3.next = 11;\n            break;\n          }\n\n          _context3.next = 8;\n          return _regenerator[\"default\"].awrap((0, _vendor[\"default\"])().findOne({\n            name: {\n              $regex: new RegExp(rest.name),\n              $options: 'i'\n            },\n            isDelete: false\n          }));\n\n        case 8:\n          existingVendor = _context3.sent;\n\n          if (!(existingVendor && !existingVendor._id.equals(_id))) {\n            _context3.next = 11;\n            break;\n          }\n\n          throw new Error(_errors[\"default\"].RESOURCE_ALREADY_EXISTS);\n\n        case 11:\n          _context3.next = 13;\n          return _regenerator[\"default\"].awrap((0, _vendor[\"default\"])().findOneAndUpdate({\n            _id: _id,\n            isDelete: false\n          }, {\n            $set: (0, _flat.flatten)(rest)\n          }, {\n            \"new\": true\n          }));\n\n        case 13:\n          data = _context3.sent;\n          return _context3.abrupt(\"return\", res.json({\n            data: data\n          }));\n\n        case 17:\n          _context3.prev = 17;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(_context3.t0);\n\n          if (!(_context3.t0.message === _errors[\"default\"].RESOURCE_ALREADY_EXISTS)) {\n            _context3.next = 22;\n            break;\n          }\n\n          return _context3.abrupt(\"return\", res.status(409).json({\n            error: true,\n            reason: _context3.t0.message\n          }));\n\n        case 22:\n          return _context3.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context3.t0.message\n          }));\n\n        case 23:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 17]]);\n};\n\nexports.updateVendor = updateVendor;\n\nvar deleteVendor = function deleteVendor(req, res) {\n  var validation, _id;\n\n  return _regenerator[\"default\"].async(function deleteVendor$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          validation = _joi[\"default\"].validate(req.body, deleteSchema);\n\n          if (!validation.error) {\n            _context4.next = 4;\n            break;\n          }\n\n          throw new Error(validation.error);\n\n        case 4:\n          _id = req.body.id;\n          _context4.next = 7;\n          return _regenerator[\"default\"].awrap((0, _vendor[\"default\"])().updateMany({\n            _id: {\n              $in: _id\n            }\n          }, {\n            $set: {\n              isDelete: true\n            }\n          }));\n\n        case 7:\n          return _context4.abrupt(\"return\", res.json({\n            data: {}\n          }));\n\n        case 10:\n          _context4.prev = 10;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.log(_context4.t0);\n          return _context4.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context4.t0.message\n          }));\n\n        case 14:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, [[0, 10]]);\n};\n\nexports.deleteVendor = deleteVendor;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "vendor.js"
      ],
      "names": [
        "createSchema",
        "Joi",
        "object",
        "name",
        "string",
        "required",
        "vendorCode",
        "email",
        "optional",
        "allow",
        "website",
        "phone",
        "mobile",
        "address",
        "postCode",
        "doubleTax",
        "skuReminderDate",
        "updateSchema",
        "id",
        "deleteSchema",
        "array",
        "items",
        "getVendors",
        "req",
        "res",
        "query",
        "page",
        "limit",
        "paginate",
        "isDelete",
        "data",
        "json",
        "console",
        "log",
        "status",
        "error",
        "reason",
        "message",
        "createVendor",
        "validation",
        "validate",
        "body",
        "Error",
        "rest",
        "findOne",
        "$regex",
        "RegExp",
        "$options",
        "vendor",
        "ERRORS",
        "RESOURCE_ALREADY_EXISTS",
        "create",
        "updateVendor",
        "_id",
        "existingVendor",
        "equals",
        "findOneAndUpdate",
        "$set",
        "deleteVendor",
        "updateMany",
        "$in"
      ],
      "mappings": "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",
      "sourceRoot": "/app/src/controllers",
      "sourcesContent": [
        "import _VendorModel from '../models/vendor'\nimport ERRORS from '../constants/errors'\nimport Joi from '@hapi/joi'\nimport { flatten } from 'flat'\n\nconst createSchema = Joi.object({\n  name: Joi.string().required(),\n  vendorCode: Joi.string().required(),\n  email: Joi.string().optional().allow(''),\n  website: Joi.string().optional().allow(''),\n  phone: Joi.string().optional().allow(''),\n  mobile: Joi.string().optional().allow(''),\n  address: Joi.string().optional().allow(''),\n  postCode: Joi.string().optional().allow(''),\n  doubleTax: Joi.boolean().optional().allow(''),\n  skuReminderDate: Joi.string().optional().allow('')\n})\n\nconst updateSchema = Joi.object({\n  id: Joi.string().required(),\n  name: Joi.string().required(),\n  vendorCode: Joi.string().optional().allow(''),\n  email: Joi.string().optional().allow(''),\n  website: Joi.string().optional().allow(''),\n  phone: Joi.string().optional().allow(''),\n  mobile: Joi.string().optional().allow(''),\n  address: Joi.string().optional().allow(''),\n  postCode: Joi.string().optional().allow(''),\n  doubleTax: Joi.boolean().optional().allow(''),\n  skuReminderDate: Joi.string().optional().allow('')\n})\n\nconst deleteSchema = Joi.object({\n  id: Joi.array().items(Joi.string()).required()\n})\n\nexport const getVendors = async (req, res) => {\n  try {\n    const { page, limit } = req.query\n    const data = await _VendorModel().paginate({ isDelete: false }, { page, limit })\n    return res.json(data)\n  } catch (err) {\n    console.log(err)\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const createVendor = async (req, res) => {\n  try {\n    const validation = Joi.validate(req.body, createSchema)\n    if (validation.error) throw new Error(validation.error)\n    const { name, ...rest } = req.body\n    const vendor = await _VendorModel().findOne({ name: { $regex: new RegExp(name), $options: 'i' }, isDelete: false })\n    if (vendor) {\n      throw new Error(ERRORS.RESOURCE_ALREADY_EXISTS)\n    }\n\n    const data = await _VendorModel().create({\n      name, ...rest\n    })\n    return res.json({ data })\n  } catch (err) {\n    console.log(err)\n    if (err.message === ERRORS.RESOURCE_ALREADY_EXISTS) return res.status(409).json({ error: true, reason: err.message })\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const updateVendor = async (req, res) => {\n  try {\n    const validation = Joi.validate(req.body, updateSchema)\n    if (validation.error) throw new Error(validation.error)\n    const { id: _id, ...rest } = req.body\n    if (rest.name) {\n      const existingVendor = await _VendorModel().findOne({ name: { $regex: new RegExp(rest.name), $options: 'i' }, isDelete: false })\n      if (existingVendor && !existingVendor._id.equals(_id)) {\n        throw new Error(ERRORS.RESOURCE_ALREADY_EXISTS)\n      }\n    }\n\n    const data = await _VendorModel().findOneAndUpdate({ _id, isDelete: false }, { $set: flatten(rest) }, { new: true })\n    return res.json({ data })\n  } catch (err) {\n    console.log(err)\n    if (err.message === ERRORS.RESOURCE_ALREADY_EXISTS) return res.status(409).json({ error: true, reason: err.message })\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const deleteVendor = async (req, res) => {\n  try {\n    const validation = Joi.validate(req.body, deleteSchema)\n    if (validation.error) throw new Error(validation.error)\n\n    const { id: _id } = req.body\n\n    await _VendorModel().updateMany({ _id: { $in: _id } }, { $set: { isDelete: true } })\n    return res.json({ data: {} })\n  } catch (err) {\n    console.log(err)\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573021617939
  },
  "{\"sourceRoot\":\"/app/src/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/models/vendor.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/models/vendor.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/models/vendor.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/models/vendor.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/models",
        "sourceFileName": "vendor.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongoose = require(\"mongoose\");\n\nvar _multiTenant = require(\"../lib/multiTenant\");\n\nvar vendorSchema = new _mongoose.Schema({\n  name: {\n    type: String,\n    required: true\n  },\n  vendorCode: {\n    type: String,\n    required: true\n  },\n  email: String,\n  website: String,\n  phone: String,\n  mobile: String,\n  address: String,\n  postCode: String,\n  doubleTax: {\n    type: Boolean,\n    \"default\": false\n  },\n  skuReminderDate: Date,\n  isDelete: {\n    type: Boolean,\n    \"default\": false\n  }\n}, {\n  timestamps: true,\n  skipVersioning: true\n});\n\nvar _default = (0, _multiTenant.tenantModel)('Vendor', vendorSchema);\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZlbmRvci5qcyJdLCJuYW1lcyI6WyJ2ZW5kb3JTY2hlbWEiLCJTY2hlbWEiLCJuYW1lIiwidHlwZSIsIlN0cmluZyIsInJlcXVpcmVkIiwidmVuZG9yQ29kZSIsImVtYWlsIiwid2Vic2l0ZSIsInBob25lIiwibW9iaWxlIiwiYWRkcmVzcyIsInBvc3RDb2RlIiwiZG91YmxlVGF4IiwiQm9vbGVhbiIsInNrdVJlbWluZGVyRGF0ZSIsIkRhdGUiLCJpc0RlbGV0ZSIsInRpbWVzdGFtcHMiLCJza2lwVmVyc2lvbmluZyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUVBLElBQU1BLFlBQVksR0FBRyxJQUFJQyxnQkFBSixDQUFXO0FBQzlCQyxFQUFBQSxJQUFJLEVBQUU7QUFDSkMsSUFBQUEsSUFBSSxFQUFFQyxNQURGO0FBRUpDLElBQUFBLFFBQVEsRUFBRTtBQUZOLEdBRHdCO0FBSzlCQyxFQUFBQSxVQUFVLEVBQUU7QUFDVkgsSUFBQUEsSUFBSSxFQUFFQyxNQURJO0FBRVZDLElBQUFBLFFBQVEsRUFBRTtBQUZBLEdBTGtCO0FBUzlCRSxFQUFBQSxLQUFLLEVBQUVILE1BVHVCO0FBVTlCSSxFQUFBQSxPQUFPLEVBQUVKLE1BVnFCO0FBVzlCSyxFQUFBQSxLQUFLLEVBQUVMLE1BWHVCO0FBWTlCTSxFQUFBQSxNQUFNLEVBQUVOLE1BWnNCO0FBYTlCTyxFQUFBQSxPQUFPLEVBQUVQLE1BYnFCO0FBYzlCUSxFQUFBQSxRQUFRLEVBQUVSLE1BZG9CO0FBZTlCUyxFQUFBQSxTQUFTLEVBQUU7QUFDVFYsSUFBQUEsSUFBSSxFQUFFVyxPQURHO0FBRVQsZUFBUztBQUZBLEdBZm1CO0FBbUI5QkMsRUFBQUEsZUFBZSxFQUFFQyxJQW5CYTtBQW9COUJDLEVBQUFBLFFBQVEsRUFBRTtBQUNSZCxJQUFBQSxJQUFJLEVBQUVXLE9BREU7QUFFUixlQUFTO0FBRkQ7QUFwQm9CLENBQVgsRUF5QmxCO0FBQUVJLEVBQUFBLFVBQVUsRUFBRSxJQUFkO0FBQW9CQyxFQUFBQSxjQUFjLEVBQUU7QUFBcEMsQ0F6QmtCLENBQXJCOztlQTJCZSw4QkFBWSxRQUFaLEVBQXNCbkIsWUFBdEIsQyIsInNvdXJjZVJvb3QiOiIvYXBwL3NyYy9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTY2hlbWEgfSBmcm9tICdtb25nb29zZSdcbmltcG9ydCB7IHRlbmFudE1vZGVsIH0gZnJvbSAnLi4vbGliL211bHRpVGVuYW50J1xuXG5jb25zdCB2ZW5kb3JTY2hlbWEgPSBuZXcgU2NoZW1hKHtcbiAgbmFtZToge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgICByZXF1aXJlZDogdHJ1ZVxuICB9LFxuICB2ZW5kb3JDb2RlOiB7XG4gICAgdHlwZTogU3RyaW5nLFxuICAgIHJlcXVpcmVkOiB0cnVlXG4gIH0sXG4gIGVtYWlsOiBTdHJpbmcsXG4gIHdlYnNpdGU6IFN0cmluZyxcbiAgcGhvbmU6IFN0cmluZyxcbiAgbW9iaWxlOiBTdHJpbmcsXG4gIGFkZHJlc3M6IFN0cmluZyxcbiAgcG9zdENvZGU6IFN0cmluZyxcbiAgZG91YmxlVGF4OiB7XG4gICAgdHlwZTogQm9vbGVhbixcbiAgICBkZWZhdWx0OiBmYWxzZVxuICB9LFxuICBza3VSZW1pbmRlckRhdGU6IERhdGUsXG4gIGlzRGVsZXRlOiB7XG4gICAgdHlwZTogQm9vbGVhbixcbiAgICBkZWZhdWx0OiBmYWxzZVxuICB9XG5cbn0sIHsgdGltZXN0YW1wczogdHJ1ZSwgc2tpcFZlcnNpb25pbmc6IHRydWUgfSlcblxuZXhwb3J0IGRlZmF1bHQgdGVuYW50TW9kZWwoJ1ZlbmRvcicsIHZlbmRvclNjaGVtYSlcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "vendor.js"
      ],
      "names": [
        "vendorSchema",
        "Schema",
        "name",
        "type",
        "String",
        "required",
        "vendorCode",
        "email",
        "website",
        "phone",
        "mobile",
        "address",
        "postCode",
        "doubleTax",
        "Boolean",
        "skuReminderDate",
        "Date",
        "isDelete",
        "timestamps",
        "skipVersioning"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AAEA,IAAMA,YAAY,GAAG,IAAIC,gBAAJ,CAAW;AAC9BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAEC,MADF;AAEJC,IAAAA,QAAQ,EAAE;AAFN,GADwB;AAK9BC,EAAAA,UAAU,EAAE;AACVH,IAAAA,IAAI,EAAEC,MADI;AAEVC,IAAAA,QAAQ,EAAE;AAFA,GALkB;AAS9BE,EAAAA,KAAK,EAAEH,MATuB;AAU9BI,EAAAA,OAAO,EAAEJ,MAVqB;AAW9BK,EAAAA,KAAK,EAAEL,MAXuB;AAY9BM,EAAAA,MAAM,EAAEN,MAZsB;AAa9BO,EAAAA,OAAO,EAAEP,MAbqB;AAc9BQ,EAAAA,QAAQ,EAAER,MAdoB;AAe9BS,EAAAA,SAAS,EAAE;AACTV,IAAAA,IAAI,EAAEW,OADG;AAET,eAAS;AAFA,GAfmB;AAmB9BC,EAAAA,eAAe,EAAEC,IAnBa;AAoB9BC,EAAAA,QAAQ,EAAE;AACRd,IAAAA,IAAI,EAAEW,OADE;AAER,eAAS;AAFD;AApBoB,CAAX,EAyBlB;AAAEI,EAAAA,UAAU,EAAE,IAAd;AAAoBC,EAAAA,cAAc,EAAE;AAApC,CAzBkB,CAArB;;eA2Be,8BAAY,QAAZ,EAAsBnB,YAAtB,C",
      "sourceRoot": "/app/src/models",
      "sourcesContent": [
        "import { Schema } from 'mongoose'\nimport { tenantModel } from '../lib/multiTenant'\n\nconst vendorSchema = new Schema({\n  name: {\n    type: String,\n    required: true\n  },\n  vendorCode: {\n    type: String,\n    required: true\n  },\n  email: String,\n  website: String,\n  phone: String,\n  mobile: String,\n  address: String,\n  postCode: String,\n  doubleTax: {\n    type: Boolean,\n    default: false\n  },\n  skuReminderDate: Date,\n  isDelete: {\n    type: Boolean,\n    default: false\n  }\n\n}, { timestamps: true, skipVersioning: true })\n\nexport default tenantModel('Vendor', vendorSchema)\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573021617943
  },
  "{\"sourceRoot\":\"/app/src/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/routes/physicalLocations.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/routes/physicalLocations.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/routes/physicalLocations.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/routes/physicalLocations.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/routes",
        "sourceFileName": "physicalLocations.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _physicalLocation = require(\"../controllers/physicalLocation\");\n\nvar router = (0, _express.Router)();\nrouter.get('/', _physicalLocation.getPhysicalLocations);\nrouter.post('/create', _physicalLocation.createPhysicalLocation);\nrouter.post('/delete', _physicalLocation.deletePhysicalLocation);\nrouter.post('/update', _physicalLocation.updatePhysicalLocation);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBoeXNpY2FsTG9jYXRpb25zLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsImdldCIsImdldFBoeXNpY2FsTG9jYXRpb25zIiwicG9zdCIsImNyZWF0ZVBoeXNpY2FsTG9jYXRpb24iLCJkZWxldGVQaHlzaWNhbExvY2F0aW9uIiwidXBkYXRlUGh5c2ljYWxMb2NhdGlvbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUVBOztBQUNBLElBQU1BLE1BQU0sR0FBRyxzQkFBZjtBQUVBQSxNQUFNLENBQUNDLEdBQVAsQ0FBVyxHQUFYLEVBQWdCQyxzQ0FBaEI7QUFDQUYsTUFBTSxDQUFDRyxJQUFQLENBQVksU0FBWixFQUF1QkMsd0NBQXZCO0FBQ0FKLE1BQU0sQ0FBQ0csSUFBUCxDQUFZLFNBQVosRUFBdUJFLHdDQUF2QjtBQUNBTCxNQUFNLENBQUNHLElBQVAsQ0FBWSxTQUFaLEVBQXVCRyx3Q0FBdkI7ZUFFZU4sTSIsInNvdXJjZVJvb3QiOiIvYXBwL3NyYy9yb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSb3V0ZXIgfSBmcm9tICdleHByZXNzJ1xuXG5pbXBvcnQgeyBnZXRQaHlzaWNhbExvY2F0aW9ucywgY3JlYXRlUGh5c2ljYWxMb2NhdGlvbiwgdXBkYXRlUGh5c2ljYWxMb2NhdGlvbiwgZGVsZXRlUGh5c2ljYWxMb2NhdGlvbiB9IGZyb20gJy4uL2NvbnRyb2xsZXJzL3BoeXNpY2FsTG9jYXRpb24nXG5jb25zdCByb3V0ZXIgPSBSb3V0ZXIoKVxuXG5yb3V0ZXIuZ2V0KCcvJywgZ2V0UGh5c2ljYWxMb2NhdGlvbnMpXG5yb3V0ZXIucG9zdCgnL2NyZWF0ZScsIGNyZWF0ZVBoeXNpY2FsTG9jYXRpb24pXG5yb3V0ZXIucG9zdCgnL2RlbGV0ZScsIGRlbGV0ZVBoeXNpY2FsTG9jYXRpb24pXG5yb3V0ZXIucG9zdCgnL3VwZGF0ZScsIHVwZGF0ZVBoeXNpY2FsTG9jYXRpb24pXG5cbmV4cG9ydCBkZWZhdWx0IHJvdXRlclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "physicalLocations.js"
      ],
      "names": [
        "router",
        "get",
        "getPhysicalLocations",
        "post",
        "createPhysicalLocation",
        "deletePhysicalLocation",
        "updatePhysicalLocation"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA;;AACA,IAAMA,MAAM,GAAG,sBAAf;AAEAA,MAAM,CAACC,GAAP,CAAW,GAAX,EAAgBC,sCAAhB;AACAF,MAAM,CAACG,IAAP,CAAY,SAAZ,EAAuBC,wCAAvB;AACAJ,MAAM,CAACG,IAAP,CAAY,SAAZ,EAAuBE,wCAAvB;AACAL,MAAM,CAACG,IAAP,CAAY,SAAZ,EAAuBG,wCAAvB;eAEeN,M",
      "sourceRoot": "/app/src/routes",
      "sourcesContent": [
        "import { Router } from 'express'\n\nimport { getPhysicalLocations, createPhysicalLocation, updatePhysicalLocation, deletePhysicalLocation } from '../controllers/physicalLocation'\nconst router = Router()\n\nrouter.get('/', getPhysicalLocations)\nrouter.post('/create', createPhysicalLocation)\nrouter.post('/delete', deletePhysicalLocation)\nrouter.post('/update', updatePhysicalLocation)\n\nexport default router\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573021617943
  },
  "{\"sourceRoot\":\"/app/src/controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/controllers/physicalLocation.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/controllers/physicalLocation.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/controllers/physicalLocation.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/controllers/physicalLocation.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/controllers",
        "sourceFileName": "physicalLocation.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deletePhysicalLocation = exports.updatePhysicalLocation = exports.createPhysicalLocation = exports.getPhysicalLocations = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _physicalLocation = _interopRequireDefault(require(\"../models/physicalLocation\"));\n\nvar _errors = _interopRequireDefault(require(\"../constants/errors\"));\n\nvar _joi = _interopRequireDefault(require(\"@hapi/joi\"));\n\nvar _flat = require(\"flat\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar createSchema = _joi[\"default\"].object({\n  name: _joi[\"default\"].string().required(),\n  isDefault: _joi[\"default\"][\"boolean\"]()\n});\n\nvar updateSchema = _joi[\"default\"].object({\n  id: _joi[\"default\"].string().required(),\n  name: _joi[\"default\"].string().required(),\n  isDefault: _joi[\"default\"][\"boolean\"]()\n});\n\nvar deleteSchema = _joi[\"default\"].object({\n  id: _joi[\"default\"].array().items(_joi[\"default\"].string()).required()\n});\n\nvar getPhysicalLocations = function getPhysicalLocations(req, res) {\n  var _req$query, page, limit, data;\n\n  return _regenerator[\"default\"].async(function getPhysicalLocations$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _req$query = req.query, page = _req$query.page, limit = _req$query.limit;\n          _context.next = 4;\n          return _regenerator[\"default\"].awrap((0, _physicalLocation[\"default\"])().paginate({\n            isDelete: false\n          }, {\n            page: page,\n            limit: limit,\n            select: '-isDelete'\n          }));\n\n        case 4:\n          data = _context.sent;\n          return _context.abrupt(\"return\", res.json(data));\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n          return _context.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context.t0.message\n          }));\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 8]]);\n};\n\nexports.getPhysicalLocations = getPhysicalLocations;\n\nvar createPhysicalLocation = function createPhysicalLocation(req, res) {\n  var validation, existingPhysicalLocation, body, storeId, data;\n  return _regenerator[\"default\"].async(function createPhysicalLocation$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          validation = _joi[\"default\"].validate(req.body, createSchema);\n\n          if (!validation.error) {\n            _context2.next = 4;\n            break;\n          }\n\n          throw new Error(validation.error);\n\n        case 4:\n          _context2.next = 6;\n          return _regenerator[\"default\"].awrap((0, _physicalLocation[\"default\"])().findOne({\n            name: {\n              $regex: new RegExp(\"^\".concat(req.body.name, \"$\")),\n              $options: 'i'\n            },\n            isDelete: false\n          }));\n\n        case 6:\n          existingPhysicalLocation = _context2.sent;\n\n          if (!existingPhysicalLocation) {\n            _context2.next = 9;\n            break;\n          }\n\n          throw new Error(_errors[\"default\"].RESOURCE_ALREADY_EXISTS);\n\n        case 9:\n          body = req.body, storeId = req.storeId;\n          _context2.next = 12;\n          return _regenerator[\"default\"].awrap((0, _physicalLocation[\"default\"])().create(_objectSpread({}, body, {\n            storeId: storeId\n          })));\n\n        case 12:\n          data = _context2.sent;\n          return _context2.abrupt(\"return\", res.json({\n            data: data\n          }));\n\n        case 16:\n          _context2.prev = 16;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0);\n\n          if (!(_context2.t0.message === _errors[\"default\"].RESOURCE_ALREADY_EXISTS)) {\n            _context2.next = 21;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", res.status(409).json({\n            error: true,\n            reason: _context2.t0.message\n          }));\n\n        case 21:\n          return _context2.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context2.t0.message\n          }));\n\n        case 22:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 16]]);\n};\n\nexports.createPhysicalLocation = createPhysicalLocation;\n\nvar updatePhysicalLocation = function updatePhysicalLocation(req, res) {\n  var validation, _req$body, _id, rest, existingPhysicalLocation, data;\n\n  return _regenerator[\"default\"].async(function updatePhysicalLocation$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          validation = _joi[\"default\"].validate(req.body, updateSchema);\n\n          if (!validation.error) {\n            _context3.next = 4;\n            break;\n          }\n\n          throw new Error(validation.error);\n\n        case 4:\n          _req$body = req.body, _id = _req$body.id, rest = (0, _objectWithoutProperties2[\"default\"])(_req$body, [\"id\"]);\n\n          if (!rest.name) {\n            _context3.next = 11;\n            break;\n          }\n\n          _context3.next = 8;\n          return _regenerator[\"default\"].awrap((0, _physicalLocation[\"default\"])().findOne({\n            name: {\n              $regex: new RegExp(rest.name),\n              $options: 'i'\n            },\n            isDelete: false\n          }));\n\n        case 8:\n          existingPhysicalLocation = _context3.sent;\n\n          if (!(existingPhysicalLocation && !existingPhysicalLocation._id.equals(_id))) {\n            _context3.next = 11;\n            break;\n          }\n\n          throw new Error(_errors[\"default\"].RESOURCE_ALREADY_EXISTS);\n\n        case 11:\n          _context3.next = 13;\n          return _regenerator[\"default\"].awrap((0, _physicalLocation[\"default\"])().findOneAndUpdate({\n            _id: _id,\n            isDelete: false\n          }, {\n            $set: (0, _flat.flatten)(rest)\n          }, {\n            \"new\": true\n          }));\n\n        case 13:\n          data = _context3.sent;\n          return _context3.abrupt(\"return\", res.json({\n            data: data\n          }));\n\n        case 17:\n          _context3.prev = 17;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(_context3.t0);\n\n          if (!(_context3.t0.message === _errors[\"default\"].RESOURCE_ALREADY_EXISTS)) {\n            _context3.next = 22;\n            break;\n          }\n\n          return _context3.abrupt(\"return\", res.status(409).json({\n            error: true,\n            reason: _context3.t0.message\n          }));\n\n        case 22:\n          return _context3.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context3.t0.message\n          }));\n\n        case 23:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 17]]);\n};\n\nexports.updatePhysicalLocation = updatePhysicalLocation;\n\nvar deletePhysicalLocation = function deletePhysicalLocation(req, res) {\n  var validation, ids, data;\n  return _regenerator[\"default\"].async(function deletePhysicalLocation$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          validation = _joi[\"default\"].validate(req.body, deleteSchema);\n\n          if (!validation.error) {\n            _context4.next = 4;\n            break;\n          }\n\n          throw new Error(validation.error);\n\n        case 4:\n          ids = req.body.id;\n          _context4.next = 7;\n          return _regenerator[\"default\"].awrap((0, _physicalLocation[\"default\"])().updateMany({\n            _id: {\n              $in: ids\n            }\n          }, {\n            $set: {\n              isDelete: true\n            }\n          }, {\n            \"new\": true\n          }));\n\n        case 7:\n          data = _context4.sent;\n          return _context4.abrupt(\"return\", res.json({\n            data: data\n          }));\n\n        case 11:\n          _context4.prev = 11;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.log(_context4.t0);\n          return _context4.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context4.t0.message\n          }));\n\n        case 15:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, [[0, 11]]);\n};\n\nexports.deletePhysicalLocation = deletePhysicalLocation;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "physicalLocation.js"
      ],
      "names": [
        "createSchema",
        "Joi",
        "object",
        "name",
        "string",
        "required",
        "isDefault",
        "updateSchema",
        "id",
        "deleteSchema",
        "array",
        "items",
        "getPhysicalLocations",
        "req",
        "res",
        "query",
        "page",
        "limit",
        "paginate",
        "isDelete",
        "select",
        "data",
        "json",
        "console",
        "log",
        "status",
        "error",
        "reason",
        "message",
        "createPhysicalLocation",
        "validation",
        "validate",
        "body",
        "Error",
        "findOne",
        "$regex",
        "RegExp",
        "$options",
        "existingPhysicalLocation",
        "ERRORS",
        "RESOURCE_ALREADY_EXISTS",
        "storeId",
        "create",
        "updatePhysicalLocation",
        "_id",
        "rest",
        "equals",
        "findOneAndUpdate",
        "$set",
        "deletePhysicalLocation",
        "ids",
        "updateMany",
        "$in"
      ],
      "mappings": "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",
      "sourceRoot": "/app/src/controllers",
      "sourcesContent": [
        "import _PhysicalLocationModel from '../models/physicalLocation'\nimport ERRORS from '../constants/errors'\nimport Joi from '@hapi/joi'\nimport { flatten } from 'flat'\n\nconst createSchema = Joi.object({\n  name: Joi.string().required(),\n  isDefault: Joi.boolean(),\n})\n\nconst updateSchema = Joi.object({\n  id: Joi.string().required(),\n  name: Joi.string().required(),\n  isDefault: Joi.boolean(),\n})\n\nconst deleteSchema = Joi.object({\n  id: Joi.array().items(Joi.string()).required(),\n})\n\n\nexport const getPhysicalLocations = async (req, res) => {\n  try {\n    const { page, limit } = req.query\n    const data = await _PhysicalLocationModel().paginate({ isDelete: false }, { page, limit, select: '-isDelete' })\n\n    return res.json(data)\n  } catch (err) {\n    console.log(err)\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const createPhysicalLocation = async (req, res) => {\n  try {\n    const validation = Joi.validate(req.body, createSchema)\n    if (validation.error) throw new Error(validation.error)\n\n    const existingPhysicalLocation = await _PhysicalLocationModel().findOne({ name: { $regex: new RegExp(`^${req.body.name}$`), $options: 'i' }, isDelete: false })\n    if (existingPhysicalLocation) {\n      throw new Error(ERRORS.RESOURCE_ALREADY_EXISTS)\n    }\n\n    const { body, storeId } = req;\n    const data = await _PhysicalLocationModel().create({ ...body, storeId })\n\n    return res.json({ data })\n  } catch (err) {\n    console.log(err)\n    if (err.message === ERRORS.RESOURCE_ALREADY_EXISTS) return res.status(409).json({ error: true, reason: err.message })\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const updatePhysicalLocation = async (req, res) => {\n  try {\n    const validation = Joi.validate(req.body, updateSchema)\n    if (validation.error) throw new Error(validation.error)\n\n    const { id: _id, ...rest } = req.body\n    if (rest.name) {\n      const existingPhysicalLocation = await _PhysicalLocationModel().findOne({ name: { $regex: new RegExp(rest.name), $options: 'i' }, isDelete: false })\n      if (existingPhysicalLocation && !existingPhysicalLocation._id.equals(_id)) {\n        throw new Error(ERRORS.RESOURCE_ALREADY_EXISTS)\n      }\n    }\n\n    const data = await _PhysicalLocationModel().findOneAndUpdate({ _id, isDelete: false }, { $set: flatten(rest) }, { new: true })\n\n    return res.json({ data })\n  } catch (err) {\n    console.log(err)\n    if (err.message === ERRORS.RESOURCE_ALREADY_EXISTS) return res.status(409).json({ error: true, reason: err.message })\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const deletePhysicalLocation = async (req, res) => {\n  try {\n    const validation = Joi.validate(req.body, deleteSchema)\n    if (validation.error) throw new Error(validation.error)\n\n    const { id: ids } = req.body\n    const data = await _PhysicalLocationModel().updateMany({ _id: { $in: ids } }, { $set: { isDelete: true } }, { new: true })\n\n    return res.json({ data })\n  } catch (err) {\n    console.log(err)\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573021617935
  },
  "{\"sourceRoot\":\"/app/src/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/models/physicalLocation.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/models/physicalLocation.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/models/physicalLocation.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/models/physicalLocation.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/models",
        "sourceFileName": "physicalLocation.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongoose = require(\"mongoose\");\n\nvar _multiTenant = require(\"../lib/multiTenant\");\n\nvar physicalLocationSchema = new _mongoose.Schema({\n  name: {\n    type: String,\n    required: true\n  },\n  storeId: {\n    type: _mongoose.Schema.Types.ObjectId,\n    ref: 'Store'\n  },\n  isDefault: {\n    type: Boolean,\n    \"default\": false\n  },\n  isDelete: {\n    type: Boolean,\n    \"default\": false\n  }\n}, {\n  timestamps: true,\n  skipVersioning: true\n});\n\nvar _default = (0, _multiTenant.tenantModel)('PhysicalLocation', physicalLocationSchema);\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBoeXNpY2FsTG9jYXRpb24uanMiXSwibmFtZXMiOlsicGh5c2ljYWxMb2NhdGlvblNjaGVtYSIsIlNjaGVtYSIsIm5hbWUiLCJ0eXBlIiwiU3RyaW5nIiwicmVxdWlyZWQiLCJzdG9yZUlkIiwiVHlwZXMiLCJPYmplY3RJZCIsInJlZiIsImlzRGVmYXVsdCIsIkJvb2xlYW4iLCJpc0RlbGV0ZSIsInRpbWVzdGFtcHMiLCJza2lwVmVyc2lvbmluZyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUVBLElBQU1BLHNCQUFzQixHQUFHLElBQUlDLGdCQUFKLENBQVc7QUFDeENDLEVBQUFBLElBQUksRUFBRTtBQUNKQyxJQUFBQSxJQUFJLEVBQUVDLE1BREY7QUFFSkMsSUFBQUEsUUFBUSxFQUFFO0FBRk4sR0FEa0M7QUFLeENDLEVBQUFBLE9BQU8sRUFBRTtBQUNQSCxJQUFBQSxJQUFJLEVBQUVGLGlCQUFPTSxLQUFQLENBQWFDLFFBRFo7QUFFUEMsSUFBQUEsR0FBRyxFQUFFO0FBRkUsR0FMK0I7QUFTeENDLEVBQUFBLFNBQVMsRUFBRTtBQUNUUCxJQUFBQSxJQUFJLEVBQUVRLE9BREc7QUFFVCxlQUFTO0FBRkEsR0FUNkI7QUFheENDLEVBQUFBLFFBQVEsRUFBRTtBQUNSVCxJQUFBQSxJQUFJLEVBQUVRLE9BREU7QUFFUixlQUFTO0FBRkQ7QUFiOEIsQ0FBWCxFQWlCNUI7QUFBRUUsRUFBQUEsVUFBVSxFQUFFLElBQWQ7QUFBb0JDLEVBQUFBLGNBQWMsRUFBRTtBQUFwQyxDQWpCNEIsQ0FBL0I7O2VBbUJlLDhCQUFZLGtCQUFaLEVBQWdDZCxzQkFBaEMsQyIsInNvdXJjZVJvb3QiOiIvYXBwL3NyYy9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTY2hlbWEgfSBmcm9tICdtb25nb29zZSdcbmltcG9ydCB7IHRlbmFudE1vZGVsIH0gZnJvbSAnLi4vbGliL211bHRpVGVuYW50J1xuXG5jb25zdCBwaHlzaWNhbExvY2F0aW9uU2NoZW1hID0gbmV3IFNjaGVtYSh7XG4gIG5hbWU6IHtcbiAgICB0eXBlOiBTdHJpbmcsXG4gICAgcmVxdWlyZWQ6IHRydWVcbiAgfSxcbiAgc3RvcmVJZDoge1xuICAgIHR5cGU6IFNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgICByZWY6ICdTdG9yZSdcbiAgfSxcbiAgaXNEZWZhdWx0OiB7XG4gICAgdHlwZTogQm9vbGVhbixcbiAgICBkZWZhdWx0OiBmYWxzZVxuICB9LFxuICBpc0RlbGV0ZToge1xuICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgZGVmYXVsdDogZmFsc2VcbiAgfVxufSwgeyB0aW1lc3RhbXBzOiB0cnVlLCBza2lwVmVyc2lvbmluZzogdHJ1ZSB9KVxuXG5leHBvcnQgZGVmYXVsdCB0ZW5hbnRNb2RlbCgnUGh5c2ljYWxMb2NhdGlvbicsIHBoeXNpY2FsTG9jYXRpb25TY2hlbWEpXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "physicalLocation.js"
      ],
      "names": [
        "physicalLocationSchema",
        "Schema",
        "name",
        "type",
        "String",
        "required",
        "storeId",
        "Types",
        "ObjectId",
        "ref",
        "isDefault",
        "Boolean",
        "isDelete",
        "timestamps",
        "skipVersioning"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AAEA,IAAMA,sBAAsB,GAAG,IAAIC,gBAAJ,CAAW;AACxCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAEC,MADF;AAEJC,IAAAA,QAAQ,EAAE;AAFN,GADkC;AAKxCC,EAAAA,OAAO,EAAE;AACPH,IAAAA,IAAI,EAAEF,iBAAOM,KAAP,CAAaC,QADZ;AAEPC,IAAAA,GAAG,EAAE;AAFE,GAL+B;AASxCC,EAAAA,SAAS,EAAE;AACTP,IAAAA,IAAI,EAAEQ,OADG;AAET,eAAS;AAFA,GAT6B;AAaxCC,EAAAA,QAAQ,EAAE;AACRT,IAAAA,IAAI,EAAEQ,OADE;AAER,eAAS;AAFD;AAb8B,CAAX,EAiB5B;AAAEE,EAAAA,UAAU,EAAE,IAAd;AAAoBC,EAAAA,cAAc,EAAE;AAApC,CAjB4B,CAA/B;;eAmBe,8BAAY,kBAAZ,EAAgCd,sBAAhC,C",
      "sourceRoot": "/app/src/models",
      "sourcesContent": [
        "import { Schema } from 'mongoose'\nimport { tenantModel } from '../lib/multiTenant'\n\nconst physicalLocationSchema = new Schema({\n  name: {\n    type: String,\n    required: true\n  },\n  storeId: {\n    type: Schema.Types.ObjectId,\n    ref: 'Store'\n  },\n  isDefault: {\n    type: Boolean,\n    default: false\n  },\n  isDelete: {\n    type: Boolean,\n    default: false\n  }\n}, { timestamps: true, skipVersioning: true })\n\nexport default tenantModel('PhysicalLocation', physicalLocationSchema)\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573021617943
  },
  "{\"sourceRoot\":\"/app/src/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/routes/storage.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/routes/storage.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/routes/storage.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/routes/storage.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/routes",
        "sourceFileName": "storage.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _storage = require(\"../controllers/storage\");\n\nvar router = (0, _express.Router)();\nrouter.post('/upload_single', _storage.singleFileUpload);\nrouter.post('/upload_multi', _storage.multiFileUpload);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0b3JhZ2UuanMiXSwibmFtZXMiOlsicm91dGVyIiwicG9zdCIsInNpbmdsZUZpbGVVcGxvYWQiLCJtdWx0aUZpbGVVcGxvYWQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFFQSxJQUFNQSxNQUFNLEdBQUcsc0JBQWY7QUFFQUEsTUFBTSxDQUFDQyxJQUFQLENBQVksZ0JBQVosRUFBOEJDLHlCQUE5QjtBQUNBRixNQUFNLENBQUNDLElBQVAsQ0FBWSxlQUFaLEVBQTZCRSx3QkFBN0I7ZUFFZUgsTSIsInNvdXJjZVJvb3QiOiIvYXBwL3NyYy9yb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSb3V0ZXIgfSBmcm9tICdleHByZXNzJ1xuaW1wb3J0IHsgc2luZ2xlRmlsZVVwbG9hZCwgbXVsdGlGaWxlVXBsb2FkIH0gZnJvbSAnLi4vY29udHJvbGxlcnMvc3RvcmFnZSdcblxuY29uc3Qgcm91dGVyID0gUm91dGVyKClcblxucm91dGVyLnBvc3QoJy91cGxvYWRfc2luZ2xlJywgc2luZ2xlRmlsZVVwbG9hZClcbnJvdXRlci5wb3N0KCcvdXBsb2FkX211bHRpJywgbXVsdGlGaWxlVXBsb2FkKVxuXG5leHBvcnQgZGVmYXVsdCByb3V0ZXI7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "storage.js"
      ],
      "names": [
        "router",
        "post",
        "singleFileUpload",
        "multiFileUpload"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AAEA,IAAMA,MAAM,GAAG,sBAAf;AAEAA,MAAM,CAACC,IAAP,CAAY,gBAAZ,EAA8BC,yBAA9B;AACAF,MAAM,CAACC,IAAP,CAAY,eAAZ,EAA6BE,wBAA7B;eAEeH,M",
      "sourceRoot": "/app/src/routes",
      "sourcesContent": [
        "import { Router } from 'express'\nimport { singleFileUpload, multiFileUpload } from '../controllers/storage'\n\nconst router = Router()\n\nrouter.post('/upload_single', singleFileUpload)\nrouter.post('/upload_multi', multiFileUpload)\n\nexport default router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573021617943
  },
  "{\"sourceRoot\":\"/app/src/controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/controllers/storage.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/controllers/storage.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/controllers/storage.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/controllers/storage.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/controllers",
        "sourceFileName": "storage.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.multiFileUpload = exports.singleFileUpload = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _fileUpload = _interopRequireDefault(require(\"../services/file-upload\"));\n\nvar singleUpload = _fileUpload[\"default\"].single('image');\n\nvar multiUpload = _fileUpload[\"default\"].array('images');\n\nvar singleFileUpload = function singleFileUpload(req, res) {\n  return _regenerator[\"default\"].async(function singleFileUpload$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          singleUpload(req, res, function _callee(err) {\n            return _regenerator[\"default\"].async(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    if (!err) {\n                      _context.next = 2;\n                      break;\n                    }\n\n                    return _context.abrupt(\"return\", res.json({\n                      err: err\n                    }));\n\n                  case 2:\n                    return _context.abrupt(\"return\", res.json({\n                      data: req.file\n                    }));\n\n                  case 3:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            });\n          });\n          _context2.next = 8;\n          break;\n\n        case 4:\n          _context2.prev = 4;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0);\n          return _context2.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context2.t0.message\n          }));\n\n        case 8:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 4]]);\n};\n\nexports.singleFileUpload = singleFileUpload;\n\nvar multiFileUpload = function multiFileUpload(req, res) {\n  return _regenerator[\"default\"].async(function multiFileUpload$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          multiUpload(req, res, function _callee2(err) {\n            return _regenerator[\"default\"].async(function _callee2$(_context3) {\n              while (1) {\n                switch (_context3.prev = _context3.next) {\n                  case 0:\n                    if (!err) {\n                      _context3.next = 2;\n                      break;\n                    }\n\n                    return _context3.abrupt(\"return\", res.json({\n                      err: err\n                    }));\n\n                  case 2:\n                    return _context3.abrupt(\"return\", res.json({\n                      data: req.files\n                    }));\n\n                  case 3:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }\n            });\n          });\n          _context4.next = 8;\n          break;\n\n        case 4:\n          _context4.prev = 4;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.log(_context4.t0);\n          return _context4.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context4.t0.message\n          }));\n\n        case 8:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, [[0, 4]]);\n};\n\nexports.multiFileUpload = multiFileUpload;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0b3JhZ2UuanMiXSwibmFtZXMiOlsic2luZ2xlVXBsb2FkIiwidXBsb2FkU2VydmljZSIsInNpbmdsZSIsIm11bHRpVXBsb2FkIiwiYXJyYXkiLCJzaW5nbGVGaWxlVXBsb2FkIiwicmVxIiwicmVzIiwiZXJyIiwianNvbiIsImRhdGEiLCJmaWxlIiwiY29uc29sZSIsImxvZyIsInN0YXR1cyIsImVycm9yIiwicmVhc29uIiwibWVzc2FnZSIsIm11bHRpRmlsZVVwbG9hZCIsImZpbGVzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBOztBQUVBLElBQU1BLFlBQVksR0FBR0MsdUJBQWNDLE1BQWQsQ0FBcUIsT0FBckIsQ0FBckI7O0FBQ0EsSUFBTUMsV0FBVyxHQUFHRix1QkFBY0csS0FBZCxDQUFvQixRQUFwQixDQUFwQjs7QUFFTyxJQUFNQyxnQkFBZ0IsR0FBRyxTQUFuQkEsZ0JBQW1CLENBQU9DLEdBQVAsRUFBWUMsR0FBWjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFFNUJQLFVBQUFBLFlBQVksQ0FBQ00sR0FBRCxFQUFNQyxHQUFOLEVBQVcsaUJBQWdCQyxHQUFoQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEseUJBQ2pCQSxHQURpQjtBQUFBO0FBQUE7QUFBQTs7QUFBQSxxREFFWkQsR0FBRyxDQUFDRSxJQUFKLENBQVM7QUFBRUQsc0JBQUFBLEdBQUcsRUFBSEE7QUFBRixxQkFBVCxDQUZZOztBQUFBO0FBQUEscURBS2RELEdBQUcsQ0FBQ0UsSUFBSixDQUFTO0FBQUVDLHNCQUFBQSxJQUFJLEVBQUVKLEdBQUcsQ0FBQ0s7QUFBWixxQkFBVCxDQUxjOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLFdBQVgsQ0FBWjtBQUY0QjtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQVU1QkMsVUFBQUEsT0FBTyxDQUFDQyxHQUFSO0FBVjRCLDRDQVdyQk4sR0FBRyxDQUFDTyxNQUFKLENBQVcsR0FBWCxFQUFnQkwsSUFBaEIsQ0FBcUI7QUFBRU0sWUFBQUEsS0FBSyxFQUFFLElBQVQ7QUFBZUMsWUFBQUEsTUFBTSxFQUFFLGFBQUlDO0FBQTNCLFdBQXJCLENBWHFCOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLENBQXpCOzs7O0FBZUEsSUFBTUMsZUFBZSxHQUFHLFNBQWxCQSxlQUFrQixDQUFPWixHQUFQLEVBQVlDLEdBQVo7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRTNCSixVQUFBQSxXQUFXLENBQUNHLEdBQUQsRUFBTUMsR0FBTixFQUFXLGtCQUFnQkMsR0FBaEI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLHlCQUNoQkEsR0FEZ0I7QUFBQTtBQUFBO0FBQUE7O0FBQUEsc0RBRVhELEdBQUcsQ0FBQ0UsSUFBSixDQUFTO0FBQUVELHNCQUFBQSxHQUFHLEVBQUhBO0FBQUYscUJBQVQsQ0FGVzs7QUFBQTtBQUFBLHNEQUtiRCxHQUFHLENBQUNFLElBQUosQ0FBUztBQUFFQyxzQkFBQUEsSUFBSSxFQUFFSixHQUFHLENBQUNhO0FBQVoscUJBQVQsQ0FMYTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxXQUFYLENBQVg7QUFGMkI7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFVM0JQLFVBQUFBLE9BQU8sQ0FBQ0MsR0FBUjtBQVYyQiw0Q0FXcEJOLEdBQUcsQ0FBQ08sTUFBSixDQUFXLEdBQVgsRUFBZ0JMLElBQWhCLENBQXFCO0FBQUVNLFlBQUFBLEtBQUssRUFBRSxJQUFUO0FBQWVDLFlBQUFBLE1BQU0sRUFBRSxhQUFJQztBQUEzQixXQUFyQixDQVhvQjs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxDQUF4QiIsInNvdXJjZVJvb3QiOiIvYXBwL3NyYy9jb250cm9sbGVycyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB1cGxvYWRTZXJ2aWNlIGZyb20gJy4uL3NlcnZpY2VzL2ZpbGUtdXBsb2FkJ1xuXG5jb25zdCBzaW5nbGVVcGxvYWQgPSB1cGxvYWRTZXJ2aWNlLnNpbmdsZSgnaW1hZ2UnKVxuY29uc3QgbXVsdGlVcGxvYWQgPSB1cGxvYWRTZXJ2aWNlLmFycmF5KCdpbWFnZXMnKVxuXG5leHBvcnQgY29uc3Qgc2luZ2xlRmlsZVVwbG9hZCA9IGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICB0cnkge1xuICAgIHNpbmdsZVVwbG9hZChyZXEsIHJlcywgYXN5bmMgZnVuY3Rpb24gKGVycikge1xuICAgICAgaWYgKGVycikge1xuICAgICAgICByZXR1cm4gcmVzLmpzb24oeyBlcnIgfSlcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHJlcy5qc29uKHsgZGF0YTogcmVxLmZpbGUgfSlcbiAgICB9KVxuICB9IGNhdGNoIChlcnIpIHtcbiAgICBjb25zb2xlLmxvZyhlcnIpXG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgZXJyb3I6IHRydWUsIHJlYXNvbjogZXJyLm1lc3NhZ2UgfSlcbiAgfVxufVxuXG5leHBvcnQgY29uc3QgbXVsdGlGaWxlVXBsb2FkID0gYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gIHRyeSB7XG4gICAgbXVsdGlVcGxvYWQocmVxLCByZXMsIGFzeW5jIGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgcmV0dXJuIHJlcy5qc29uKHsgZXJyIH0pXG4gICAgICB9XG5cbiAgICAgIHJldHVybiByZXMuanNvbih7IGRhdGE6IHJlcS5maWxlcyB9KVxuICAgIH0pXG4gIH0gY2F0Y2ggKGVycikge1xuICAgIGNvbnNvbGUubG9nKGVycilcbiAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLmpzb24oeyBlcnJvcjogdHJ1ZSwgcmVhc29uOiBlcnIubWVzc2FnZSB9KVxuICB9XG59XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "storage.js"
      ],
      "names": [
        "singleUpload",
        "uploadService",
        "single",
        "multiUpload",
        "array",
        "singleFileUpload",
        "req",
        "res",
        "err",
        "json",
        "data",
        "file",
        "console",
        "log",
        "status",
        "error",
        "reason",
        "message",
        "multiFileUpload",
        "files"
      ],
      "mappings": ";;;;;;;;;;;AAAA;;AAEA,IAAMA,YAAY,GAAGC,uBAAcC,MAAd,CAAqB,OAArB,CAArB;;AACA,IAAMC,WAAW,GAAGF,uBAAcG,KAAd,CAAoB,QAApB,CAApB;;AAEO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAE5BP,UAAAA,YAAY,CAACM,GAAD,EAAMC,GAAN,EAAW,iBAAgBC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,yBACjBA,GADiB;AAAA;AAAA;AAAA;;AAAA,qDAEZD,GAAG,CAACE,IAAJ,CAAS;AAAED,sBAAAA,GAAG,EAAHA;AAAF,qBAAT,CAFY;;AAAA;AAAA,qDAKdD,GAAG,CAACE,IAAJ,CAAS;AAAEC,sBAAAA,IAAI,EAAEJ,GAAG,CAACK;AAAZ,qBAAT,CALc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAX,CAAZ;AAF4B;AAAA;;AAAA;AAAA;AAAA;AAU5BC,UAAAA,OAAO,CAACC,GAAR;AAV4B,4CAWrBN,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBL,IAAhB,CAAqB;AAAEM,YAAAA,KAAK,EAAE,IAAT;AAAeC,YAAAA,MAAM,EAAE,aAAIC;AAA3B,WAArB,CAXqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB;;;;AAeA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAOZ,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAE3BJ,UAAAA,WAAW,CAACG,GAAD,EAAMC,GAAN,EAAW,kBAAgBC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,yBAChBA,GADgB;AAAA;AAAA;AAAA;;AAAA,sDAEXD,GAAG,CAACE,IAAJ,CAAS;AAAED,sBAAAA,GAAG,EAAHA;AAAF,qBAAT,CAFW;;AAAA;AAAA,sDAKbD,GAAG,CAACE,IAAJ,CAAS;AAAEC,sBAAAA,IAAI,EAAEJ,GAAG,CAACa;AAAZ,qBAAT,CALa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAX,CAAX;AAF2B;AAAA;;AAAA;AAAA;AAAA;AAU3BP,UAAAA,OAAO,CAACC,GAAR;AAV2B,4CAWpBN,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBL,IAAhB,CAAqB;AAAEM,YAAAA,KAAK,EAAE,IAAT;AAAeC,YAAAA,MAAM,EAAE,aAAIC;AAA3B,WAArB,CAXoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB",
      "sourceRoot": "/app/src/controllers",
      "sourcesContent": [
        "import uploadService from '../services/file-upload'\n\nconst singleUpload = uploadService.single('image')\nconst multiUpload = uploadService.array('images')\n\nexport const singleFileUpload = async (req, res) => {\n  try {\n    singleUpload(req, res, async function (err) {\n      if (err) {\n        return res.json({ err })\n      }\n\n      return res.json({ data: req.file })\n    })\n  } catch (err) {\n    console.log(err)\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const multiFileUpload = async (req, res) => {\n  try {\n    multiUpload(req, res, async function (err) {\n      if (err) {\n        return res.json({ err })\n      }\n\n      return res.json({ data: req.files })\n    })\n  } catch (err) {\n    console.log(err)\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573021617939
  },
  "{\"sourceRoot\":\"/app/src/services\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/services/file-upload.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/services",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/services/file-upload.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/services/file-upload.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/services/file-upload.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/services",
        "sourceFileName": "file-upload.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _awsSdk = _interopRequireDefault(require(\"aws-sdk\"));\n\nvar _multer = _interopRequireDefault(require(\"multer\"));\n\nvar _multerS = _interopRequireDefault(require(\"multer-s3\"));\n\nvar _helpers = require(\"../utils/helpers\");\n\n_awsSdk[\"default\"].config.update({\n  region: process.env.AWSRegion,\n  credentials: {\n    accessKeyId: process.env.AWSAccessKeyId,\n    secretAccessKey: process.env.AWSSecretKey\n  }\n});\n\nvar upload = (0, _multer[\"default\"])({\n  storage: (0, _multerS[\"default\"])({\n    s3: new _awsSdk[\"default\"].S3(),\n    bucket: process.env.AWSBucket,\n    acl: 'public-read',\n    // metadata: function (req, file, cb) {\n    //   cb(null, { fieldName: 'fieldname' });\n    // },\n    key: function key(req, file, cb) {\n      var section = req.query.section;\n      console.log('========= req ', req.query);\n      var fileName = (0, _helpers.generateFileName)(file.originalname, section);\n      cb(null, fileName);\n    }\n  })\n});\nvar _default = upload;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbGUtdXBsb2FkLmpzIl0sIm5hbWVzIjpbIkFXUyIsImNvbmZpZyIsInVwZGF0ZSIsInJlZ2lvbiIsInByb2Nlc3MiLCJlbnYiLCJBV1NSZWdpb24iLCJjcmVkZW50aWFscyIsImFjY2Vzc0tleUlkIiwiQVdTQWNjZXNzS2V5SWQiLCJzZWNyZXRBY2Nlc3NLZXkiLCJBV1NTZWNyZXRLZXkiLCJ1cGxvYWQiLCJzdG9yYWdlIiwiczMiLCJTMyIsImJ1Y2tldCIsIkFXU0J1Y2tldCIsImFjbCIsImtleSIsInJlcSIsImZpbGUiLCJjYiIsInNlY3Rpb24iLCJxdWVyeSIsImNvbnNvbGUiLCJsb2ciLCJmaWxlTmFtZSIsIm9yaWdpbmFsbmFtZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBRUFBLG1CQUFJQyxNQUFKLENBQVdDLE1BQVgsQ0FBa0I7QUFDaEJDLEVBQUFBLE1BQU0sRUFBRUMsT0FBTyxDQUFDQyxHQUFSLENBQVlDLFNBREo7QUFFaEJDLEVBQUFBLFdBQVcsRUFBRTtBQUNYQyxJQUFBQSxXQUFXLEVBQUVKLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSSxjQURkO0FBRVhDLElBQUFBLGVBQWUsRUFBRU4sT0FBTyxDQUFDQyxHQUFSLENBQVlNO0FBRmxCO0FBRkcsQ0FBbEI7O0FBUUEsSUFBTUMsTUFBTSxHQUFHLHdCQUFPO0FBQ3BCQyxFQUFBQSxPQUFPLEVBQUUseUJBQVM7QUFDaEJDLElBQUFBLEVBQUUsRUFBRSxJQUFJZCxtQkFBSWUsRUFBUixFQURZO0FBRWhCQyxJQUFBQSxNQUFNLEVBQUVaLE9BQU8sQ0FBQ0MsR0FBUixDQUFZWSxTQUZKO0FBR2hCQyxJQUFBQSxHQUFHLEVBQUUsYUFIVztBQUloQjtBQUNBO0FBQ0E7QUFDQUMsSUFBQUEsR0FBRyxFQUFFLGFBQVVDLEdBQVYsRUFBZUMsSUFBZixFQUFxQkMsRUFBckIsRUFBeUI7QUFBQSxVQUNwQkMsT0FEb0IsR0FDUkgsR0FBRyxDQUFDSSxLQURJLENBQ3BCRCxPQURvQjtBQUU1QkUsTUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksZ0JBQVosRUFBOEJOLEdBQUcsQ0FBQ0ksS0FBbEM7QUFDQSxVQUFNRyxRQUFRLEdBQUcsK0JBQWlCTixJQUFJLENBQUNPLFlBQXRCLEVBQW9DTCxPQUFwQyxDQUFqQjtBQUNBRCxNQUFBQSxFQUFFLENBQUMsSUFBRCxFQUFPSyxRQUFQLENBQUY7QUFDRDtBQVplLEdBQVQ7QUFEVyxDQUFQLENBQWY7ZUFpQmVmLE0iLCJzb3VyY2VSb290IjoiL2FwcC9zcmMvc2VydmljZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQVdTIGZyb20gJ2F3cy1zZGsnXG5pbXBvcnQgbXVsdGVyIGZyb20gJ211bHRlcidcbmltcG9ydCBtdWx0ZXJTMyBmcm9tICdtdWx0ZXItczMnXG5pbXBvcnQgeyBnZW5lcmF0ZUZpbGVOYW1lIH0gZnJvbSAnLi4vdXRpbHMvaGVscGVycydcblxuQVdTLmNvbmZpZy51cGRhdGUoe1xuICByZWdpb246IHByb2Nlc3MuZW52LkFXU1JlZ2lvbixcbiAgY3JlZGVudGlhbHM6IHtcbiAgICBhY2Nlc3NLZXlJZDogcHJvY2Vzcy5lbnYuQVdTQWNjZXNzS2V5SWQsXG4gICAgc2VjcmV0QWNjZXNzS2V5OiBwcm9jZXNzLmVudi5BV1NTZWNyZXRLZXlcbiAgfVxufSlcblxuY29uc3QgdXBsb2FkID0gbXVsdGVyKHtcbiAgc3RvcmFnZTogbXVsdGVyUzMoe1xuICAgIHMzOiBuZXcgQVdTLlMzKCksXG4gICAgYnVja2V0OiBwcm9jZXNzLmVudi5BV1NCdWNrZXQsXG4gICAgYWNsOiAncHVibGljLXJlYWQnLFxuICAgIC8vIG1ldGFkYXRhOiBmdW5jdGlvbiAocmVxLCBmaWxlLCBjYikge1xuICAgIC8vICAgY2IobnVsbCwgeyBmaWVsZE5hbWU6ICdmaWVsZG5hbWUnIH0pO1xuICAgIC8vIH0sXG4gICAga2V5OiBmdW5jdGlvbiAocmVxLCBmaWxlLCBjYikge1xuICAgICAgY29uc3QgeyBzZWN0aW9uIH0gPSByZXEucXVlcnlcbiAgICAgIGNvbnNvbGUubG9nKCc9PT09PT09PT0gcmVxICcsIHJlcS5xdWVyeSlcbiAgICAgIGNvbnN0IGZpbGVOYW1lID0gZ2VuZXJhdGVGaWxlTmFtZShmaWxlLm9yaWdpbmFsbmFtZSwgc2VjdGlvbilcbiAgICAgIGNiKG51bGwsIGZpbGVOYW1lKVxuICAgIH1cbiAgfSksXG59KVxuXG5leHBvcnQgZGVmYXVsdCB1cGxvYWQ7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "file-upload.js"
      ],
      "names": [
        "AWS",
        "config",
        "update",
        "region",
        "process",
        "env",
        "AWSRegion",
        "credentials",
        "accessKeyId",
        "AWSAccessKeyId",
        "secretAccessKey",
        "AWSSecretKey",
        "upload",
        "storage",
        "s3",
        "S3",
        "bucket",
        "AWSBucket",
        "acl",
        "key",
        "req",
        "file",
        "cb",
        "section",
        "query",
        "console",
        "log",
        "fileName",
        "originalname"
      ],
      "mappings": ";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEAA,mBAAIC,MAAJ,CAAWC,MAAX,CAAkB;AAChBC,EAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC,SADJ;AAEhBC,EAAAA,WAAW,EAAE;AACXC,IAAAA,WAAW,EAAEJ,OAAO,CAACC,GAAR,CAAYI,cADd;AAEXC,IAAAA,eAAe,EAAEN,OAAO,CAACC,GAAR,CAAYM;AAFlB;AAFG,CAAlB;;AAQA,IAAMC,MAAM,GAAG,wBAAO;AACpBC,EAAAA,OAAO,EAAE,yBAAS;AAChBC,IAAAA,EAAE,EAAE,IAAId,mBAAIe,EAAR,EADY;AAEhBC,IAAAA,MAAM,EAAEZ,OAAO,CAACC,GAAR,CAAYY,SAFJ;AAGhBC,IAAAA,GAAG,EAAE,aAHW;AAIhB;AACA;AACA;AACAC,IAAAA,GAAG,EAAE,aAAUC,GAAV,EAAeC,IAAf,EAAqBC,EAArB,EAAyB;AAAA,UACpBC,OADoB,GACRH,GAAG,CAACI,KADI,CACpBD,OADoB;AAE5BE,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BN,GAAG,CAACI,KAAlC;AACA,UAAMG,QAAQ,GAAG,+BAAiBN,IAAI,CAACO,YAAtB,EAAoCL,OAApC,CAAjB;AACAD,MAAAA,EAAE,CAAC,IAAD,EAAOK,QAAP,CAAF;AACD;AAZe,GAAT;AADW,CAAP,CAAf;eAiBef,M",
      "sourceRoot": "/app/src/services",
      "sourcesContent": [
        "import AWS from 'aws-sdk'\nimport multer from 'multer'\nimport multerS3 from 'multer-s3'\nimport { generateFileName } from '../utils/helpers'\n\nAWS.config.update({\n  region: process.env.AWSRegion,\n  credentials: {\n    accessKeyId: process.env.AWSAccessKeyId,\n    secretAccessKey: process.env.AWSSecretKey\n  }\n})\n\nconst upload = multer({\n  storage: multerS3({\n    s3: new AWS.S3(),\n    bucket: process.env.AWSBucket,\n    acl: 'public-read',\n    // metadata: function (req, file, cb) {\n    //   cb(null, { fieldName: 'fieldname' });\n    // },\n    key: function (req, file, cb) {\n      const { section } = req.query\n      console.log('========= req ', req.query)\n      const fileName = generateFileName(file.originalname, section)\n      cb(null, fileName)\n    }\n  }),\n})\n\nexport default upload;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573021617947
  },
  "{\"sourceRoot\":\"/app/src/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/routes/inventory.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/routes/inventory.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/routes/inventory.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/routes/inventory.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/routes",
        "sourceFileName": "inventory.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _inventory = require(\"../controllers/inventory\");\n\nvar router = (0, _express.Router)();\nrouter.get('/', _inventory.getInventories);\nrouter.post('/create', _inventory.createInventory);\nrouter.post('/update', _inventory.updateInventory);\nrouter.post('/delete', _inventory.deleteInventories);\nrouter.get('/search', _inventory.searchInventory);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImludmVudG9yeS5qcyJdLCJuYW1lcyI6WyJyb3V0ZXIiLCJnZXQiLCJnZXRJbnZlbnRvcmllcyIsInBvc3QiLCJjcmVhdGVJbnZlbnRvcnkiLCJ1cGRhdGVJbnZlbnRvcnkiLCJkZWxldGVJbnZlbnRvcmllcyIsInNlYXJjaEludmVudG9yeSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUVBOztBQUNBLElBQU1BLE1BQU0sR0FBRyxzQkFBZjtBQUVBQSxNQUFNLENBQUNDLEdBQVAsQ0FBVyxHQUFYLEVBQWdCQyx5QkFBaEI7QUFDQUYsTUFBTSxDQUFDRyxJQUFQLENBQVksU0FBWixFQUF1QkMsMEJBQXZCO0FBQ0FKLE1BQU0sQ0FBQ0csSUFBUCxDQUFZLFNBQVosRUFBdUJFLDBCQUF2QjtBQUNBTCxNQUFNLENBQUNHLElBQVAsQ0FBWSxTQUFaLEVBQXVCRyw0QkFBdkI7QUFDQU4sTUFBTSxDQUFDQyxHQUFQLENBQVcsU0FBWCxFQUFzQk0sMEJBQXRCO2VBR2VQLE0iLCJzb3VyY2VSb290IjoiL2FwcC9zcmMvcm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUm91dGVyIH0gZnJvbSAnZXhwcmVzcydcblxuaW1wb3J0IHsgZ2V0SW52ZW50b3JpZXMsIGNyZWF0ZUludmVudG9yeSwgdXBkYXRlSW52ZW50b3J5LCBkZWxldGVJbnZlbnRvcmllcywgc2VhcmNoSW52ZW50b3J5IH0gZnJvbSAnLi4vY29udHJvbGxlcnMvaW52ZW50b3J5J1xuY29uc3Qgcm91dGVyID0gUm91dGVyKClcblxucm91dGVyLmdldCgnLycsIGdldEludmVudG9yaWVzKVxucm91dGVyLnBvc3QoJy9jcmVhdGUnLCBjcmVhdGVJbnZlbnRvcnkpXG5yb3V0ZXIucG9zdCgnL3VwZGF0ZScsIHVwZGF0ZUludmVudG9yeSlcbnJvdXRlci5wb3N0KCcvZGVsZXRlJywgZGVsZXRlSW52ZW50b3JpZXMpXG5yb3V0ZXIuZ2V0KCcvc2VhcmNoJywgc2VhcmNoSW52ZW50b3J5KVxuXG5cbmV4cG9ydCBkZWZhdWx0IHJvdXRlclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "inventory.js"
      ],
      "names": [
        "router",
        "get",
        "getInventories",
        "post",
        "createInventory",
        "updateInventory",
        "deleteInventories",
        "searchInventory"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA;;AACA,IAAMA,MAAM,GAAG,sBAAf;AAEAA,MAAM,CAACC,GAAP,CAAW,GAAX,EAAgBC,yBAAhB;AACAF,MAAM,CAACG,IAAP,CAAY,SAAZ,EAAuBC,0BAAvB;AACAJ,MAAM,CAACG,IAAP,CAAY,SAAZ,EAAuBE,0BAAvB;AACAL,MAAM,CAACG,IAAP,CAAY,SAAZ,EAAuBG,4BAAvB;AACAN,MAAM,CAACC,GAAP,CAAW,SAAX,EAAsBM,0BAAtB;eAGeP,M",
      "sourceRoot": "/app/src/routes",
      "sourcesContent": [
        "import { Router } from 'express'\n\nimport { getInventories, createInventory, updateInventory, deleteInventories, searchInventory } from '../controllers/inventory'\nconst router = Router()\n\nrouter.get('/', getInventories)\nrouter.post('/create', createInventory)\nrouter.post('/update', updateInventory)\nrouter.post('/delete', deleteInventories)\nrouter.get('/search', searchInventory)\n\n\nexport default router\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1574924198763
  },
  "{\"sourceRoot\":\"/app/src/controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/controllers/inventory.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/controllers/inventory.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/controllers/inventory.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/controllers/inventory.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/controllers",
        "sourceFileName": "inventory.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.searchInventory = exports.deleteInventories = exports.updateInventory = exports.createInventory = exports.getInventories = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _inventory = _interopRequireDefault(require(\"../models/inventory\"));\n\nvar _inventoryStock = _interopRequireDefault(require(\"../models/inventoryStock\"));\n\nvar _errors = _interopRequireDefault(require(\"../constants/errors\"));\n\nvar _joi = _interopRequireDefault(require(\"@hapi/joi\"));\n\nvar _flat = require(\"flat\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar createSchema = _joi[\"default\"].object({\n  name: _joi[\"default\"].string().required(),\n  description: _joi[\"default\"].string().optional().allow(''),\n  type: _joi[\"default\"].string().valid(['Service', 'Product']).required(),\n  taxExempt: _joi[\"default\"][\"boolean\"](),\n  inventoryStock: _joi[\"default\"].object({\n    unitCost: _joi[\"default\"].number(),\n    quantity: _joi[\"default\"].number(),\n    reOrderLevel: _joi[\"default\"].number()\n  }).optional().allow({})\n});\n\nvar updateSchema = _joi[\"default\"].object({\n  id: _joi[\"default\"].string().required(),\n  name: _joi[\"default\"].string().required(),\n  description: _joi[\"default\"].string().optional().allow(''),\n  type: _joi[\"default\"].string().valid(['Service', 'Product']),\n  taxExempt: _joi[\"default\"][\"boolean\"](),\n  inventoryStock: _joi[\"default\"].object({\n    unitCost: _joi[\"default\"].number(),\n    quantity: _joi[\"default\"].number(),\n    reOrderLevel: _joi[\"default\"].number()\n  }).optional().allow({})\n});\n\nvar deleteSchema = _joi[\"default\"].object({\n  id: _joi[\"default\"].array().items(_joi[\"default\"].string()).required()\n});\n\nvar searchSchema = _joi[\"default\"].object({\n  text: _joi[\"default\"].string().optional().allow(''),\n  page: _joi[\"default\"].optional(),\n  limit: _joi[\"default\"].optional()\n});\n\nvar getInventories = function getInventories(req, res) {\n  var _req$query, page, limit, data;\n\n  return _regenerator[\"default\"].async(function getInventories$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _req$query = req.query, page = _req$query.page, limit = _req$query.limit;\n          _context.next = 4;\n          return _regenerator[\"default\"].awrap((0, _inventory[\"default\"])().paginate({\n            isDelete: false\n          }, {\n            page: page,\n            limit: limit,\n            populate: [{\n              path: 'inventoryStock',\n              select: 'unitCost quantity reOrderLevel storeId'\n            }]\n          }));\n\n        case 4:\n          data = _context.sent;\n          return _context.abrupt(\"return\", res.json(data));\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n          return _context.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context.t0.message\n          }));\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 8]]);\n};\n\nexports.getInventories = getInventories;\n\nvar createInventory = function createInventory(req, res) {\n  var validation, _req$body, name, inventoryStock, rest, storeId, inventory, stock, inventoryData, data;\n\n  return _regenerator[\"default\"].async(function createInventory$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          validation = _joi[\"default\"].validate(req.body, createSchema);\n\n          if (!validation.error) {\n            _context2.next = 4;\n            break;\n          }\n\n          throw new Error(validation.error);\n\n        case 4:\n          _req$body = req.body, name = _req$body.name, inventoryStock = _req$body.inventoryStock, rest = (0, _objectWithoutProperties2[\"default\"])(_req$body, [\"name\", \"inventoryStock\"]), storeId = req.storeId;\n          _context2.next = 7;\n          return _regenerator[\"default\"].awrap((0, _inventory[\"default\"])().findOne({\n            name: {\n              $regex: new RegExp(name),\n              $options: 'i'\n            },\n            isDelete: false\n          }));\n\n        case 7:\n          inventory = _context2.sent;\n\n          if (!inventory) {\n            _context2.next = 10;\n            break;\n          }\n\n          throw new Error(_errors[\"default\"].RESOURCE_ALREADY_EXISTS);\n\n        case 10:\n          stock = {};\n          inventoryData = _objectSpread({\n            name: name\n          }, rest);\n\n          if (!(rest.type === 'Product')) {\n            _context2.next = 17;\n            break;\n          }\n\n          _context2.next = 15;\n          return _regenerator[\"default\"].awrap((0, _inventoryStock[\"default\"])().create(_objectSpread({\n            storeId: storeId\n          }, inventoryStock)));\n\n        case 15:\n          stock = _context2.sent;\n          inventoryData.inventoryStock = stock._id;\n\n        case 17:\n          _context2.next = 19;\n          return _regenerator[\"default\"].awrap((0, _inventory[\"default\"])().create(inventoryData));\n\n        case 19:\n          data = _context2.sent;\n          return _context2.abrupt(\"return\", res.json({\n            data: data\n          }));\n\n        case 23:\n          _context2.prev = 23;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0);\n\n          if (!(_context2.t0.message === _errors[\"default\"].RESOURCE_ALREADY_EXISTS)) {\n            _context2.next = 28;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", res.status(409).json({\n            error: true,\n            reason: _context2.t0.message\n          }));\n\n        case 28:\n          return _context2.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context2.t0.message\n          }));\n\n        case 29:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 23]]);\n};\n\nexports.createInventory = createInventory;\n\nvar updateInventory = function updateInventory(req, res) {\n  var validation, _req$body2, _id, inventoryStock, rest, inventory, data, stock;\n\n  return _regenerator[\"default\"].async(function updateInventory$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          validation = _joi[\"default\"].validate(req.body, updateSchema);\n\n          if (!validation.error) {\n            _context3.next = 4;\n            break;\n          }\n\n          throw new Error(validation.error);\n\n        case 4:\n          _req$body2 = req.body, _id = _req$body2.id, inventoryStock = _req$body2.inventoryStock, rest = (0, _objectWithoutProperties2[\"default\"])(_req$body2, [\"id\", \"inventoryStock\"]);\n\n          if (!rest.name) {\n            _context3.next = 11;\n            break;\n          }\n\n          _context3.next = 8;\n          return _regenerator[\"default\"].awrap((0, _inventory[\"default\"])().findOne({\n            name: {\n              $regex: new RegExp(rest.name),\n              $options: 'i'\n            },\n            isDelete: false\n          }));\n\n        case 8:\n          inventory = _context3.sent;\n\n          if (!(inventory && !inventory._id.equals(_id))) {\n            _context3.next = 11;\n            break;\n          }\n\n          throw new Error(_errors[\"default\"].RESOURCE_ALREADY_EXISTS);\n\n        case 11:\n          _context3.next = 13;\n          return _regenerator[\"default\"].awrap((0, _inventory[\"default\"])().findOneAndUpdate({\n            _id: _id,\n            isDelete: false\n          }, {\n            $set: (0, _flat.flatten)(rest)\n          }, {\n            \"new\": true\n          }));\n\n        case 13:\n          data = _context3.sent;\n          _context3.next = 16;\n          return _regenerator[\"default\"].awrap((0, _inventoryStock[\"default\"])().findOneAndUpdate({\n            _id: data.inventoryStock\n          }, {\n            $set: (0, _flat.flatten)(inventoryStock)\n          }, {\n            \"new\": true\n          }));\n\n        case 16:\n          stock = _context3.sent;\n          data.inventoryStock = stock;\n          return _context3.abrupt(\"return\", res.json({\n            data: data\n          }));\n\n        case 21:\n          _context3.prev = 21;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(_context3.t0);\n\n          if (!(_context3.t0.message === _errors[\"default\"].RESOURCE_ALREADY_EXISTS)) {\n            _context3.next = 26;\n            break;\n          }\n\n          return _context3.abrupt(\"return\", res.status(409).json({\n            error: true,\n            reason: _context3.t0.message\n          }));\n\n        case 26:\n          return _context3.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context3.t0.message\n          }));\n\n        case 27:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 21]]);\n};\n\nexports.updateInventory = updateInventory;\n\nvar deleteInventories = function deleteInventories(req, res) {\n  var validation, _id;\n\n  return _regenerator[\"default\"].async(function deleteInventories$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          validation = _joi[\"default\"].validate(req.body, deleteSchema);\n\n          if (!validation.error) {\n            _context4.next = 4;\n            break;\n          }\n\n          throw new Error(validation.error);\n\n        case 4:\n          _id = req.body.id;\n          _context4.next = 7;\n          return _regenerator[\"default\"].awrap((0, _inventory[\"default\"])().updateMany({\n            _id: {\n              $in: _id\n            }\n          }, {\n            $set: {\n              isDelete: true\n            }\n          }));\n\n        case 7:\n          return _context4.abrupt(\"return\", res.json({\n            data: {}\n          }));\n\n        case 10:\n          _context4.prev = 10;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.log(_context4.t0);\n          return _context4.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context4.t0.message\n          }));\n\n        case 14:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, [[0, 10]]);\n};\n\nexports.deleteInventories = deleteInventories;\n\nvar searchInventory = function searchInventory(req, res) {\n  var validation, _req$query$text, text, nameStr, nameRegex, data;\n\n  return _regenerator[\"default\"].async(function searchInventory$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          validation = _joi[\"default\"].validate(req.query, searchSchema);\n\n          if (!validation.error) {\n            _context5.next = 4;\n            break;\n          }\n\n          throw new Error(validation.error);\n\n        case 4:\n          _req$query$text = req.query.text, text = _req$query$text === void 0 ? '' : _req$query$text;\n\n          if (text) {\n            _context5.next = 7;\n            break;\n          }\n\n          return _context5.abrupt(\"return\", res.json({\n            data: []\n          }));\n\n        case 7:\n          nameStr = text.split(' ').join('|');\n          nameRegex = new RegExp(\"\".concat(nameStr));\n          _context5.next = 11;\n          return _regenerator[\"default\"].awrap((0, _inventory[\"default\"])().find({\n            isDelete: false,\n            name: {\n              $regex: nameRegex,\n              $options: 'i'\n            }\n          }).populate([{\n            path: 'inventoryStock',\n            select: 'unitCost quantity reOrderLevel storeId'\n          }]));\n\n        case 11:\n          data = _context5.sent;\n          return _context5.abrupt(\"return\", res.json(data));\n\n        case 15:\n          _context5.prev = 15;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.log(_context5.t0);\n          return _context5.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context5.t0.message\n          }));\n\n        case 19:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, [[0, 15]]);\n};\n\nexports.searchInventory = searchInventory;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "inventory.js"
      ],
      "names": [
        "createSchema",
        "Joi",
        "object",
        "name",
        "string",
        "required",
        "description",
        "optional",
        "allow",
        "type",
        "valid",
        "taxExempt",
        "inventoryStock",
        "unitCost",
        "number",
        "quantity",
        "reOrderLevel",
        "updateSchema",
        "id",
        "deleteSchema",
        "array",
        "items",
        "searchSchema",
        "text",
        "page",
        "limit",
        "getInventories",
        "req",
        "res",
        "query",
        "paginate",
        "isDelete",
        "populate",
        "path",
        "select",
        "data",
        "json",
        "console",
        "log",
        "status",
        "error",
        "reason",
        "message",
        "createInventory",
        "validation",
        "validate",
        "body",
        "Error",
        "rest",
        "storeId",
        "findOne",
        "$regex",
        "RegExp",
        "$options",
        "inventory",
        "ERRORS",
        "RESOURCE_ALREADY_EXISTS",
        "stock",
        "inventoryData",
        "create",
        "_id",
        "updateInventory",
        "equals",
        "findOneAndUpdate",
        "$set",
        "deleteInventories",
        "updateMany",
        "$in",
        "searchInventory",
        "nameStr",
        "split",
        "join",
        "nameRegex",
        "find"
      ],
      "mappings": "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",
      "sourceRoot": "/app/src/controllers",
      "sourcesContent": [
        "import _InventoryModel from '../models/inventory'\nimport _InventoryStockModel from '../models/inventoryStock'\nimport ERRORS from '../constants/errors'\nimport Joi from '@hapi/joi'\nimport { flatten } from 'flat'\n\nconst createSchema = Joi.object({\n  name: Joi.string().required(),\n  description: Joi.string().optional().allow(''),\n  type: Joi.string().valid(['Service', 'Product']).required(),\n  taxExempt: Joi.boolean(),\n  inventoryStock: Joi.object({\n    unitCost: Joi.number(),\n    quantity: Joi.number(),\n    reOrderLevel: Joi.number(),\n  }).optional().allow({})\n})\n\nconst updateSchema = Joi.object({\n  id: Joi.string().required(),\n  name: Joi.string().required(),\n  description: Joi.string().optional().allow(''),\n  type: Joi.string().valid(['Service', 'Product']),\n  taxExempt: Joi.boolean(),\n  inventoryStock: Joi.object({\n    unitCost: Joi.number(),\n    quantity: Joi.number(),\n    reOrderLevel: Joi.number(),\n  }).optional().allow({})\n})\n\nconst deleteSchema = Joi.object({\n  id: Joi.array().items(Joi.string()).required()\n})\n\nconst searchSchema = Joi.object({\n  text: Joi.string().optional().allow(''),\n  page: Joi.optional(),\n  limit: Joi.optional()\n})\n\nexport const getInventories = async (req, res) => {\n  try {\n    const { page, limit } = req.query\n    const data = await _InventoryModel().paginate({ isDelete: false }, { page, limit, populate: [{ path: 'inventoryStock', select: 'unitCost quantity reOrderLevel storeId' }] })\n    return res.json(data)\n  } catch (err) {\n    console.log(err)\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const createInventory = async (req, res) => {\n  try {\n    const validation = Joi.validate(req.body, createSchema)\n    if (validation.error) throw new Error(validation.error)\n    const { body: { name, inventoryStock, ...rest }, storeId } = req;\n\n    const inventory = await _InventoryModel().findOne({ name: { $regex: new RegExp(name), $options: 'i' }, isDelete: false })\n    if (inventory) {\n      throw new Error(ERRORS.RESOURCE_ALREADY_EXISTS)\n    }\n    let stock = {}\n    let inventoryData = {\n      name,\n      ...rest,\n    }\n\n    if (rest.type === 'Product') {\n      stock = await _InventoryStockModel().create({ storeId, ...inventoryStock })\n      inventoryData.inventoryStock = stock._id\n    }\n\n    const data = await _InventoryModel().create(inventoryData)\n    return res.json({ data })\n  } catch (err) {\n    console.log(err)\n    if (err.message === ERRORS.RESOURCE_ALREADY_EXISTS) return res.status(409).json({ error: true, reason: err.message })\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const updateInventory = async (req, res) => {\n  try {\n    const validation = Joi.validate(req.body, updateSchema)\n    if (validation.error) throw new Error(validation.error)\n    const { id: _id, inventoryStock, ...rest } = req.body\n    if (rest.name) {\n      const inventory = await _InventoryModel().findOne({ name: { $regex: new RegExp(rest.name), $options: 'i' }, isDelete: false })\n      if (inventory && !inventory._id.equals(_id)) {\n        throw new Error(ERRORS.RESOURCE_ALREADY_EXISTS)\n      }\n    }\n    const data = await _InventoryModel().findOneAndUpdate({ _id, isDelete: false }, { $set: flatten(rest) }, { new: true })\n    const stock = await _InventoryStockModel().findOneAndUpdate({ _id: data.inventoryStock }, { $set: flatten(inventoryStock) }, { new: true })\n    data.inventoryStock = stock\n    return res.json({ data })\n  } catch (err) {\n    console.log(err)\n    if (err.message === ERRORS.RESOURCE_ALREADY_EXISTS) return res.status(409).json({ error: true, reason: err.message })\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const deleteInventories = async (req, res) => {\n  try {\n    const validation = Joi.validate(req.body, deleteSchema)\n    if (validation.error) throw new Error(validation.error)\n\n    const { id: _id } = req.body\n    await _InventoryModel().updateMany({ _id: { $in: _id } }, { $set: { isDelete: true } })\n    return res.json({ data: {} })\n  } catch (err) {\n    console.log(err)\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const searchInventory = async (req, res) => {\n  try {\n    const validation = Joi.validate(req.query, searchSchema)\n    if (validation.error) throw new Error(validation.error)\n\n    const { text = '' } = req.query\n    if (!text) return res.json({ data: [] })\n\n    const nameStr = text.split(' ').join('|')\n    const nameRegex = new RegExp(`${nameStr}`)\n\n    const data = await _InventoryModel().find({ isDelete: false, name: { $regex: nameRegex, $options: 'i' } }).populate([{ path: 'inventoryStock', select: 'unitCost quantity reOrderLevel storeId' }])\n    return res.json(data)\n  } catch (err) {\n    console.log(err)\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1574924198759
  },
  "{\"sourceRoot\":\"/app/src/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/models/inventory.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/models/inventory.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/models/inventory.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/models/inventory.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/models",
        "sourceFileName": "inventory.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongoose = require(\"mongoose\");\n\nvar _multiTenant = require(\"../lib/multiTenant\");\n\nvar inventorySchema = new _mongoose.Schema({\n  name: {\n    type: String,\n    required: true\n  },\n  description: String,\n  type: {\n    type: String,\n    \"enum\": ['Service', 'Product'],\n    \"default\": 'Service'\n  },\n  inventoryStock: {\n    type: _mongoose.Schema.Types.ObjectId,\n    ref: 'InventoryStock'\n  },\n  taxExempt: {\n    type: Boolean,\n    \"default\": false\n  },\n  isDelete: {\n    type: Boolean,\n    \"default\": false\n  }\n}, {\n  timestamps: true,\n  skipVersioning: true\n});\n\nvar _default = (0, _multiTenant.tenantModel)('Inventory', inventorySchema);\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImludmVudG9yeS5qcyJdLCJuYW1lcyI6WyJpbnZlbnRvcnlTY2hlbWEiLCJTY2hlbWEiLCJuYW1lIiwidHlwZSIsIlN0cmluZyIsInJlcXVpcmVkIiwiZGVzY3JpcHRpb24iLCJpbnZlbnRvcnlTdG9jayIsIlR5cGVzIiwiT2JqZWN0SWQiLCJyZWYiLCJ0YXhFeGVtcHQiLCJCb29sZWFuIiwiaXNEZWxldGUiLCJ0aW1lc3RhbXBzIiwic2tpcFZlcnNpb25pbmciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFFQSxJQUFNQSxlQUFlLEdBQUcsSUFBSUMsZ0JBQUosQ0FBVztBQUNqQ0MsRUFBQUEsSUFBSSxFQUFFO0FBQ0pDLElBQUFBLElBQUksRUFBRUMsTUFERjtBQUVKQyxJQUFBQSxRQUFRLEVBQUU7QUFGTixHQUQyQjtBQUtqQ0MsRUFBQUEsV0FBVyxFQUFFRixNQUxvQjtBQU1qQ0QsRUFBQUEsSUFBSSxFQUFFO0FBQ0pBLElBQUFBLElBQUksRUFBRUMsTUFERjtBQUVKLFlBQU0sQ0FBQyxTQUFELEVBQVksU0FBWixDQUZGO0FBR0osZUFBUztBQUhMLEdBTjJCO0FBV2pDRyxFQUFBQSxjQUFjLEVBQUU7QUFDZEosSUFBQUEsSUFBSSxFQUFFRixpQkFBT08sS0FBUCxDQUFhQyxRQURMO0FBRWRDLElBQUFBLEdBQUcsRUFBRTtBQUZTLEdBWGlCO0FBZWpDQyxFQUFBQSxTQUFTLEVBQUU7QUFDVFIsSUFBQUEsSUFBSSxFQUFFUyxPQURHO0FBRVQsZUFBUztBQUZBLEdBZnNCO0FBbUJqQ0MsRUFBQUEsUUFBUSxFQUFFO0FBQ1JWLElBQUFBLElBQUksRUFBRVMsT0FERTtBQUVSLGVBQVM7QUFGRDtBQW5CdUIsQ0FBWCxFQXVCckI7QUFBRUUsRUFBQUEsVUFBVSxFQUFFLElBQWQ7QUFBb0JDLEVBQUFBLGNBQWMsRUFBRTtBQUFwQyxDQXZCcUIsQ0FBeEI7O2VBeUJlLDhCQUFZLFdBQVosRUFBeUJmLGVBQXpCLEMiLCJzb3VyY2VSb290IjoiL2FwcC9zcmMvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU2NoZW1hIH0gZnJvbSAnbW9uZ29vc2UnXG5pbXBvcnQgeyB0ZW5hbnRNb2RlbCB9IGZyb20gJy4uL2xpYi9tdWx0aVRlbmFudCdcblxuY29uc3QgaW52ZW50b3J5U2NoZW1hID0gbmV3IFNjaGVtYSh7XG4gIG5hbWU6IHtcbiAgICB0eXBlOiBTdHJpbmcsXG4gICAgcmVxdWlyZWQ6IHRydWVcbiAgfSxcbiAgZGVzY3JpcHRpb246IFN0cmluZyxcbiAgdHlwZToge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgICBlbnVtOiBbJ1NlcnZpY2UnLCAnUHJvZHVjdCddLFxuICAgIGRlZmF1bHQ6ICdTZXJ2aWNlJ1xuICB9LFxuICBpbnZlbnRvcnlTdG9jazoge1xuICAgIHR5cGU6IFNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgICByZWY6ICdJbnZlbnRvcnlTdG9jaycsXG4gIH0sXG4gIHRheEV4ZW1wdDoge1xuICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgZGVmYXVsdDogZmFsc2VcbiAgfSxcbiAgaXNEZWxldGU6IHtcbiAgICB0eXBlOiBCb29sZWFuLFxuICAgIGRlZmF1bHQ6IGZhbHNlXG4gIH1cbn0sIHsgdGltZXN0YW1wczogdHJ1ZSwgc2tpcFZlcnNpb25pbmc6IHRydWUgfSlcblxuZXhwb3J0IGRlZmF1bHQgdGVuYW50TW9kZWwoJ0ludmVudG9yeScsIGludmVudG9yeVNjaGVtYSlcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "inventory.js"
      ],
      "names": [
        "inventorySchema",
        "Schema",
        "name",
        "type",
        "String",
        "required",
        "description",
        "inventoryStock",
        "Types",
        "ObjectId",
        "ref",
        "taxExempt",
        "Boolean",
        "isDelete",
        "timestamps",
        "skipVersioning"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AAEA,IAAMA,eAAe,GAAG,IAAIC,gBAAJ,CAAW;AACjCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAEC,MADF;AAEJC,IAAAA,QAAQ,EAAE;AAFN,GAD2B;AAKjCC,EAAAA,WAAW,EAAEF,MALoB;AAMjCD,EAAAA,IAAI,EAAE;AACJA,IAAAA,IAAI,EAAEC,MADF;AAEJ,YAAM,CAAC,SAAD,EAAY,SAAZ,CAFF;AAGJ,eAAS;AAHL,GAN2B;AAWjCG,EAAAA,cAAc,EAAE;AACdJ,IAAAA,IAAI,EAAEF,iBAAOO,KAAP,CAAaC,QADL;AAEdC,IAAAA,GAAG,EAAE;AAFS,GAXiB;AAejCC,EAAAA,SAAS,EAAE;AACTR,IAAAA,IAAI,EAAES,OADG;AAET,eAAS;AAFA,GAfsB;AAmBjCC,EAAAA,QAAQ,EAAE;AACRV,IAAAA,IAAI,EAAES,OADE;AAER,eAAS;AAFD;AAnBuB,CAAX,EAuBrB;AAAEE,EAAAA,UAAU,EAAE,IAAd;AAAoBC,EAAAA,cAAc,EAAE;AAApC,CAvBqB,CAAxB;;eAyBe,8BAAY,WAAZ,EAAyBf,eAAzB,C",
      "sourceRoot": "/app/src/models",
      "sourcesContent": [
        "import { Schema } from 'mongoose'\nimport { tenantModel } from '../lib/multiTenant'\n\nconst inventorySchema = new Schema({\n  name: {\n    type: String,\n    required: true\n  },\n  description: String,\n  type: {\n    type: String,\n    enum: ['Service', 'Product'],\n    default: 'Service'\n  },\n  inventoryStock: {\n    type: Schema.Types.ObjectId,\n    ref: 'InventoryStock',\n  },\n  taxExempt: {\n    type: Boolean,\n    default: false\n  },\n  isDelete: {\n    type: Boolean,\n    default: false\n  }\n}, { timestamps: true, skipVersioning: true })\n\nexport default tenantModel('Inventory', inventorySchema)\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573021617943
  },
  "{\"sourceRoot\":\"/app/src/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/models/inventoryStock.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/models/inventoryStock.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/models/inventoryStock.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/models/inventoryStock.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/models",
        "sourceFileName": "inventoryStock.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongoose = require(\"mongoose\");\n\nvar _multiTenant = require(\"../lib/multiTenant\");\n\nvar inventoryStockSchema = new _mongoose.Schema({\n  storeId: {\n    type: _mongoose.Schema.Types.ObjectId,\n    ref: 'Store',\n    required: true\n  },\n  unitCost: {\n    type: Number,\n    \"default\": 0\n  },\n  quantity: {\n    type: Number,\n    \"default\": 0\n  },\n  reOrderLevel: {\n    type: Number,\n    \"default\": 0\n  }\n}, {\n  timestamps: true,\n  skipVersioning: true\n});\n\nvar _default = (0, _multiTenant.tenantModel)('InventoryStock', inventoryStockSchema);\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImludmVudG9yeVN0b2NrLmpzIl0sIm5hbWVzIjpbImludmVudG9yeVN0b2NrU2NoZW1hIiwiU2NoZW1hIiwic3RvcmVJZCIsInR5cGUiLCJUeXBlcyIsIk9iamVjdElkIiwicmVmIiwicmVxdWlyZWQiLCJ1bml0Q29zdCIsIk51bWJlciIsInF1YW50aXR5IiwicmVPcmRlckxldmVsIiwidGltZXN0YW1wcyIsInNraXBWZXJzaW9uaW5nIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBRUEsSUFBTUEsb0JBQW9CLEdBQUcsSUFBSUMsZ0JBQUosQ0FBVztBQUN0Q0MsRUFBQUEsT0FBTyxFQUFFO0FBQ1BDLElBQUFBLElBQUksRUFBRUYsaUJBQU9HLEtBQVAsQ0FBYUMsUUFEWjtBQUVQQyxJQUFBQSxHQUFHLEVBQUUsT0FGRTtBQUdQQyxJQUFBQSxRQUFRLEVBQUU7QUFISCxHQUQ2QjtBQU10Q0MsRUFBQUEsUUFBUSxFQUFFO0FBQ1JMLElBQUFBLElBQUksRUFBRU0sTUFERTtBQUVSLGVBQVM7QUFGRCxHQU40QjtBQVV0Q0MsRUFBQUEsUUFBUSxFQUFFO0FBQ1JQLElBQUFBLElBQUksRUFBRU0sTUFERTtBQUVSLGVBQVM7QUFGRCxHQVY0QjtBQWN0Q0UsRUFBQUEsWUFBWSxFQUFFO0FBQ1pSLElBQUFBLElBQUksRUFBRU0sTUFETTtBQUVaLGVBQVM7QUFGRztBQWR3QixDQUFYLEVBa0IxQjtBQUFFRyxFQUFBQSxVQUFVLEVBQUUsSUFBZDtBQUFvQkMsRUFBQUEsY0FBYyxFQUFFO0FBQXBDLENBbEIwQixDQUE3Qjs7ZUFvQmUsOEJBQVksZ0JBQVosRUFBOEJiLG9CQUE5QixDIiwic291cmNlUm9vdCI6Ii9hcHAvc3JjL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNjaGVtYSB9IGZyb20gJ21vbmdvb3NlJ1xuaW1wb3J0IHsgdGVuYW50TW9kZWwgfSBmcm9tICcuLi9saWIvbXVsdGlUZW5hbnQnXG5cbmNvbnN0IGludmVudG9yeVN0b2NrU2NoZW1hID0gbmV3IFNjaGVtYSh7XG4gIHN0b3JlSWQ6IHtcbiAgICB0eXBlOiBTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG4gICAgcmVmOiAnU3RvcmUnLFxuICAgIHJlcXVpcmVkOiB0cnVlXG4gIH0sXG4gIHVuaXRDb3N0OiB7XG4gICAgdHlwZTogTnVtYmVyLFxuICAgIGRlZmF1bHQ6IDBcbiAgfSxcbiAgcXVhbnRpdHk6IHtcbiAgICB0eXBlOiBOdW1iZXIsXG4gICAgZGVmYXVsdDogMFxuICB9LFxuICByZU9yZGVyTGV2ZWw6IHtcbiAgICB0eXBlOiBOdW1iZXIsXG4gICAgZGVmYXVsdDogMFxuICB9XG59LCB7IHRpbWVzdGFtcHM6IHRydWUsIHNraXBWZXJzaW9uaW5nOiB0cnVlIH0pXG5cbmV4cG9ydCBkZWZhdWx0IHRlbmFudE1vZGVsKCdJbnZlbnRvcnlTdG9jaycsIGludmVudG9yeVN0b2NrU2NoZW1hKVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "inventoryStock.js"
      ],
      "names": [
        "inventoryStockSchema",
        "Schema",
        "storeId",
        "type",
        "Types",
        "ObjectId",
        "ref",
        "required",
        "unitCost",
        "Number",
        "quantity",
        "reOrderLevel",
        "timestamps",
        "skipVersioning"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AAEA,IAAMA,oBAAoB,GAAG,IAAIC,gBAAJ,CAAW;AACtCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAEF,iBAAOG,KAAP,CAAaC,QADZ;AAEPC,IAAAA,GAAG,EAAE,OAFE;AAGPC,IAAAA,QAAQ,EAAE;AAHH,GAD6B;AAMtCC,EAAAA,QAAQ,EAAE;AACRL,IAAAA,IAAI,EAAEM,MADE;AAER,eAAS;AAFD,GAN4B;AAUtCC,EAAAA,QAAQ,EAAE;AACRP,IAAAA,IAAI,EAAEM,MADE;AAER,eAAS;AAFD,GAV4B;AActCE,EAAAA,YAAY,EAAE;AACZR,IAAAA,IAAI,EAAEM,MADM;AAEZ,eAAS;AAFG;AAdwB,CAAX,EAkB1B;AAAEG,EAAAA,UAAU,EAAE,IAAd;AAAoBC,EAAAA,cAAc,EAAE;AAApC,CAlB0B,CAA7B;;eAoBe,8BAAY,gBAAZ,EAA8Bb,oBAA9B,C",
      "sourceRoot": "/app/src/models",
      "sourcesContent": [
        "import { Schema } from 'mongoose'\nimport { tenantModel } from '../lib/multiTenant'\n\nconst inventoryStockSchema = new Schema({\n  storeId: {\n    type: Schema.Types.ObjectId,\n    ref: 'Store',\n    required: true\n  },\n  unitCost: {\n    type: Number,\n    default: 0\n  },\n  quantity: {\n    type: Number,\n    default: 0\n  },\n  reOrderLevel: {\n    type: Number,\n    default: 0\n  }\n}, { timestamps: true, skipVersioning: true })\n\nexport default tenantModel('InventoryStock', inventoryStockSchema)\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573021617943
  },
  "{\"sourceRoot\":\"/app/src/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/routes/clients.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/routes/clients.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/routes/clients.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/routes/clients.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/routes",
        "sourceFileName": "clients.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _client = require(\"../controllers/client\");\n\nvar router = (0, _express.Router)();\nrouter.get('/', _client.getClients);\nrouter.post('/create', _client.createClient);\nrouter.post('/delete', _client.deleteClient);\nrouter.post('/update', _client.updateClient);\nrouter.get('/search', _client.searchClients);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsaWVudHMuanMiXSwibmFtZXMiOlsicm91dGVyIiwiZ2V0IiwiZ2V0Q2xpZW50cyIsInBvc3QiLCJjcmVhdGVDbGllbnQiLCJkZWxldGVDbGllbnQiLCJ1cGRhdGVDbGllbnQiLCJzZWFyY2hDbGllbnRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBRUE7O0FBQ0EsSUFBTUEsTUFBTSxHQUFHLHNCQUFmO0FBRUFBLE1BQU0sQ0FBQ0MsR0FBUCxDQUFXLEdBQVgsRUFBZ0JDLGtCQUFoQjtBQUNBRixNQUFNLENBQUNHLElBQVAsQ0FBWSxTQUFaLEVBQXVCQyxvQkFBdkI7QUFDQUosTUFBTSxDQUFDRyxJQUFQLENBQVksU0FBWixFQUF1QkUsb0JBQXZCO0FBQ0FMLE1BQU0sQ0FBQ0csSUFBUCxDQUFZLFNBQVosRUFBdUJHLG9CQUF2QjtBQUNBTixNQUFNLENBQUNDLEdBQVAsQ0FBVyxTQUFYLEVBQXNCTSxxQkFBdEI7ZUFHZVAsTSIsInNvdXJjZVJvb3QiOiIvYXBwL3NyYy9yb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSb3V0ZXIgfSBmcm9tICdleHByZXNzJ1xuXG5pbXBvcnQgeyBnZXRDbGllbnRzLCBjcmVhdGVDbGllbnQsIHVwZGF0ZUNsaWVudCwgZGVsZXRlQ2xpZW50LCBzZWFyY2hDbGllbnRzIH0gZnJvbSAnLi4vY29udHJvbGxlcnMvY2xpZW50J1xuY29uc3Qgcm91dGVyID0gUm91dGVyKClcblxucm91dGVyLmdldCgnLycsIGdldENsaWVudHMpXG5yb3V0ZXIucG9zdCgnL2NyZWF0ZScsIGNyZWF0ZUNsaWVudClcbnJvdXRlci5wb3N0KCcvZGVsZXRlJywgZGVsZXRlQ2xpZW50KVxucm91dGVyLnBvc3QoJy91cGRhdGUnLCB1cGRhdGVDbGllbnQpXG5yb3V0ZXIuZ2V0KCcvc2VhcmNoJywgc2VhcmNoQ2xpZW50cylcblxuXG5leHBvcnQgZGVmYXVsdCByb3V0ZXJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "clients.js"
      ],
      "names": [
        "router",
        "get",
        "getClients",
        "post",
        "createClient",
        "deleteClient",
        "updateClient",
        "searchClients"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA;;AACA,IAAMA,MAAM,GAAG,sBAAf;AAEAA,MAAM,CAACC,GAAP,CAAW,GAAX,EAAgBC,kBAAhB;AACAF,MAAM,CAACG,IAAP,CAAY,SAAZ,EAAuBC,oBAAvB;AACAJ,MAAM,CAACG,IAAP,CAAY,SAAZ,EAAuBE,oBAAvB;AACAL,MAAM,CAACG,IAAP,CAAY,SAAZ,EAAuBG,oBAAvB;AACAN,MAAM,CAACC,GAAP,CAAW,SAAX,EAAsBM,qBAAtB;eAGeP,M",
      "sourceRoot": "/app/src/routes",
      "sourcesContent": [
        "import { Router } from 'express'\n\nimport { getClients, createClient, updateClient, deleteClient, searchClients } from '../controllers/client'\nconst router = Router()\n\nrouter.get('/', getClients)\nrouter.post('/create', createClient)\nrouter.post('/delete', deleteClient)\nrouter.post('/update', updateClient)\nrouter.get('/search', searchClients)\n\n\nexport default router\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1574924198763
  },
  "{\"sourceRoot\":\"/app/src/controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/controllers/client.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/controllers/client.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/controllers/client.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/controllers/client.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/controllers",
        "sourceFileName": "client.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deleteClient = exports.updateClient = exports.createClient = exports.searchClients = exports.getClients = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _client = _interopRequireDefault(require(\"../models/client\"));\n\nvar _errors = _interopRequireDefault(require(\"../constants/errors\"));\n\nvar _joi = _interopRequireDefault(require(\"@hapi/joi\"));\n\nvar _flat = require(\"flat\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar createSchema = _joi[\"default\"].object({\n  title: _joi[\"default\"].string().optional().allow(''),\n  firstName: _joi[\"default\"].string().required(),\n  lastName: _joi[\"default\"].string().required(),\n  company: _joi[\"default\"].string().optional().allow(''),\n  email: _joi[\"default\"].string().optional().allow(''),\n  homePhone: _joi[\"default\"].array().items(_joi[\"default\"].string().optional().allow('')).optional().allow([]),\n  workPhone: _joi[\"default\"].array().items(_joi[\"default\"].string().optional().allow('')).optional().allow([]),\n  mobile: _joi[\"default\"].array().items(_joi[\"default\"].string().optional().allow('')).optional().allow([]),\n  propertyDetails: _joi[\"default\"].object({\n    street1: _joi[\"default\"].string().optional().allow(''),\n    street2: _joi[\"default\"].string().optional().allow(''),\n    city: _joi[\"default\"].string().optional().allow(''),\n    state: _joi[\"default\"].string().optional().allow(''),\n    zipCode: _joi[\"default\"].string().optional().allow(''),\n    country: _joi[\"default\"].string().optional().allow(''),\n    additional: _joi[\"default\"].object().optional()\n  }).optional().allow({}),\n  billingAddress: _joi[\"default\"].object({\n    street1: _joi[\"default\"].string().optional().allow(''),\n    street2: _joi[\"default\"].string().optional().allow(''),\n    city: _joi[\"default\"].string().optional().allow(''),\n    state: _joi[\"default\"].string().optional().allow(''),\n    zipCode: _joi[\"default\"].string().optional().allow(''),\n    country: _joi[\"default\"].string().optional().allow(''),\n    additional: _joi[\"default\"].object().optional()\n  }).optional().allow({}),\n  billingAndPropertyAddressSame: _joi[\"default\"][\"boolean\"](),\n  companyNameAsPrimary: _joi[\"default\"][\"boolean\"]().optional(),\n  tax: _joi[\"default\"].string().optional().allow('')\n});\n\nvar updateSchema = _joi[\"default\"].object({\n  id: _joi[\"default\"].string().required(),\n  title: _joi[\"default\"].string().optional().allow(''),\n  firstName: _joi[\"default\"].string(),\n  lastName: _joi[\"default\"].string(),\n  company: _joi[\"default\"].string().optional().allow(''),\n  email: _joi[\"default\"].string().optional().allow(''),\n  homePhone: _joi[\"default\"].array().items(_joi[\"default\"].string().optional().allow('')).optional().allow([]),\n  workPhone: _joi[\"default\"].array().items(_joi[\"default\"].string().optional().allow('')).optional().allow([]),\n  mobile: _joi[\"default\"].array().items(_joi[\"default\"].string().optional().allow('')).optional().allow([]),\n  propertyDetails: _joi[\"default\"].object({\n    street1: _joi[\"default\"].string().optional().allow(''),\n    street2: _joi[\"default\"].string().optional().allow(''),\n    city: _joi[\"default\"].string().optional().allow(''),\n    state: _joi[\"default\"].string().optional().allow(''),\n    zipCode: _joi[\"default\"].string().optional().allow(''),\n    country: _joi[\"default\"].string().optional().allow(''),\n    additional: _joi[\"default\"].object().optional()\n  }).optional().allow({}),\n  billingAddress: _joi[\"default\"].object({\n    street1: _joi[\"default\"].string().optional().allow(''),\n    street2: _joi[\"default\"].string().optional().allow(''),\n    city: _joi[\"default\"].string().optional().allow(''),\n    state: _joi[\"default\"].string().optional().allow(''),\n    zipCode: _joi[\"default\"].string().optional().allow(''),\n    country: _joi[\"default\"].string().optional().allow(''),\n    additional: _joi[\"default\"].object().optional()\n  }).optional().allow({}),\n  billingAndPropertyAddressSame: _joi[\"default\"][\"boolean\"](),\n  companyNameAsPrimary: _joi[\"default\"][\"boolean\"]().optional(),\n  tax: _joi[\"default\"].string().optional().allow('')\n});\n\nvar deleteSchema = _joi[\"default\"].object({\n  id: _joi[\"default\"].array().items(_joi[\"default\"].string()).required()\n});\n\nvar getClients = function getClients(req, res) {\n  var _req$query, page, limit, data;\n\n  return _regenerator[\"default\"].async(function getClients$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _req$query = req.query, page = _req$query.page, limit = _req$query.limit;\n          _context.next = 4;\n          return _regenerator[\"default\"].awrap((0, _client[\"default\"])().paginate({\n            isDelete: false\n          }, {\n            page: page,\n            limit: limit,\n            populate: 'tax'\n          }));\n\n        case 4:\n          data = _context.sent;\n          return _context.abrupt(\"return\", res.json(data));\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n          return _context.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context.t0.message\n          }));\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 8]]);\n};\n\nexports.getClients = getClients;\n\nvar searchClients = function searchClients(req, res) {\n  var _req$query2, page, limit, _req$query2$text, text, searchRE, data;\n\n  return _regenerator[\"default\"].async(function searchClients$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _req$query2 = req.query, page = _req$query2.page, limit = _req$query2.limit, _req$query2$text = _req$query2.text, text = _req$query2$text === void 0 ? '' : _req$query2$text;\n\n          if (text) {\n            _context2.next = 4;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", res.json({\n            data: []\n          }));\n\n        case 4:\n          searchRE = new RegExp(\".*\".concat(text, \".*\"));\n          _context2.next = 7;\n          return _regenerator[\"default\"].awrap((0, _client[\"default\"])().find({\n            $or: [{\n              firstName: {\n                $regex: searchRE,\n                $options: 'i'\n              }\n            }, {\n              lastName: {\n                $regex: searchRE,\n                $options: 'i'\n              }\n            }, {\n              email: {\n                $regex: searchRE,\n                $options: 'i'\n              }\n            }, {\n              mobile: {\n                $elemMatch: {\n                  $regex: searchRE,\n                  $options: 'i'\n                }\n              }\n            }],\n            isDelete: false\n          }));\n\n        case 7:\n          data = _context2.sent;\n          return _context2.abrupt(\"return\", res.json({\n            data: data\n          }));\n\n        case 11:\n          _context2.prev = 11;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0);\n          return _context2.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context2.t0.message\n          }));\n\n        case 15:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 11]]);\n};\n\nexports.searchClients = searchClients;\n\nvar createClient = function createClient(req, res) {\n  var validation, _req$body, name, rest, vendor, data;\n\n  return _regenerator[\"default\"].async(function createClient$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          validation = _joi[\"default\"].validate(req.body, createSchema);\n\n          if (!validation.error) {\n            _context3.next = 4;\n            break;\n          }\n\n          throw new Error(validation.error);\n\n        case 4:\n          _req$body = req.body, name = _req$body.name, rest = (0, _objectWithoutProperties2[\"default\"])(_req$body, [\"name\"]);\n          _context3.next = 7;\n          return _regenerator[\"default\"].awrap((0, _client[\"default\"])().findOne({\n            name: {\n              $regex: new RegExp(name),\n              $options: 'i'\n            },\n            isDelete: false\n          }));\n\n        case 7:\n          vendor = _context3.sent;\n\n          if (!vendor) {\n            _context3.next = 10;\n            break;\n          }\n\n          throw new Error(_errors[\"default\"].RESOURCE_ALREADY_EXISTS);\n\n        case 10:\n          _context3.next = 12;\n          return _regenerator[\"default\"].awrap((0, _client[\"default\"])().create(_objectSpread({\n            name: name\n          }, rest)));\n\n        case 12:\n          data = _context3.sent;\n          return _context3.abrupt(\"return\", res.json({\n            data: data\n          }));\n\n        case 16:\n          _context3.prev = 16;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(_context3.t0);\n\n          if (!(_context3.t0.message === _errors[\"default\"].RESOURCE_ALREADY_EXISTS)) {\n            _context3.next = 21;\n            break;\n          }\n\n          return _context3.abrupt(\"return\", res.status(409).json({\n            error: true,\n            reason: _context3.t0.message\n          }));\n\n        case 21:\n          return _context3.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context3.t0.message\n          }));\n\n        case 22:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 16]]);\n};\n\nexports.createClient = createClient;\n\nvar updateClient = function updateClient(req, res) {\n  var validation, _req$body2, _id, rest, existingVendor, data;\n\n  return _regenerator[\"default\"].async(function updateClient$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          validation = _joi[\"default\"].validate(req.body, updateSchema);\n\n          if (!validation.error) {\n            _context4.next = 4;\n            break;\n          }\n\n          throw new Error(validation.error);\n\n        case 4:\n          _req$body2 = req.body, _id = _req$body2.id, rest = (0, _objectWithoutProperties2[\"default\"])(_req$body2, [\"id\"]);\n\n          if (!rest.name) {\n            _context4.next = 11;\n            break;\n          }\n\n          _context4.next = 8;\n          return _regenerator[\"default\"].awrap((0, _client[\"default\"])().findOne({\n            name: {\n              $regex: new RegExp(rest.name),\n              $options: 'i'\n            },\n            isDelete: false\n          }));\n\n        case 8:\n          existingVendor = _context4.sent;\n\n          if (!(existingVendor && !existingVendor._id.equals(_id))) {\n            _context4.next = 11;\n            break;\n          }\n\n          throw new Error(_errors[\"default\"].RESOURCE_ALREADY_EXISTS);\n\n        case 11:\n          _context4.next = 13;\n          return _regenerator[\"default\"].awrap((0, _client[\"default\"])().findOneAndUpdate({\n            _id: _id,\n            isDelete: false\n          }, {\n            $set: (0, _flat.flatten)(rest)\n          }, {\n            \"new\": true\n          }));\n\n        case 13:\n          data = _context4.sent;\n          return _context4.abrupt(\"return\", res.json({\n            data: data\n          }));\n\n        case 17:\n          _context4.prev = 17;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.log(_context4.t0);\n\n          if (!(_context4.t0.message === _errors[\"default\"].RESOURCE_ALREADY_EXISTS)) {\n            _context4.next = 22;\n            break;\n          }\n\n          return _context4.abrupt(\"return\", res.status(409).json({\n            error: true,\n            reason: _context4.t0.message\n          }));\n\n        case 22:\n          return _context4.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context4.t0.message\n          }));\n\n        case 23:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, [[0, 17]]);\n};\n\nexports.updateClient = updateClient;\n\nvar deleteClient = function deleteClient(req, res) {\n  var validation, _id;\n\n  return _regenerator[\"default\"].async(function deleteClient$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          validation = _joi[\"default\"].validate(req.body, deleteSchema);\n\n          if (!validation.error) {\n            _context5.next = 4;\n            break;\n          }\n\n          throw new Error(validation.error);\n\n        case 4:\n          _id = req.body.id;\n          _context5.next = 7;\n          return _regenerator[\"default\"].awrap((0, _client[\"default\"])().updateMany({\n            _id: {\n              $in: _id\n            }\n          }, {\n            $set: {\n              isDelete: true\n            }\n          }));\n\n        case 7:\n          return _context5.abrupt(\"return\", res.json({\n            data: {}\n          }));\n\n        case 10:\n          _context5.prev = 10;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.log(_context5.t0);\n          return _context5.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context5.t0.message\n          }));\n\n        case 14:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, [[0, 10]]);\n};\n\nexports.deleteClient = deleteClient;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "client.js"
      ],
      "names": [
        "createSchema",
        "Joi",
        "object",
        "title",
        "string",
        "optional",
        "allow",
        "firstName",
        "required",
        "lastName",
        "company",
        "email",
        "homePhone",
        "array",
        "items",
        "workPhone",
        "mobile",
        "propertyDetails",
        "street1",
        "street2",
        "city",
        "state",
        "zipCode",
        "country",
        "additional",
        "billingAddress",
        "billingAndPropertyAddressSame",
        "companyNameAsPrimary",
        "tax",
        "updateSchema",
        "id",
        "deleteSchema",
        "getClients",
        "req",
        "res",
        "query",
        "page",
        "limit",
        "paginate",
        "isDelete",
        "populate",
        "data",
        "json",
        "console",
        "log",
        "status",
        "error",
        "reason",
        "message",
        "searchClients",
        "text",
        "searchRE",
        "RegExp",
        "find",
        "$or",
        "$regex",
        "$options",
        "$elemMatch",
        "createClient",
        "validation",
        "validate",
        "body",
        "Error",
        "name",
        "rest",
        "findOne",
        "vendor",
        "ERRORS",
        "RESOURCE_ALREADY_EXISTS",
        "create",
        "updateClient",
        "_id",
        "existingVendor",
        "equals",
        "findOneAndUpdate",
        "$set",
        "deleteClient",
        "updateMany",
        "$in"
      ],
      "mappings": ";;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;AAEA,IAAMA,YAAY,GAAGC,gBAAIC,MAAJ,CAAW;AAC9BC,EAAAA,KAAK,EAAEF,gBAAIG,MAAJ,GAAaC,QAAb,GAAwBC,KAAxB,CAA8B,EAA9B,CADuB;AAE9BC,EAAAA,SAAS,EAAEN,gBAAIG,MAAJ,GAAaI,QAAb,EAFmB;AAG9BC,EAAAA,QAAQ,EAAER,gBAAIG,MAAJ,GAAaI,QAAb,EAHoB;AAI9BE,EAAAA,OAAO,EAAET,gBAAIG,MAAJ,GAAaC,QAAb,GAAwBC,KAAxB,CAA8B,EAA9B,CAJqB;AAK9BK,EAAAA,KAAK,EAAEV,gBAAIG,MAAJ,GAAaC,QAAb,GAAwBC,KAAxB,CAA8B,EAA9B,CALuB;AAM9BM,EAAAA,SAAS,EAAEX,gBAAIY,KAAJ,GAAYC,KAAZ,CAAkBb,gBAAIG,MAAJ,GAAaC,QAAb,GAAwBC,KAAxB,CAA8B,EAA9B,CAAlB,EAAqDD,QAArD,GAAgEC,KAAhE,CAAsE,EAAtE,CANmB;AAO9BS,EAAAA,SAAS,EAAEd,gBAAIY,KAAJ,GAAYC,KAAZ,CAAkBb,gBAAIG,MAAJ,GAAaC,QAAb,GAAwBC,KAAxB,CAA8B,EAA9B,CAAlB,EAAqDD,QAArD,GAAgEC,KAAhE,CAAsE,EAAtE,CAPmB;AAQ9BU,EAAAA,MAAM,EAAEf,gBAAIY,KAAJ,GAAYC,KAAZ,CAAkBb,gBAAIG,MAAJ,GAAaC,QAAb,GAAwBC,KAAxB,CAA8B,EAA9B,CAAlB,EAAqDD,QAArD,GAAgEC,KAAhE,CAAsE,EAAtE,CARsB;AAS9BW,EAAAA,eAAe,EAAEhB,gBAAIC,MAAJ,CAAW;AAC1BgB,IAAAA,OAAO,EAAEjB,gBAAIG,MAAJ,GAAaC,QAAb,GAAwBC,KAAxB,CAA8B,EAA9B,CADiB;AAE1Ba,IAAAA,OAAO,EAAElB,gBAAIG,MAAJ,GAAaC,QAAb,GAAwBC,KAAxB,CAA8B,EAA9B,CAFiB;AAG1Bc,IAAAA,IAAI,EAAEnB,gBAAIG,MAAJ,GAAaC,QAAb,GAAwBC,KAAxB,CAA8B,EAA9B,CAHoB;AAI1Be,IAAAA,KAAK,EAAEpB,gBAAIG,MAAJ,GAAaC,QAAb,GAAwBC,KAAxB,CAA8B,EAA9B,CAJmB;AAK1BgB,IAAAA,OAAO,EAAErB,gBAAIG,MAAJ,GAAaC,QAAb,GAAwBC,KAAxB,CAA8B,EAA9B,CALiB;AAM1BiB,IAAAA,OAAO,EAAEtB,gBAAIG,MAAJ,GAAaC,QAAb,GAAwBC,KAAxB,CAA8B,EAA9B,CANiB;AAO1BkB,IAAAA,UAAU,EAAEvB,gBAAIC,MAAJ,GAAaG,QAAb;AAPc,GAAX,EAQdA,QARc,GAQHC,KARG,CAQG,EARH,CATa;AAkB9BmB,EAAAA,cAAc,EAAExB,gBAAIC,MAAJ,CAAW;AACzBgB,IAAAA,OAAO,EAAEjB,gBAAIG,MAAJ,GAAaC,QAAb,GAAwBC,KAAxB,CAA8B,EAA9B,CADgB;AAEzBa,IAAAA,OAAO,EAAElB,gBAAIG,MAAJ,GAAaC,QAAb,GAAwBC,KAAxB,CAA8B,EAA9B,CAFgB;AAGzBc,IAAAA,IAAI,EAAEnB,gBAAIG,MAAJ,GAAaC,QAAb,GAAwBC,KAAxB,CAA8B,EAA9B,CAHmB;AAIzBe,IAAAA,KAAK,EAAEpB,gBAAIG,MAAJ,GAAaC,QAAb,GAAwBC,KAAxB,CAA8B,EAA9B,CAJkB;AAKzBgB,IAAAA,OAAO,EAAErB,gBAAIG,MAAJ,GAAaC,QAAb,GAAwBC,KAAxB,CAA8B,EAA9B,CALgB;AAMzBiB,IAAAA,OAAO,EAAEtB,gBAAIG,MAAJ,GAAaC,QAAb,GAAwBC,KAAxB,CAA8B,EAA9B,CANgB;AAOzBkB,IAAAA,UAAU,EAAEvB,gBAAIC,MAAJ,GAAaG,QAAb;AAPa,GAAX,EAQbA,QARa,GAQFC,KARE,CAQI,EARJ,CAlBc;AA2B9BoB,EAAAA,6BAA6B,EAAEzB,4BA3BD;AA4B9B0B,EAAAA,oBAAoB,EAAE1B,6BAAcI,QAAd,EA5BQ;AA6B9BuB,EAAAA,GAAG,EAAE3B,gBAAIG,MAAJ,GAAaC,QAAb,GAAwBC,KAAxB,CAA8B,EAA9B;AA7ByB,CAAX,CAArB;;AAgCA,IAAMuB,YAAY,GAAG5B,gBAAIC,MAAJ,CAAW;AAC9B4B,EAAAA,EAAE,EAAE7B,gBAAIG,MAAJ,GAAaI,QAAb,EAD0B;AAE9BL,EAAAA,KAAK,EAAEF,gBAAIG,MAAJ,GAAaC,QAAb,GAAwBC,KAAxB,CAA8B,EAA9B,CAFuB;AAG9BC,EAAAA,SAAS,EAAEN,gBAAIG,MAAJ,EAHmB;AAI9BK,EAAAA,QAAQ,EAAER,gBAAIG,MAAJ,EAJoB;AAK9BM,EAAAA,OAAO,EAAET,gBAAIG,MAAJ,GAAaC,QAAb,GAAwBC,KAAxB,CAA8B,EAA9B,CALqB;AAM9BK,EAAAA,KAAK,EAAEV,gBAAIG,MAAJ,GAAaC,QAAb,GAAwBC,KAAxB,CAA8B,EAA9B,CANuB;AAO9BM,EAAAA,SAAS,EAAEX,gBAAIY,KAAJ,GAAYC,KAAZ,CAAkBb,gBAAIG,MAAJ,GAAaC,QAAb,GAAwBC,KAAxB,CAA8B,EAA9B,CAAlB,EAAqDD,QAArD,GAAgEC,KAAhE,CAAsE,EAAtE,CAPmB;AAQ9BS,EAAAA,SAAS,EAAEd,gBAAIY,KAAJ,GAAYC,KAAZ,CAAkBb,gBAAIG,MAAJ,GAAaC,QAAb,GAAwBC,KAAxB,CAA8B,EAA9B,CAAlB,EAAqDD,QAArD,GAAgEC,KAAhE,CAAsE,EAAtE,CARmB;AAS9BU,EAAAA,MAAM,EAAEf,gBAAIY,KAAJ,GAAYC,KAAZ,CAAkBb,gBAAIG,MAAJ,GAAaC,QAAb,GAAwBC,KAAxB,CAA8B,EAA9B,CAAlB,EAAqDD,QAArD,GAAgEC,KAAhE,CAAsE,EAAtE,CATsB;AAU9BW,EAAAA,eAAe,EAAEhB,gBAAIC,MAAJ,CAAW;AAC1BgB,IAAAA,OAAO,EAAEjB,gBAAIG,MAAJ,GAAaC,QAAb,GAAwBC,KAAxB,CAA8B,EAA9B,CADiB;AAE1Ba,IAAAA,OAAO,EAAElB,gBAAIG,MAAJ,GAAaC,QAAb,GAAwBC,KAAxB,CAA8B,EAA9B,CAFiB;AAG1Bc,IAAAA,IAAI,EAAEnB,gBAAIG,MAAJ,GAAaC,QAAb,GAAwBC,KAAxB,CAA8B,EAA9B,CAHoB;AAI1Be,IAAAA,KAAK,EAAEpB,gBAAIG,MAAJ,GAAaC,QAAb,GAAwBC,KAAxB,CAA8B,EAA9B,CAJmB;AAK1BgB,IAAAA,OAAO,EAAErB,gBAAIG,MAAJ,GAAaC,QAAb,GAAwBC,KAAxB,CAA8B,EAA9B,CALiB;AAM1BiB,IAAAA,OAAO,EAAEtB,gBAAIG,MAAJ,GAAaC,QAAb,GAAwBC,KAAxB,CAA8B,EAA9B,CANiB;AAO1BkB,IAAAA,UAAU,EAAEvB,gBAAIC,MAAJ,GAAaG,QAAb;AAPc,GAAX,EAQdA,QARc,GAQHC,KARG,CAQG,EARH,CAVa;AAmB9BmB,EAAAA,cAAc,EAAExB,gBAAIC,MAAJ,CAAW;AACzBgB,IAAAA,OAAO,EAAEjB,gBAAIG,MAAJ,GAAaC,QAAb,GAAwBC,KAAxB,CAA8B,EAA9B,CADgB;AAEzBa,IAAAA,OAAO,EAAElB,gBAAIG,MAAJ,GAAaC,QAAb,GAAwBC,KAAxB,CAA8B,EAA9B,CAFgB;AAGzBc,IAAAA,IAAI,EAAEnB,gBAAIG,MAAJ,GAAaC,QAAb,GAAwBC,KAAxB,CAA8B,EAA9B,CAHmB;AAIzBe,IAAAA,KAAK,EAAEpB,gBAAIG,MAAJ,GAAaC,QAAb,GAAwBC,KAAxB,CAA8B,EAA9B,CAJkB;AAKzBgB,IAAAA,OAAO,EAAErB,gBAAIG,MAAJ,GAAaC,QAAb,GAAwBC,KAAxB,CAA8B,EAA9B,CALgB;AAMzBiB,IAAAA,OAAO,EAAEtB,gBAAIG,MAAJ,GAAaC,QAAb,GAAwBC,KAAxB,CAA8B,EAA9B,CANgB;AAOzBkB,IAAAA,UAAU,EAAEvB,gBAAIC,MAAJ,GAAaG,QAAb;AAPa,GAAX,EAQbA,QARa,GAQFC,KARE,CAQI,EARJ,CAnBc;AA4B9BoB,EAAAA,6BAA6B,EAAEzB,4BA5BD;AA6B9B0B,EAAAA,oBAAoB,EAAE1B,6BAAcI,QAAd,EA7BQ;AA8B9BuB,EAAAA,GAAG,EAAE3B,gBAAIG,MAAJ,GAAaC,QAAb,GAAwBC,KAAxB,CAA8B,EAA9B;AA9ByB,CAAX,CAArB;;AAiCA,IAAMyB,YAAY,GAAG9B,gBAAIC,MAAJ,CAAW;AAC9B4B,EAAAA,EAAE,EAAE7B,gBAAIY,KAAJ,GAAYC,KAAZ,CAAkBb,gBAAIG,MAAJ,EAAlB,EAAgCI,QAAhC;AAD0B,CAAX,CAArB;;AAIO,IAAMwB,UAAU,GAAG,SAAbA,UAAa,CAAOC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEED,GAAG,CAACE,KAFN,EAEdC,IAFc,cAEdA,IAFc,EAERC,KAFQ,cAERA,KAFQ;AAAA;AAAA,+CAGH,0BAAeC,QAAf,CAAwB;AAAEC,YAAAA,QAAQ,EAAE;AAAZ,WAAxB,EAA6C;AAAEH,YAAAA,IAAI,EAAJA,IAAF;AAAQC,YAAAA,KAAK,EAALA,KAAR;AAAeG,YAAAA,QAAQ,EAAE;AAAzB,WAA7C,CAHG;;AAAA;AAGhBC,UAAAA,IAHgB;AAAA,2CAIfP,GAAG,CAACQ,IAAJ,CAASD,IAAT,CAJe;;AAAA;AAAA;AAAA;AAMtBE,UAAAA,OAAO,CAACC,GAAR;AANsB,2CAOfV,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,YAAAA,KAAK,EAAE,IAAT;AAAeC,YAAAA,MAAM,EAAE,YAAIC;AAA3B,WAArB,CAPe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB;;;;AAWA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAOhB,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAEUD,GAAG,CAACE,KAFd,EAEjBC,IAFiB,eAEjBA,IAFiB,EAEXC,KAFW,eAEXA,KAFW,iCAEJa,IAFI,EAEJA,IAFI,iCAEG,EAFH;;AAAA,cAIpBA,IAJoB;AAAA;AAAA;AAAA;;AAAA,4CAIPhB,GAAG,CAACQ,IAAJ,CAAS;AAAED,YAAAA,IAAI,EAAE;AAAR,WAAT,CAJO;;AAAA;AAMnBU,UAAAA,QANmB,GAMR,IAAIC,MAAJ,aAAgBF,IAAhB,QANQ;AAAA;AAAA,+CAON,0BAAeG,IAAf,CAAoB;AACrCC,YAAAA,GAAG,EAAE,CACH;AACE/C,cAAAA,SAAS,EAAE;AAAEgD,gBAAAA,MAAM,EAAEJ,QAAV;AAAoBK,gBAAAA,QAAQ,EAAE;AAA9B;AADb,aADG,EAIH;AACE/C,cAAAA,QAAQ,EAAE;AAAE8C,gBAAAA,MAAM,EAAEJ,QAAV;AAAoBK,gBAAAA,QAAQ,EAAE;AAA9B;AADZ,aAJG,EAOH;AACE7C,cAAAA,KAAK,EAAE;AAAE4C,gBAAAA,MAAM,EAAEJ,QAAV;AAAoBK,gBAAAA,QAAQ,EAAE;AAA9B;AADT,aAPG,EAUH;AACExC,cAAAA,MAAM,EAAE;AAAEyC,gBAAAA,UAAU,EAAE;AAAEF,kBAAAA,MAAM,EAAEJ,QAAV;AAAoBK,kBAAAA,QAAQ,EAAE;AAA9B;AAAd;AADV,aAVG,CADgC;AAerCjB,YAAAA,QAAQ,EAAE;AAf2B,WAApB,CAPM;;AAAA;AAOnBE,UAAAA,IAPmB;AAAA,4CAwBlBP,GAAG,CAACQ,IAAJ,CAAS;AAAED,YAAAA,IAAI,EAAJA;AAAF,WAAT,CAxBkB;;AAAA;AAAA;AAAA;AA0BzBE,UAAAA,OAAO,CAACC,GAAR;AA1ByB,4CA2BlBV,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,YAAAA,KAAK,EAAE,IAAT;AAAeC,YAAAA,MAAM,EAAE,aAAIC;AAA3B,WAArB,CA3BkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB;;;;AA+BA,IAAMU,YAAY,GAAG,SAAfA,YAAe,CAAOzB,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAElByB,UAAAA,UAFkB,GAEL1D,gBAAI2D,QAAJ,CAAa3B,GAAG,CAAC4B,IAAjB,EAAuB7D,YAAvB,CAFK;;AAAA,eAGpB2D,UAAU,CAACb,KAHS;AAAA;AAAA;AAAA;;AAAA,gBAGI,IAAIgB,KAAJ,CAAUH,UAAU,CAACb,KAArB,CAHJ;;AAAA;AAAA,sBAIEb,GAAG,CAAC4B,IAJN,EAIhBE,IAJgB,aAIhBA,IAJgB,EAIPC,IAJO;AAAA;AAAA,+CAKH,0BAAeC,OAAf,CAAuB;AAAEF,YAAAA,IAAI,EAAE;AAAER,cAAAA,MAAM,EAAE,IAAIH,MAAJ,CAAWW,IAAX,CAAV;AAA4BP,cAAAA,QAAQ,EAAE;AAAtC,aAAR;AAAqDjB,YAAAA,QAAQ,EAAE;AAA/D,WAAvB,CALG;;AAAA;AAKlB2B,UAAAA,MALkB;;AAAA,eAMpBA,MANoB;AAAA;AAAA;AAAA;;AAAA,gBAOhB,IAAIJ,KAAJ,CAAUK,mBAAOC,uBAAjB,CAPgB;;AAAA;AAAA;AAAA,+CAUL,0BAAeC,MAAf;AACjBN,YAAAA,IAAI,EAAJA;AADiB,aACRC,IADQ,EAVK;;AAAA;AAUlBvB,UAAAA,IAVkB;AAAA,4CAajBP,GAAG,CAACQ,IAAJ,CAAS;AAAED,YAAAA,IAAI,EAAJA;AAAF,WAAT,CAbiB;;AAAA;AAAA;AAAA;AAexBE,UAAAA,OAAO,CAACC,GAAR;;AAfwB,gBAgBpB,aAAII,OAAJ,KAAgBmB,mBAAOC,uBAhBH;AAAA;AAAA;AAAA;;AAAA,4CAgBmClC,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,YAAAA,KAAK,EAAE,IAAT;AAAeC,YAAAA,MAAM,EAAE,aAAIC;AAA3B,WAArB,CAhBnC;;AAAA;AAAA,4CAiBjBd,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,YAAAA,KAAK,EAAE,IAAT;AAAeC,YAAAA,MAAM,EAAE,aAAIC;AAA3B,WAArB,CAjBiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB;;;;AAqBA,IAAMsB,YAAY,GAAG,SAAfA,YAAe,CAAOrC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAElByB,UAAAA,UAFkB,GAEL1D,gBAAI2D,QAAJ,CAAa3B,GAAG,CAAC4B,IAAjB,EAAuBhC,YAAvB,CAFK;;AAAA,eAGpB8B,UAAU,CAACb,KAHS;AAAA;AAAA;AAAA;;AAAA,gBAGI,IAAIgB,KAAJ,CAAUH,UAAU,CAACb,KAArB,CAHJ;;AAAA;AAAA,uBAIKb,GAAG,CAAC4B,IAJT,EAIZU,GAJY,cAIhBzC,EAJgB,EAIJkC,IAJI;;AAAA,eAKpBA,IAAI,CAACD,IALe;AAAA;AAAA;AAAA;;AAAA;AAAA,+CAMO,0BAAeE,OAAf,CAAuB;AAAEF,YAAAA,IAAI,EAAE;AAAER,cAAAA,MAAM,EAAE,IAAIH,MAAJ,CAAWY,IAAI,CAACD,IAAhB,CAAV;AAAiCP,cAAAA,QAAQ,EAAE;AAA3C,aAAR;AAA0DjB,YAAAA,QAAQ,EAAE;AAApE,WAAvB,CANP;;AAAA;AAMhBiC,UAAAA,cANgB;;AAAA,gBAOlBA,cAAc,IAAI,CAACA,cAAc,CAACD,GAAf,CAAmBE,MAAnB,CAA0BF,GAA1B,CAPD;AAAA;AAAA;AAAA;;AAAA,gBAQd,IAAIT,KAAJ,CAAUK,mBAAOC,uBAAjB,CARc;;AAAA;AAAA;AAAA,+CAYL,0BAAeM,gBAAf,CAAgC;AAAEH,YAAAA,GAAG,EAAHA,GAAF;AAAOhC,YAAAA,QAAQ,EAAE;AAAjB,WAAhC,EAA0D;AAAEoC,YAAAA,IAAI,EAAE,mBAAQX,IAAR;AAAR,WAA1D,EAAmF;AAAE,mBAAK;AAAP,WAAnF,CAZK;;AAAA;AAYlBvB,UAAAA,IAZkB;AAAA,4CAajBP,GAAG,CAACQ,IAAJ,CAAS;AAAED,YAAAA,IAAI,EAAJA;AAAF,WAAT,CAbiB;;AAAA;AAAA;AAAA;AAexBE,UAAAA,OAAO,CAACC,GAAR;;AAfwB,gBAgBpB,aAAII,OAAJ,KAAgBmB,mBAAOC,uBAhBH;AAAA;AAAA;AAAA;;AAAA,4CAgBmClC,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,YAAAA,KAAK,EAAE,IAAT;AAAeC,YAAAA,MAAM,EAAE,aAAIC;AAA3B,WAArB,CAhBnC;;AAAA;AAAA,4CAiBjBd,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,YAAAA,KAAK,EAAE,IAAT;AAAeC,YAAAA,MAAM,EAAE,aAAIC;AAA3B,WAArB,CAjBiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB;;;;AAqBA,IAAM4B,YAAY,GAAG,SAAfA,YAAe,CAAO3C,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAElByB,UAAAA,UAFkB,GAEL1D,gBAAI2D,QAAJ,CAAa3B,GAAG,CAAC4B,IAAjB,EAAuB9B,YAAvB,CAFK;;AAAA,eAGpB4B,UAAU,CAACb,KAHS;AAAA;AAAA;AAAA;;AAAA,gBAGI,IAAIgB,KAAJ,CAAUH,UAAU,CAACb,KAArB,CAHJ;;AAAA;AAKZyB,UAAAA,GALY,GAKJtC,GAAG,CAAC4B,IALA,CAKhB/B,EALgB;AAAA;AAAA,+CAOlB,0BAAe+C,UAAf,CAA0B;AAAEN,YAAAA,GAAG,EAAE;AAAEO,cAAAA,GAAG,EAAEP;AAAP;AAAP,WAA1B,EAAiD;AAAEI,YAAAA,IAAI,EAAE;AAAEpC,cAAAA,QAAQ,EAAE;AAAZ;AAAR,WAAjD,CAPkB;;AAAA;AAAA,4CAQjBL,GAAG,CAACQ,IAAJ,CAAS;AAAED,YAAAA,IAAI,EAAE;AAAR,WAAT,CARiB;;AAAA;AAAA;AAAA;AAUxBE,UAAAA,OAAO,CAACC,GAAR;AAVwB,4CAWjBV,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,YAAAA,KAAK,EAAE,IAAT;AAAeC,YAAAA,MAAM,EAAE,aAAIC;AAA3B,WAArB,CAXiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB",
      "sourceRoot": "/app/src/controllers",
      "sourcesContent": [
        "import _ClientModel from '../models/client'\nimport ERRORS from '../constants/errors'\nimport Joi from '@hapi/joi'\nimport { flatten } from 'flat'\n\nconst createSchema = Joi.object({\n  title: Joi.string().optional().allow(''),\n  firstName: Joi.string().required(),\n  lastName: Joi.string().required(),\n  company: Joi.string().optional().allow(''),\n  email: Joi.string().optional().allow(''),\n  homePhone: Joi.array().items(Joi.string().optional().allow('')).optional().allow([]),\n  workPhone: Joi.array().items(Joi.string().optional().allow('')).optional().allow([]),\n  mobile: Joi.array().items(Joi.string().optional().allow('')).optional().allow([]),\n  propertyDetails: Joi.object({\n    street1: Joi.string().optional().allow(''),\n    street2: Joi.string().optional().allow(''),\n    city: Joi.string().optional().allow(''),\n    state: Joi.string().optional().allow(''),\n    zipCode: Joi.string().optional().allow(''),\n    country: Joi.string().optional().allow(''),\n    additional: Joi.object().optional()\n  }).optional().allow({}),\n  billingAddress: Joi.object({\n    street1: Joi.string().optional().allow(''),\n    street2: Joi.string().optional().allow(''),\n    city: Joi.string().optional().allow(''),\n    state: Joi.string().optional().allow(''),\n    zipCode: Joi.string().optional().allow(''),\n    country: Joi.string().optional().allow(''),\n    additional: Joi.object().optional()\n  }).optional().allow({}),\n  billingAndPropertyAddressSame: Joi.boolean(),\n  companyNameAsPrimary: Joi.boolean().optional(),\n  tax: Joi.string().optional().allow('')\n})\n\nconst updateSchema = Joi.object({\n  id: Joi.string().required(),\n  title: Joi.string().optional().allow(''),\n  firstName: Joi.string(),\n  lastName: Joi.string(),\n  company: Joi.string().optional().allow(''),\n  email: Joi.string().optional().allow(''),\n  homePhone: Joi.array().items(Joi.string().optional().allow('')).optional().allow([]),\n  workPhone: Joi.array().items(Joi.string().optional().allow('')).optional().allow([]),\n  mobile: Joi.array().items(Joi.string().optional().allow('')).optional().allow([]),\n  propertyDetails: Joi.object({\n    street1: Joi.string().optional().allow(''),\n    street2: Joi.string().optional().allow(''),\n    city: Joi.string().optional().allow(''),\n    state: Joi.string().optional().allow(''),\n    zipCode: Joi.string().optional().allow(''),\n    country: Joi.string().optional().allow(''),\n    additional: Joi.object().optional()\n  }).optional().allow({}),\n  billingAddress: Joi.object({\n    street1: Joi.string().optional().allow(''),\n    street2: Joi.string().optional().allow(''),\n    city: Joi.string().optional().allow(''),\n    state: Joi.string().optional().allow(''),\n    zipCode: Joi.string().optional().allow(''),\n    country: Joi.string().optional().allow(''),\n    additional: Joi.object().optional()\n  }).optional().allow({}),\n  billingAndPropertyAddressSame: Joi.boolean(),\n  companyNameAsPrimary: Joi.boolean().optional(),\n  tax: Joi.string().optional().allow('')\n})\n\nconst deleteSchema = Joi.object({\n  id: Joi.array().items(Joi.string()).required()\n})\n\nexport const getClients = async (req, res) => {\n  try {\n    const { page, limit } = req.query\n    const data = await _ClientModel().paginate({ isDelete: false }, { page, limit, populate: 'tax' })\n    return res.json(data)\n  } catch (err) {\n    console.log(err)\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const searchClients = async (req, res) => {\n  try {\n    const { page, limit, text = '' } = req.query\n\n    if (!text) return res.json({ data: [] })\n\n    const searchRE = new RegExp(`.*${text}.*`);\n    const data = await _ClientModel().find({\n      $or: [\n        {\n          firstName: { $regex: searchRE, $options: 'i' }\n        },\n        {\n          lastName: { $regex: searchRE, $options: 'i' }\n        },\n        {\n          email: { $regex: searchRE, $options: 'i' }\n        },\n        {\n          mobile: { $elemMatch: { $regex: searchRE, $options: 'i' } }\n        }\n      ],\n      isDelete: false\n    })\n    return res.json({ data })\n  } catch (err) {\n    console.log(err)\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const createClient = async (req, res) => {\n  try {\n    const validation = Joi.validate(req.body, createSchema)\n    if (validation.error) throw new Error(validation.error)\n    const { name, ...rest } = req.body\n    const vendor = await _ClientModel().findOne({ name: { $regex: new RegExp(name), $options: 'i' }, isDelete: false })\n    if (vendor) {\n      throw new Error(ERRORS.RESOURCE_ALREADY_EXISTS)\n    }\n\n    const data = await _ClientModel().create({\n      name, ...rest\n    })\n    return res.json({ data })\n  } catch (err) {\n    console.log(err)\n    if (err.message === ERRORS.RESOURCE_ALREADY_EXISTS) return res.status(409).json({ error: true, reason: err.message })\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const updateClient = async (req, res) => {\n  try {\n    const validation = Joi.validate(req.body, updateSchema)\n    if (validation.error) throw new Error(validation.error)\n    const { id: _id, ...rest } = req.body\n    if (rest.name) {\n      const existingVendor = await _ClientModel().findOne({ name: { $regex: new RegExp(rest.name), $options: 'i' }, isDelete: false })\n      if (existingVendor && !existingVendor._id.equals(_id)) {\n        throw new Error(ERRORS.RESOURCE_ALREADY_EXISTS)\n      }\n    }\n\n    const data = await _ClientModel().findOneAndUpdate({ _id, isDelete: false }, { $set: flatten(rest) }, { new: true })\n    return res.json({ data })\n  } catch (err) {\n    console.log(err)\n    if (err.message === ERRORS.RESOURCE_ALREADY_EXISTS) return res.status(409).json({ error: true, reason: err.message })\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const deleteClient = async (req, res) => {\n  try {\n    const validation = Joi.validate(req.body, deleteSchema)\n    if (validation.error) throw new Error(validation.error)\n\n    const { id: _id } = req.body\n\n    await _ClientModel().updateMany({ _id: { $in: _id } }, { $set: { isDelete: true } })\n    return res.json({ data: {} })\n  } catch (err) {\n    console.log(err)\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1574924198759
  },
  "{\"sourceRoot\":\"/app/src/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/models/client.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/models/client.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/models/client.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/models/client.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/models",
        "sourceFileName": "client.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongoose = require(\"mongoose\");\n\nvar _multiTenant = require(\"../lib/multiTenant\");\n\nvar clientSchema = new _mongoose.Schema({\n  title: {\n    type: String,\n    \"enum\": ['Mr.', 'Ms.', 'Mrs.', 'Miss.', 'Dr.', '']\n  },\n  firstName: {\n    type: String,\n    required: true\n  },\n  lastName: {\n    type: String,\n    required: true\n  },\n  company: String,\n  email: String,\n  homePhone: [String],\n  workPhone: [String],\n  mobile: [String],\n  address: String,\n  propertyDetails: {\n    street1: String,\n    street2: String,\n    city: String,\n    state: String,\n    zipCode: String,\n    country: String,\n    additional: Object\n  },\n  billingAddress: {\n    street1: String,\n    street2: String,\n    city: String,\n    state: String,\n    zipCode: String,\n    country: String,\n    additional: Object\n  },\n  billingAndPropertyAddressSame: Boolean,\n  companyNameAsPrimary: {\n    type: Boolean,\n    \"default\": false\n  },\n  tax: {\n    type: _mongoose.Schema.Types.ObjectId,\n    ref: 'Tax'\n  },\n  isDelete: {\n    type: Boolean,\n    \"default\": false\n  }\n}, {\n  timestamps: true,\n  skipVersioning: true\n});\n\nvar _default = (0, _multiTenant.tenantModel)('Client', clientSchema);\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsaWVudC5qcyJdLCJuYW1lcyI6WyJjbGllbnRTY2hlbWEiLCJTY2hlbWEiLCJ0aXRsZSIsInR5cGUiLCJTdHJpbmciLCJmaXJzdE5hbWUiLCJyZXF1aXJlZCIsImxhc3ROYW1lIiwiY29tcGFueSIsImVtYWlsIiwiaG9tZVBob25lIiwid29ya1Bob25lIiwibW9iaWxlIiwiYWRkcmVzcyIsInByb3BlcnR5RGV0YWlscyIsInN0cmVldDEiLCJzdHJlZXQyIiwiY2l0eSIsInN0YXRlIiwiemlwQ29kZSIsImNvdW50cnkiLCJhZGRpdGlvbmFsIiwiT2JqZWN0IiwiYmlsbGluZ0FkZHJlc3MiLCJiaWxsaW5nQW5kUHJvcGVydHlBZGRyZXNzU2FtZSIsIkJvb2xlYW4iLCJjb21wYW55TmFtZUFzUHJpbWFyeSIsInRheCIsIlR5cGVzIiwiT2JqZWN0SWQiLCJyZWYiLCJpc0RlbGV0ZSIsInRpbWVzdGFtcHMiLCJza2lwVmVyc2lvbmluZyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUVBLElBQU1BLFlBQVksR0FBRyxJQUFJQyxnQkFBSixDQUFXO0FBQzlCQyxFQUFBQSxLQUFLLEVBQUU7QUFDTEMsSUFBQUEsSUFBSSxFQUFFQyxNQUREO0FBRUwsWUFBTSxDQUFDLEtBQUQsRUFBUSxLQUFSLEVBQWUsTUFBZixFQUF1QixPQUF2QixFQUFnQyxLQUFoQyxFQUF1QyxFQUF2QztBQUZELEdBRHVCO0FBSzlCQyxFQUFBQSxTQUFTLEVBQUU7QUFDVEYsSUFBQUEsSUFBSSxFQUFFQyxNQURHO0FBRVRFLElBQUFBLFFBQVEsRUFBRTtBQUZELEdBTG1CO0FBUzlCQyxFQUFBQSxRQUFRLEVBQUU7QUFDUkosSUFBQUEsSUFBSSxFQUFFQyxNQURFO0FBRVJFLElBQUFBLFFBQVEsRUFBRTtBQUZGLEdBVG9CO0FBYTlCRSxFQUFBQSxPQUFPLEVBQUVKLE1BYnFCO0FBYzlCSyxFQUFBQSxLQUFLLEVBQUVMLE1BZHVCO0FBZTlCTSxFQUFBQSxTQUFTLEVBQUUsQ0FBQ04sTUFBRCxDQWZtQjtBQWdCOUJPLEVBQUFBLFNBQVMsRUFBRSxDQUFDUCxNQUFELENBaEJtQjtBQWlCOUJRLEVBQUFBLE1BQU0sRUFBRSxDQUFDUixNQUFELENBakJzQjtBQWtCOUJTLEVBQUFBLE9BQU8sRUFBRVQsTUFsQnFCO0FBbUI5QlUsRUFBQUEsZUFBZSxFQUFFO0FBQ2ZDLElBQUFBLE9BQU8sRUFBRVgsTUFETTtBQUVmWSxJQUFBQSxPQUFPLEVBQUVaLE1BRk07QUFHZmEsSUFBQUEsSUFBSSxFQUFFYixNQUhTO0FBSWZjLElBQUFBLEtBQUssRUFBRWQsTUFKUTtBQUtmZSxJQUFBQSxPQUFPLEVBQUVmLE1BTE07QUFNZmdCLElBQUFBLE9BQU8sRUFBRWhCLE1BTk07QUFPZmlCLElBQUFBLFVBQVUsRUFBRUM7QUFQRyxHQW5CYTtBQTRCOUJDLEVBQUFBLGNBQWMsRUFBRTtBQUNkUixJQUFBQSxPQUFPLEVBQUVYLE1BREs7QUFFZFksSUFBQUEsT0FBTyxFQUFFWixNQUZLO0FBR2RhLElBQUFBLElBQUksRUFBRWIsTUFIUTtBQUlkYyxJQUFBQSxLQUFLLEVBQUVkLE1BSk87QUFLZGUsSUFBQUEsT0FBTyxFQUFFZixNQUxLO0FBTWRnQixJQUFBQSxPQUFPLEVBQUVoQixNQU5LO0FBT2RpQixJQUFBQSxVQUFVLEVBQUVDO0FBUEUsR0E1QmM7QUFxQzlCRSxFQUFBQSw2QkFBNkIsRUFBRUMsT0FyQ0Q7QUFzQzlCQyxFQUFBQSxvQkFBb0IsRUFBRTtBQUNwQnZCLElBQUFBLElBQUksRUFBRXNCLE9BRGM7QUFFcEIsZUFBUztBQUZXLEdBdENRO0FBMEM5QkUsRUFBQUEsR0FBRyxFQUFFO0FBQ0h4QixJQUFBQSxJQUFJLEVBQUVGLGlCQUFPMkIsS0FBUCxDQUFhQyxRQURoQjtBQUVIQyxJQUFBQSxHQUFHLEVBQUU7QUFGRixHQTFDeUI7QUE4QzlCQyxFQUFBQSxRQUFRLEVBQUU7QUFDUjVCLElBQUFBLElBQUksRUFBRXNCLE9BREU7QUFFUixlQUFTO0FBRkQ7QUE5Q29CLENBQVgsRUFtRGxCO0FBQUVPLEVBQUFBLFVBQVUsRUFBRSxJQUFkO0FBQW9CQyxFQUFBQSxjQUFjLEVBQUU7QUFBcEMsQ0FuRGtCLENBQXJCOztlQXFEZSw4QkFBWSxRQUFaLEVBQXNCakMsWUFBdEIsQyIsInNvdXJjZVJvb3QiOiIvYXBwL3NyYy9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTY2hlbWEgfSBmcm9tICdtb25nb29zZSdcbmltcG9ydCB7IHRlbmFudE1vZGVsIH0gZnJvbSAnLi4vbGliL211bHRpVGVuYW50J1xuXG5jb25zdCBjbGllbnRTY2hlbWEgPSBuZXcgU2NoZW1hKHtcbiAgdGl0bGU6IHtcbiAgICB0eXBlOiBTdHJpbmcsXG4gICAgZW51bTogWydNci4nLCAnTXMuJywgJ01ycy4nLCAnTWlzcy4nLCAnRHIuJywgJyddXG4gIH0sXG4gIGZpcnN0TmFtZToge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgICByZXF1aXJlZDogdHJ1ZVxuICB9LFxuICBsYXN0TmFtZToge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgICByZXF1aXJlZDogdHJ1ZVxuICB9LFxuICBjb21wYW55OiBTdHJpbmcsXG4gIGVtYWlsOiBTdHJpbmcsXG4gIGhvbWVQaG9uZTogW1N0cmluZ10sXG4gIHdvcmtQaG9uZTogW1N0cmluZ10sXG4gIG1vYmlsZTogW1N0cmluZ10sXG4gIGFkZHJlc3M6IFN0cmluZyxcbiAgcHJvcGVydHlEZXRhaWxzOiB7XG4gICAgc3RyZWV0MTogU3RyaW5nLFxuICAgIHN0cmVldDI6IFN0cmluZyxcbiAgICBjaXR5OiBTdHJpbmcsXG4gICAgc3RhdGU6IFN0cmluZyxcbiAgICB6aXBDb2RlOiBTdHJpbmcsXG4gICAgY291bnRyeTogU3RyaW5nLFxuICAgIGFkZGl0aW9uYWw6IE9iamVjdFxuICB9LFxuICBiaWxsaW5nQWRkcmVzczoge1xuICAgIHN0cmVldDE6IFN0cmluZyxcbiAgICBzdHJlZXQyOiBTdHJpbmcsXG4gICAgY2l0eTogU3RyaW5nLFxuICAgIHN0YXRlOiBTdHJpbmcsXG4gICAgemlwQ29kZTogU3RyaW5nLFxuICAgIGNvdW50cnk6IFN0cmluZyxcbiAgICBhZGRpdGlvbmFsOiBPYmplY3RcbiAgfSxcbiAgYmlsbGluZ0FuZFByb3BlcnR5QWRkcmVzc1NhbWU6IEJvb2xlYW4sXG4gIGNvbXBhbnlOYW1lQXNQcmltYXJ5OiB7XG4gICAgdHlwZTogQm9vbGVhbixcbiAgICBkZWZhdWx0OiBmYWxzZVxuICB9LFxuICB0YXg6IHtcbiAgICB0eXBlOiBTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG4gICAgcmVmOiAnVGF4J1xuICB9LFxuICBpc0RlbGV0ZToge1xuICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgZGVmYXVsdDogZmFsc2VcbiAgfVxuXG59LCB7IHRpbWVzdGFtcHM6IHRydWUsIHNraXBWZXJzaW9uaW5nOiB0cnVlIH0pXG5cbmV4cG9ydCBkZWZhdWx0IHRlbmFudE1vZGVsKCdDbGllbnQnLCBjbGllbnRTY2hlbWEpXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "client.js"
      ],
      "names": [
        "clientSchema",
        "Schema",
        "title",
        "type",
        "String",
        "firstName",
        "required",
        "lastName",
        "company",
        "email",
        "homePhone",
        "workPhone",
        "mobile",
        "address",
        "propertyDetails",
        "street1",
        "street2",
        "city",
        "state",
        "zipCode",
        "country",
        "additional",
        "Object",
        "billingAddress",
        "billingAndPropertyAddressSame",
        "Boolean",
        "companyNameAsPrimary",
        "tax",
        "Types",
        "ObjectId",
        "ref",
        "isDelete",
        "timestamps",
        "skipVersioning"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AAEA,IAAMA,YAAY,GAAG,IAAIC,gBAAJ,CAAW;AAC9BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAEC,MADD;AAEL,YAAM,CAAC,KAAD,EAAQ,KAAR,EAAe,MAAf,EAAuB,OAAvB,EAAgC,KAAhC,EAAuC,EAAvC;AAFD,GADuB;AAK9BC,EAAAA,SAAS,EAAE;AACTF,IAAAA,IAAI,EAAEC,MADG;AAETE,IAAAA,QAAQ,EAAE;AAFD,GALmB;AAS9BC,EAAAA,QAAQ,EAAE;AACRJ,IAAAA,IAAI,EAAEC,MADE;AAERE,IAAAA,QAAQ,EAAE;AAFF,GAToB;AAa9BE,EAAAA,OAAO,EAAEJ,MAbqB;AAc9BK,EAAAA,KAAK,EAAEL,MAduB;AAe9BM,EAAAA,SAAS,EAAE,CAACN,MAAD,CAfmB;AAgB9BO,EAAAA,SAAS,EAAE,CAACP,MAAD,CAhBmB;AAiB9BQ,EAAAA,MAAM,EAAE,CAACR,MAAD,CAjBsB;AAkB9BS,EAAAA,OAAO,EAAET,MAlBqB;AAmB9BU,EAAAA,eAAe,EAAE;AACfC,IAAAA,OAAO,EAAEX,MADM;AAEfY,IAAAA,OAAO,EAAEZ,MAFM;AAGfa,IAAAA,IAAI,EAAEb,MAHS;AAIfc,IAAAA,KAAK,EAAEd,MAJQ;AAKfe,IAAAA,OAAO,EAAEf,MALM;AAMfgB,IAAAA,OAAO,EAAEhB,MANM;AAOfiB,IAAAA,UAAU,EAAEC;AAPG,GAnBa;AA4B9BC,EAAAA,cAAc,EAAE;AACdR,IAAAA,OAAO,EAAEX,MADK;AAEdY,IAAAA,OAAO,EAAEZ,MAFK;AAGda,IAAAA,IAAI,EAAEb,MAHQ;AAIdc,IAAAA,KAAK,EAAEd,MAJO;AAKde,IAAAA,OAAO,EAAEf,MALK;AAMdgB,IAAAA,OAAO,EAAEhB,MANK;AAOdiB,IAAAA,UAAU,EAAEC;AAPE,GA5Bc;AAqC9BE,EAAAA,6BAA6B,EAAEC,OArCD;AAsC9BC,EAAAA,oBAAoB,EAAE;AACpBvB,IAAAA,IAAI,EAAEsB,OADc;AAEpB,eAAS;AAFW,GAtCQ;AA0C9BE,EAAAA,GAAG,EAAE;AACHxB,IAAAA,IAAI,EAAEF,iBAAO2B,KAAP,CAAaC,QADhB;AAEHC,IAAAA,GAAG,EAAE;AAFF,GA1CyB;AA8C9BC,EAAAA,QAAQ,EAAE;AACR5B,IAAAA,IAAI,EAAEsB,OADE;AAER,eAAS;AAFD;AA9CoB,CAAX,EAmDlB;AAAEO,EAAAA,UAAU,EAAE,IAAd;AAAoBC,EAAAA,cAAc,EAAE;AAApC,CAnDkB,CAArB;;eAqDe,8BAAY,QAAZ,EAAsBjC,YAAtB,C",
      "sourceRoot": "/app/src/models",
      "sourcesContent": [
        "import { Schema } from 'mongoose'\nimport { tenantModel } from '../lib/multiTenant'\n\nconst clientSchema = new Schema({\n  title: {\n    type: String,\n    enum: ['Mr.', 'Ms.', 'Mrs.', 'Miss.', 'Dr.', '']\n  },\n  firstName: {\n    type: String,\n    required: true\n  },\n  lastName: {\n    type: String,\n    required: true\n  },\n  company: String,\n  email: String,\n  homePhone: [String],\n  workPhone: [String],\n  mobile: [String],\n  address: String,\n  propertyDetails: {\n    street1: String,\n    street2: String,\n    city: String,\n    state: String,\n    zipCode: String,\n    country: String,\n    additional: Object\n  },\n  billingAddress: {\n    street1: String,\n    street2: String,\n    city: String,\n    state: String,\n    zipCode: String,\n    country: String,\n    additional: Object\n  },\n  billingAndPropertyAddressSame: Boolean,\n  companyNameAsPrimary: {\n    type: Boolean,\n    default: false\n  },\n  tax: {\n    type: Schema.Types.ObjectId,\n    ref: 'Tax'\n  },\n  isDelete: {\n    type: Boolean,\n    default: false\n  }\n\n}, { timestamps: true, skipVersioning: true })\n\nexport default tenantModel('Client', clientSchema)\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573021617939
  },
  "{\"sourceRoot\":\"/app/src/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/routes/taxes.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/routes/taxes.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/routes/taxes.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/routes/taxes.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/routes",
        "sourceFileName": "taxes.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _tax = require(\"../controllers/tax\");\n\nvar router = (0, _express.Router)();\nrouter.get('/', _tax.getTaxes);\nrouter.post('/create', _tax.createTax);\nrouter.post('/delete', _tax.deleteTax);\nrouter.post('/update', _tax.updateTax);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRheGVzLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsImdldCIsImdldFRheGVzIiwicG9zdCIsImNyZWF0ZVRheCIsImRlbGV0ZVRheCIsInVwZGF0ZVRheCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUVBOztBQUNBLElBQU1BLE1BQU0sR0FBRyxzQkFBZjtBQUVBQSxNQUFNLENBQUNDLEdBQVAsQ0FBVyxHQUFYLEVBQWdCQyxhQUFoQjtBQUNBRixNQUFNLENBQUNHLElBQVAsQ0FBWSxTQUFaLEVBQXVCQyxjQUF2QjtBQUNBSixNQUFNLENBQUNHLElBQVAsQ0FBWSxTQUFaLEVBQXVCRSxjQUF2QjtBQUNBTCxNQUFNLENBQUNHLElBQVAsQ0FBWSxTQUFaLEVBQXVCRyxjQUF2QjtlQUVlTixNIiwic291cmNlUm9vdCI6Ii9hcHAvc3JjL3JvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJvdXRlciB9IGZyb20gJ2V4cHJlc3MnXG5cbmltcG9ydCB7IGdldFRheGVzLCBjcmVhdGVUYXgsIHVwZGF0ZVRheCwgZGVsZXRlVGF4IH0gZnJvbSAnLi4vY29udHJvbGxlcnMvdGF4J1xuY29uc3Qgcm91dGVyID0gUm91dGVyKClcblxucm91dGVyLmdldCgnLycsIGdldFRheGVzKVxucm91dGVyLnBvc3QoJy9jcmVhdGUnLCBjcmVhdGVUYXgpXG5yb3V0ZXIucG9zdCgnL2RlbGV0ZScsIGRlbGV0ZVRheClcbnJvdXRlci5wb3N0KCcvdXBkYXRlJywgdXBkYXRlVGF4KVxuXG5leHBvcnQgZGVmYXVsdCByb3V0ZXJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "taxes.js"
      ],
      "names": [
        "router",
        "get",
        "getTaxes",
        "post",
        "createTax",
        "deleteTax",
        "updateTax"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA;;AACA,IAAMA,MAAM,GAAG,sBAAf;AAEAA,MAAM,CAACC,GAAP,CAAW,GAAX,EAAgBC,aAAhB;AACAF,MAAM,CAACG,IAAP,CAAY,SAAZ,EAAuBC,cAAvB;AACAJ,MAAM,CAACG,IAAP,CAAY,SAAZ,EAAuBE,cAAvB;AACAL,MAAM,CAACG,IAAP,CAAY,SAAZ,EAAuBG,cAAvB;eAEeN,M",
      "sourceRoot": "/app/src/routes",
      "sourcesContent": [
        "import { Router } from 'express'\n\nimport { getTaxes, createTax, updateTax, deleteTax } from '../controllers/tax'\nconst router = Router()\n\nrouter.get('/', getTaxes)\nrouter.post('/create', createTax)\nrouter.post('/delete', deleteTax)\nrouter.post('/update', updateTax)\n\nexport default router\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573021617943
  },
  "{\"sourceRoot\":\"/app/src/controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/controllers/tax.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/controllers/tax.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/controllers/tax.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/controllers/tax.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/controllers",
        "sourceFileName": "tax.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deleteTax = exports.updateTax = exports.createTax = exports.getTaxes = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _tax = _interopRequireDefault(require(\"../models/tax\"));\n\nvar _errors = _interopRequireDefault(require(\"../constants/errors\"));\n\nvar _joi = _interopRequireDefault(require(\"@hapi/joi\"));\n\nvar _flat = require(\"flat\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar createSchema = _joi[\"default\"].object({\n  name: _joi[\"default\"].string().required(),\n  value: _joi[\"default\"].number().required(),\n  unit: _joi[\"default\"].string().required(),\n  \"default\": _joi[\"default\"][\"boolean\"]().optional(),\n  status: _joi[\"default\"][\"boolean\"]().optional()\n});\n\nvar updateSchema = _joi[\"default\"].object({\n  id: _joi[\"default\"].string().required(),\n  name: _joi[\"default\"].string().optional(),\n  value: _joi[\"default\"].number().optional(),\n  unit: _joi[\"default\"].string().optional(),\n  \"default\": _joi[\"default\"][\"boolean\"]().optional(),\n  status: _joi[\"default\"][\"boolean\"]().optional()\n});\n\nvar deleteSchema = _joi[\"default\"].object({\n  id: _joi[\"default\"].array().items(_joi[\"default\"].string()).required()\n});\n\nvar getTaxes = function getTaxes(req, res) {\n  var _req$query, page, limit, data;\n\n  return _regenerator[\"default\"].async(function getTaxes$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _req$query = req.query, page = _req$query.page, limit = _req$query.limit;\n          _context.next = 4;\n          return _regenerator[\"default\"].awrap((0, _tax[\"default\"])().paginate({\n            isDelete: false\n          }, {\n            page: page,\n            limit: limit\n          }));\n\n        case 4:\n          data = _context.sent;\n          return _context.abrupt(\"return\", res.json(data));\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n          return _context.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context.t0.message\n          }));\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 8]]);\n};\n\nexports.getTaxes = getTaxes;\n\nvar createTax = function createTax(req, res) {\n  var validation, _req$body, name, rest, tax, data;\n\n  return _regenerator[\"default\"].async(function createTax$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          validation = _joi[\"default\"].validate(req.body, createSchema);\n\n          if (!validation.error) {\n            _context2.next = 4;\n            break;\n          }\n\n          throw new Error(validation.error);\n\n        case 4:\n          _req$body = req.body, name = _req$body.name, rest = (0, _objectWithoutProperties2[\"default\"])(_req$body, [\"name\"]);\n          _context2.next = 7;\n          return _regenerator[\"default\"].awrap((0, _tax[\"default\"])().findOne({\n            name: {\n              $regex: new RegExp(name),\n              $options: 'i'\n            },\n            isDelete: false\n          }));\n\n        case 7:\n          tax = _context2.sent;\n\n          if (!tax) {\n            _context2.next = 10;\n            break;\n          }\n\n          throw new Error(_errors[\"default\"].RESOURCE_ALREADY_EXISTS);\n\n        case 10:\n          if (!rest[\"default\"]) {\n            _context2.next = 13;\n            break;\n          }\n\n          _context2.next = 13;\n          return _regenerator[\"default\"].awrap((0, _tax[\"default\"])().updateMany({}, {\n            $set: {\n              \"default\": false\n            }\n          }));\n\n        case 13:\n          _context2.next = 15;\n          return _regenerator[\"default\"].awrap((0, _tax[\"default\"])().create(_objectSpread({\n            name: name\n          }, rest)));\n\n        case 15:\n          data = _context2.sent;\n          return _context2.abrupt(\"return\", res.json({\n            data: data\n          }));\n\n        case 19:\n          _context2.prev = 19;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0);\n\n          if (!(_context2.t0.message === _errors[\"default\"].RESOURCE_ALREADY_EXISTS)) {\n            _context2.next = 24;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", res.status(409).json({\n            error: true,\n            reason: _context2.t0.message\n          }));\n\n        case 24:\n          return _context2.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context2.t0.message\n          }));\n\n        case 25:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 19]]);\n};\n\nexports.createTax = createTax;\n\nvar updateTax = function updateTax(req, res) {\n  var validation, _req$body2, _id, rest, existingTax, data;\n\n  return _regenerator[\"default\"].async(function updateTax$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          validation = _joi[\"default\"].validate(req.body, updateSchema);\n\n          if (!validation.error) {\n            _context3.next = 4;\n            break;\n          }\n\n          throw new Error(validation.error);\n\n        case 4:\n          _req$body2 = req.body, _id = _req$body2.id, rest = (0, _objectWithoutProperties2[\"default\"])(_req$body2, [\"id\"]);\n\n          if (!rest.name) {\n            _context3.next = 11;\n            break;\n          }\n\n          _context3.next = 8;\n          return _regenerator[\"default\"].awrap((0, _tax[\"default\"])().findOne({\n            name: {\n              $regex: new RegExp(rest.name),\n              $options: 'i'\n            },\n            isDelete: false\n          }));\n\n        case 8:\n          existingTax = _context3.sent;\n\n          if (!(existingTax && !existingTax._id.equals(_id))) {\n            _context3.next = 11;\n            break;\n          }\n\n          throw new Error(_errors[\"default\"].RESOURCE_ALREADY_EXISTS);\n\n        case 11:\n          if (!rest[\"default\"]) {\n            _context3.next = 14;\n            break;\n          }\n\n          _context3.next = 14;\n          return _regenerator[\"default\"].awrap((0, _tax[\"default\"])().updateMany({}, {\n            $set: {\n              \"default\": false\n            }\n          }));\n\n        case 14:\n          _context3.next = 16;\n          return _regenerator[\"default\"].awrap((0, _tax[\"default\"])().findOneAndUpdate({\n            _id: _id,\n            isDelete: false\n          }, {\n            $set: (0, _flat.flatten)(rest)\n          }, {\n            \"new\": true\n          }));\n\n        case 16:\n          data = _context3.sent;\n          return _context3.abrupt(\"return\", res.json({\n            data: data\n          }));\n\n        case 20:\n          _context3.prev = 20;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(_context3.t0);\n\n          if (!(_context3.t0.message === _errors[\"default\"].RESOURCE_ALREADY_EXISTS)) {\n            _context3.next = 25;\n            break;\n          }\n\n          return _context3.abrupt(\"return\", res.status(409).json({\n            error: true,\n            reason: _context3.t0.message\n          }));\n\n        case 25:\n          return _context3.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context3.t0.message\n          }));\n\n        case 26:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 20]]);\n};\n\nexports.updateTax = updateTax;\n\nvar deleteTax = function deleteTax(req, res) {\n  var validation, _id;\n\n  return _regenerator[\"default\"].async(function deleteTax$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          validation = _joi[\"default\"].validate(req.body, deleteSchema);\n\n          if (!validation.error) {\n            _context4.next = 4;\n            break;\n          }\n\n          throw new Error(validation.error);\n\n        case 4:\n          _id = req.body.id;\n          _context4.next = 7;\n          return _regenerator[\"default\"].awrap((0, _tax[\"default\"])().updateMany({\n            _id: {\n              $in: _id\n            }\n          }, {\n            $set: {\n              isDelete: true\n            }\n          }));\n\n        case 7:\n          return _context4.abrupt(\"return\", res.json({\n            data: {}\n          }));\n\n        case 10:\n          _context4.prev = 10;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.log(_context4.t0);\n          return _context4.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context4.t0.message\n          }));\n\n        case 14:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, [[0, 10]]);\n};\n\nexports.deleteTax = deleteTax;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "tax.js"
      ],
      "names": [
        "createSchema",
        "Joi",
        "object",
        "name",
        "string",
        "required",
        "value",
        "number",
        "unit",
        "optional",
        "status",
        "updateSchema",
        "id",
        "deleteSchema",
        "array",
        "items",
        "getTaxes",
        "req",
        "res",
        "query",
        "page",
        "limit",
        "paginate",
        "isDelete",
        "data",
        "json",
        "console",
        "log",
        "error",
        "reason",
        "message",
        "createTax",
        "validation",
        "validate",
        "body",
        "Error",
        "rest",
        "findOne",
        "$regex",
        "RegExp",
        "$options",
        "tax",
        "ERRORS",
        "RESOURCE_ALREADY_EXISTS",
        "updateMany",
        "$set",
        "create",
        "updateTax",
        "_id",
        "existingTax",
        "equals",
        "findOneAndUpdate",
        "deleteTax",
        "$in"
      ],
      "mappings": ";;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;AAEA,IAAMA,YAAY,GAAGC,gBAAIC,MAAJ,CAAW;AAC9BC,EAAAA,IAAI,EAAEF,gBAAIG,MAAJ,GAAaC,QAAb,EADwB;AAE9BC,EAAAA,KAAK,EAAEL,gBAAIM,MAAJ,GAAaF,QAAb,EAFuB;AAG9BG,EAAAA,IAAI,EAAEP,gBAAIG,MAAJ,GAAaC,QAAb,EAHwB;AAI9B,aAASJ,6BAAcQ,QAAd,EAJqB;AAK9BC,EAAAA,MAAM,EAAET,6BAAcQ,QAAd;AALsB,CAAX,CAArB;;AAQA,IAAME,YAAY,GAAGV,gBAAIC,MAAJ,CAAW;AAC9BU,EAAAA,EAAE,EAAEX,gBAAIG,MAAJ,GAAaC,QAAb,EAD0B;AAE9BF,EAAAA,IAAI,EAAEF,gBAAIG,MAAJ,GAAaK,QAAb,EAFwB;AAG9BH,EAAAA,KAAK,EAAEL,gBAAIM,MAAJ,GAAaE,QAAb,EAHuB;AAI9BD,EAAAA,IAAI,EAAEP,gBAAIG,MAAJ,GAAaK,QAAb,EAJwB;AAK9B,aAASR,6BAAcQ,QAAd,EALqB;AAM9BC,EAAAA,MAAM,EAAET,6BAAcQ,QAAd;AANsB,CAAX,CAArB;;AASA,IAAMI,YAAY,GAAGZ,gBAAIC,MAAJ,CAAW;AAC9BU,EAAAA,EAAE,EAAEX,gBAAIa,KAAJ,GAAYC,KAAZ,CAAkBd,gBAAIG,MAAJ,EAAlB,EAAgCC,QAAhC;AAD0B,CAAX,CAArB;;AAIO,IAAMW,QAAQ,GAAG,SAAXA,QAAW,CAAOC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEID,GAAG,CAACE,KAFR,EAEZC,IAFY,cAEZA,IAFY,EAENC,KAFM,cAENA,KAFM;AAAA;AAAA,+CAGD,uBAAYC,QAAZ,CAAqB;AAAEC,YAAAA,QAAQ,EAAE;AAAZ,WAArB,EAA0C;AAAEH,YAAAA,IAAI,EAAJA,IAAF;AAAQC,YAAAA,KAAK,EAALA;AAAR,WAA1C,CAHC;;AAAA;AAGdG,UAAAA,IAHc;AAAA,2CAIbN,GAAG,CAACO,IAAJ,CAASD,IAAT,CAJa;;AAAA;AAAA;AAAA;AAMpBE,UAAAA,OAAO,CAACC,GAAR;AANoB,2CAObT,GAAG,CAACR,MAAJ,CAAW,GAAX,EAAgBe,IAAhB,CAAqB;AAAEG,YAAAA,KAAK,EAAE,IAAT;AAAeC,YAAAA,MAAM,EAAE,YAAIC;AAA3B,WAArB,CAPa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjB;;;;AAWA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAOd,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEfc,UAAAA,UAFe,GAEF/B,gBAAIgC,QAAJ,CAAahB,GAAG,CAACiB,IAAjB,EAAuBlC,YAAvB,CAFE;;AAAA,eAGjBgC,UAAU,CAACJ,KAHM;AAAA;AAAA;AAAA;;AAAA,gBAGO,IAAIO,KAAJ,CAAUH,UAAU,CAACJ,KAArB,CAHP;;AAAA;AAAA,sBAIKX,GAAG,CAACiB,IAJT,EAIb/B,IAJa,aAIbA,IAJa,EAIJiC,IAJI;AAAA;AAAA,+CAKH,uBAAYC,OAAZ,CAAoB;AAAElC,YAAAA,IAAI,EAAE;AAAEmC,cAAAA,MAAM,EAAE,IAAIC,MAAJ,CAAWpC,IAAX,CAAV;AAA4BqC,cAAAA,QAAQ,EAAE;AAAtC,aAAR;AAAqDjB,YAAAA,QAAQ,EAAE;AAA/D,WAApB,CALG;;AAAA;AAKfkB,UAAAA,GALe;;AAAA,eAMjBA,GANiB;AAAA;AAAA;AAAA;;AAAA,gBAOb,IAAIN,KAAJ,CAAUO,mBAAOC,uBAAjB,CAPa;;AAAA;AAAA,eAUjBP,IAAI,WAVa;AAAA;AAAA;AAAA;;AAAA;AAAA,+CAWb,uBAAYQ,UAAZ,CAAuB,EAAvB,EAA2B;AAAEC,YAAAA,IAAI,EAAE;AAAE,yBAAS;AAAX;AAAR,WAA3B,CAXa;;AAAA;AAAA;AAAA,+CAaF,uBAAYC,MAAZ;AACjB3C,YAAAA,IAAI,EAAJA;AADiB,aACRiC,IADQ,EAbE;;AAAA;AAafZ,UAAAA,IAbe;AAAA,4CAiBdN,GAAG,CAACO,IAAJ,CAAS;AAAED,YAAAA,IAAI,EAAJA;AAAF,WAAT,CAjBc;;AAAA;AAAA;AAAA;AAmBrBE,UAAAA,OAAO,CAACC,GAAR;;AAnBqB,gBAoBjB,aAAIG,OAAJ,KAAgBY,mBAAOC,uBApBN;AAAA;AAAA;AAAA;;AAAA,4CAoBsCzB,GAAG,CAACR,MAAJ,CAAW,GAAX,EAAgBe,IAAhB,CAAqB;AAAEG,YAAAA,KAAK,EAAE,IAAT;AAAeC,YAAAA,MAAM,EAAE,aAAIC;AAA3B,WAArB,CApBtC;;AAAA;AAAA,4CAqBdZ,GAAG,CAACR,MAAJ,CAAW,GAAX,EAAgBe,IAAhB,CAAqB;AAAEG,YAAAA,KAAK,EAAE,IAAT;AAAeC,YAAAA,MAAM,EAAE,aAAIC;AAA3B,WAArB,CArBc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlB;;;;AAyBA,IAAMiB,SAAS,GAAG,SAAZA,SAAY,CAAO9B,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEfc,UAAAA,UAFe,GAEF/B,gBAAIgC,QAAJ,CAAahB,GAAG,CAACiB,IAAjB,EAAuBvB,YAAvB,CAFE;;AAAA,eAGjBqB,UAAU,CAACJ,KAHM;AAAA;AAAA;AAAA;;AAAA,gBAGO,IAAIO,KAAJ,CAAUH,UAAU,CAACJ,KAArB,CAHP;;AAAA;AAAA,uBAIQX,GAAG,CAACiB,IAJZ,EAITc,GAJS,cAIbpC,EAJa,EAIDwB,IAJC;;AAAA,eAKjBA,IAAI,CAACjC,IALY;AAAA;AAAA;AAAA;;AAAA;AAAA,+CAMO,uBAAYkC,OAAZ,CAAoB;AAAElC,YAAAA,IAAI,EAAE;AAAEmC,cAAAA,MAAM,EAAE,IAAIC,MAAJ,CAAWH,IAAI,CAACjC,IAAhB,CAAV;AAAiCqC,cAAAA,QAAQ,EAAE;AAA3C,aAAR;AAA0DjB,YAAAA,QAAQ,EAAE;AAApE,WAApB,CANP;;AAAA;AAMb0B,UAAAA,WANa;;AAAA,gBAOfA,WAAW,IAAI,CAACA,WAAW,CAACD,GAAZ,CAAgBE,MAAhB,CAAuBF,GAAvB,CAPD;AAAA;AAAA;AAAA;;AAAA,gBAQX,IAAIb,KAAJ,CAAUO,mBAAOC,uBAAjB,CARW;;AAAA;AAAA,eAYjBP,IAAI,WAZa;AAAA;AAAA;AAAA;;AAAA;AAAA,+CAab,uBAAYQ,UAAZ,CAAuB,EAAvB,EAA2B;AAAEC,YAAAA,IAAI,EAAE;AAAE,yBAAS;AAAX;AAAR,WAA3B,CAba;;AAAA;AAAA;AAAA,+CAeF,uBAAYM,gBAAZ,CAA6B;AAAEH,YAAAA,GAAG,EAAHA,GAAF;AAAOzB,YAAAA,QAAQ,EAAE;AAAjB,WAA7B,EAAuD;AAAEsB,YAAAA,IAAI,EAAE,mBAAQT,IAAR;AAAR,WAAvD,EAAgF;AAAE,mBAAK;AAAP,WAAhF,CAfE;;AAAA;AAefZ,UAAAA,IAfe;AAAA,4CAgBdN,GAAG,CAACO,IAAJ,CAAS;AAAED,YAAAA,IAAI,EAAJA;AAAF,WAAT,CAhBc;;AAAA;AAAA;AAAA;AAkBrBE,UAAAA,OAAO,CAACC,GAAR;;AAlBqB,gBAmBjB,aAAIG,OAAJ,KAAgBY,mBAAOC,uBAnBN;AAAA;AAAA;AAAA;;AAAA,4CAmBsCzB,GAAG,CAACR,MAAJ,CAAW,GAAX,EAAgBe,IAAhB,CAAqB;AAAEG,YAAAA,KAAK,EAAE,IAAT;AAAeC,YAAAA,MAAM,EAAE,aAAIC;AAA3B,WAArB,CAnBtC;;AAAA;AAAA,4CAoBdZ,GAAG,CAACR,MAAJ,CAAW,GAAX,EAAgBe,IAAhB,CAAqB;AAAEG,YAAAA,KAAK,EAAE,IAAT;AAAeC,YAAAA,MAAM,EAAE,aAAIC;AAA3B,WAArB,CApBc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlB;;;;AAwBA,IAAMsB,SAAS,GAAG,SAAZA,SAAY,CAAOnC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEfc,UAAAA,UAFe,GAEF/B,gBAAIgC,QAAJ,CAAahB,GAAG,CAACiB,IAAjB,EAAuBrB,YAAvB,CAFE;;AAAA,eAGjBmB,UAAU,CAACJ,KAHM;AAAA;AAAA;AAAA;;AAAA,gBAGO,IAAIO,KAAJ,CAAUH,UAAU,CAACJ,KAArB,CAHP;;AAAA;AAKToB,UAAAA,GALS,GAKD/B,GAAG,CAACiB,IALH,CAKbtB,EALa;AAAA;AAAA,+CAOf,uBAAYgC,UAAZ,CAAuB;AAAEI,YAAAA,GAAG,EAAE;AAAEK,cAAAA,GAAG,EAAEL;AAAP;AAAP,WAAvB,EAA8C;AAAEH,YAAAA,IAAI,EAAE;AAAEtB,cAAAA,QAAQ,EAAE;AAAZ;AAAR,WAA9C,CAPe;;AAAA;AAAA,4CAQdL,GAAG,CAACO,IAAJ,CAAS;AAAED,YAAAA,IAAI,EAAE;AAAR,WAAT,CARc;;AAAA;AAAA;AAAA;AAUrBE,UAAAA,OAAO,CAACC,GAAR;AAVqB,4CAWdT,GAAG,CAACR,MAAJ,CAAW,GAAX,EAAgBe,IAAhB,CAAqB;AAAEG,YAAAA,KAAK,EAAE,IAAT;AAAeC,YAAAA,MAAM,EAAE,aAAIC;AAA3B,WAArB,CAXc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlB",
      "sourceRoot": "/app/src/controllers",
      "sourcesContent": [
        "import _TaxModel from '../models/tax'\nimport ERRORS from '../constants/errors'\nimport Joi from '@hapi/joi'\nimport { flatten } from 'flat'\n\nconst createSchema = Joi.object({\n  name: Joi.string().required(),\n  value: Joi.number().required(),\n  unit: Joi.string().required(),\n  default: Joi.boolean().optional(),\n  status: Joi.boolean().optional()\n})\n\nconst updateSchema = Joi.object({\n  id: Joi.string().required(),\n  name: Joi.string().optional(),\n  value: Joi.number().optional(),\n  unit: Joi.string().optional(),\n  default: Joi.boolean().optional(),\n  status: Joi.boolean().optional()\n})\n\nconst deleteSchema = Joi.object({\n  id: Joi.array().items(Joi.string()).required()\n})\n\nexport const getTaxes = async (req, res) => {\n  try {\n    const { page, limit } = req.query\n    const data = await _TaxModel().paginate({ isDelete: false }, { page, limit })\n    return res.json(data)\n  } catch (err) {\n    console.log(err)\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const createTax = async (req, res) => {\n  try {\n    const validation = Joi.validate(req.body, createSchema)\n    if (validation.error) throw new Error(validation.error)\n    const { name, ...rest } = req.body\n    const tax = await _TaxModel().findOne({ name: { $regex: new RegExp(name), $options: 'i' }, isDelete: false })\n    if (tax) {\n      throw new Error(ERRORS.RESOURCE_ALREADY_EXISTS)\n    }\n\n    if (rest.default) {\n      await _TaxModel().updateMany({}, { $set: { default: false } })\n    }\n    const data = await _TaxModel().create({\n      name, ...rest\n    })\n\n    return res.json({ data })\n  } catch (err) {\n    console.log(err)\n    if (err.message === ERRORS.RESOURCE_ALREADY_EXISTS) return res.status(409).json({ error: true, reason: err.message })\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const updateTax = async (req, res) => {\n  try {\n    const validation = Joi.validate(req.body, updateSchema)\n    if (validation.error) throw new Error(validation.error)\n    const { id: _id, ...rest } = req.body\n    if (rest.name) {\n      const existingTax = await _TaxModel().findOne({ name: { $regex: new RegExp(rest.name), $options: 'i' }, isDelete: false })\n      if (existingTax && !existingTax._id.equals(_id)) {\n        throw new Error(ERRORS.RESOURCE_ALREADY_EXISTS)\n      }\n    }\n\n    if (rest.default) {\n      await _TaxModel().updateMany({}, { $set: { default: false } })\n    }\n    const data = await _TaxModel().findOneAndUpdate({ _id, isDelete: false }, { $set: flatten(rest) }, { new: true })\n    return res.json({ data })\n  } catch (err) {\n    console.log(err)\n    if (err.message === ERRORS.RESOURCE_ALREADY_EXISTS) return res.status(409).json({ error: true, reason: err.message })\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const deleteTax = async (req, res) => {\n  try {\n    const validation = Joi.validate(req.body, deleteSchema)\n    if (validation.error) throw new Error(validation.error)\n\n    const { id: _id } = req.body\n\n    await _TaxModel().updateMany({ _id: { $in: _id } }, { $set: { isDelete: true } })\n    return res.json({ data: {} })\n  } catch (err) {\n    console.log(err)\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573021617939
  },
  "{\"sourceRoot\":\"/app/src/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/models/tax.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/models/tax.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/models/tax.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/models/tax.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/models",
        "sourceFileName": "tax.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongoose = require(\"mongoose\");\n\nvar _multiTenant = require(\"../lib/multiTenant\");\n\nvar clientSchema = new _mongoose.Schema({\n  name: {\n    type: String,\n    required: true\n  },\n  value: {\n    type: Number,\n    required: true\n  },\n  unit: {\n    type: String,\n    required: true,\n    \"enum\": ['PERCENTAGE', 'CURRENCY'],\n    \"default\": 'PERCENTAGE'\n  },\n  \"default\": {\n    type: Boolean,\n    \"default\": false\n  },\n  status: {\n    type: Boolean,\n    \"default\": true\n  },\n  isDelete: {\n    type: Boolean,\n    \"default\": false\n  }\n}, {\n  timestamps: true,\n  skipVersioning: true\n});\n\nvar _default = (0, _multiTenant.tenantModel)('Tax', clientSchema);\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRheC5qcyJdLCJuYW1lcyI6WyJjbGllbnRTY2hlbWEiLCJTY2hlbWEiLCJuYW1lIiwidHlwZSIsIlN0cmluZyIsInJlcXVpcmVkIiwidmFsdWUiLCJOdW1iZXIiLCJ1bml0IiwiQm9vbGVhbiIsInN0YXR1cyIsImlzRGVsZXRlIiwidGltZXN0YW1wcyIsInNraXBWZXJzaW9uaW5nIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBRUEsSUFBTUEsWUFBWSxHQUFHLElBQUlDLGdCQUFKLENBQVc7QUFDOUJDLEVBQUFBLElBQUksRUFBRTtBQUNKQyxJQUFBQSxJQUFJLEVBQUVDLE1BREY7QUFFSkMsSUFBQUEsUUFBUSxFQUFFO0FBRk4sR0FEd0I7QUFLOUJDLEVBQUFBLEtBQUssRUFBRTtBQUNMSCxJQUFBQSxJQUFJLEVBQUVJLE1BREQ7QUFFTEYsSUFBQUEsUUFBUSxFQUFFO0FBRkwsR0FMdUI7QUFTOUJHLEVBQUFBLElBQUksRUFBRTtBQUNKTCxJQUFBQSxJQUFJLEVBQUVDLE1BREY7QUFFSkMsSUFBQUEsUUFBUSxFQUFFLElBRk47QUFHSixZQUFNLENBQUMsWUFBRCxFQUFlLFVBQWYsQ0FIRjtBQUlKLGVBQVM7QUFKTCxHQVR3QjtBQWU5QixhQUFTO0FBQ1BGLElBQUFBLElBQUksRUFBRU0sT0FEQztBQUVQLGVBQVM7QUFGRixHQWZxQjtBQW1COUJDLEVBQUFBLE1BQU0sRUFBRTtBQUNOUCxJQUFBQSxJQUFJLEVBQUVNLE9BREE7QUFFTixlQUFTO0FBRkgsR0FuQnNCO0FBdUI5QkUsRUFBQUEsUUFBUSxFQUFFO0FBQ1JSLElBQUFBLElBQUksRUFBRU0sT0FERTtBQUVSLGVBQVM7QUFGRDtBQXZCb0IsQ0FBWCxFQTRCbEI7QUFBRUcsRUFBQUEsVUFBVSxFQUFFLElBQWQ7QUFBb0JDLEVBQUFBLGNBQWMsRUFBRTtBQUFwQyxDQTVCa0IsQ0FBckI7O2VBOEJlLDhCQUFZLEtBQVosRUFBbUJiLFlBQW5CLEMiLCJzb3VyY2VSb290IjoiL2FwcC9zcmMvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU2NoZW1hIH0gZnJvbSAnbW9uZ29vc2UnXG5pbXBvcnQgeyB0ZW5hbnRNb2RlbCB9IGZyb20gJy4uL2xpYi9tdWx0aVRlbmFudCdcblxuY29uc3QgY2xpZW50U2NoZW1hID0gbmV3IFNjaGVtYSh7XG4gIG5hbWU6IHtcbiAgICB0eXBlOiBTdHJpbmcsXG4gICAgcmVxdWlyZWQ6IHRydWVcbiAgfSxcbiAgdmFsdWU6IHtcbiAgICB0eXBlOiBOdW1iZXIsXG4gICAgcmVxdWlyZWQ6IHRydWVcbiAgfSxcbiAgdW5pdDoge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgICByZXF1aXJlZDogdHJ1ZSxcbiAgICBlbnVtOiBbJ1BFUkNFTlRBR0UnLCAnQ1VSUkVOQ1knXSxcbiAgICBkZWZhdWx0OiAnUEVSQ0VOVEFHRSdcbiAgfSxcbiAgZGVmYXVsdDoge1xuICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgZGVmYXVsdDogZmFsc2VcbiAgfSxcbiAgc3RhdHVzOiB7XG4gICAgdHlwZTogQm9vbGVhbixcbiAgICBkZWZhdWx0OiB0cnVlXG4gIH0sXG4gIGlzRGVsZXRlOiB7XG4gICAgdHlwZTogQm9vbGVhbixcbiAgICBkZWZhdWx0OiBmYWxzZVxuICB9XG5cbn0sIHsgdGltZXN0YW1wczogdHJ1ZSwgc2tpcFZlcnNpb25pbmc6IHRydWUgfSlcblxuZXhwb3J0IGRlZmF1bHQgdGVuYW50TW9kZWwoJ1RheCcsIGNsaWVudFNjaGVtYSlcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "tax.js"
      ],
      "names": [
        "clientSchema",
        "Schema",
        "name",
        "type",
        "String",
        "required",
        "value",
        "Number",
        "unit",
        "Boolean",
        "status",
        "isDelete",
        "timestamps",
        "skipVersioning"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AAEA,IAAMA,YAAY,GAAG,IAAIC,gBAAJ,CAAW;AAC9BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAEC,MADF;AAEJC,IAAAA,QAAQ,EAAE;AAFN,GADwB;AAK9BC,EAAAA,KAAK,EAAE;AACLH,IAAAA,IAAI,EAAEI,MADD;AAELF,IAAAA,QAAQ,EAAE;AAFL,GALuB;AAS9BG,EAAAA,IAAI,EAAE;AACJL,IAAAA,IAAI,EAAEC,MADF;AAEJC,IAAAA,QAAQ,EAAE,IAFN;AAGJ,YAAM,CAAC,YAAD,EAAe,UAAf,CAHF;AAIJ,eAAS;AAJL,GATwB;AAe9B,aAAS;AACPF,IAAAA,IAAI,EAAEM,OADC;AAEP,eAAS;AAFF,GAfqB;AAmB9BC,EAAAA,MAAM,EAAE;AACNP,IAAAA,IAAI,EAAEM,OADA;AAEN,eAAS;AAFH,GAnBsB;AAuB9BE,EAAAA,QAAQ,EAAE;AACRR,IAAAA,IAAI,EAAEM,OADE;AAER,eAAS;AAFD;AAvBoB,CAAX,EA4BlB;AAAEG,EAAAA,UAAU,EAAE,IAAd;AAAoBC,EAAAA,cAAc,EAAE;AAApC,CA5BkB,CAArB;;eA8Be,8BAAY,KAAZ,EAAmBb,YAAnB,C",
      "sourceRoot": "/app/src/models",
      "sourcesContent": [
        "import { Schema } from 'mongoose'\nimport { tenantModel } from '../lib/multiTenant'\n\nconst clientSchema = new Schema({\n  name: {\n    type: String,\n    required: true\n  },\n  value: {\n    type: Number,\n    required: true\n  },\n  unit: {\n    type: String,\n    required: true,\n    enum: ['PERCENTAGE', 'CURRENCY'],\n    default: 'PERCENTAGE'\n  },\n  default: {\n    type: Boolean,\n    default: false\n  },\n  status: {\n    type: Boolean,\n    default: true\n  },\n  isDelete: {\n    type: Boolean,\n    default: false\n  }\n\n}, { timestamps: true, skipVersioning: true })\n\nexport default tenantModel('Tax', clientSchema)\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573021617943
  },
  "{\"sourceRoot\":\"/app/src/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/models/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/models/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/models/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/models/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/models",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _business = _interopRequireDefault(require(\"./business\"));\n\nvar _store = _interopRequireDefault(require(\"./store\"));\n\nvar _user = _interopRequireDefault(require(\"./user\"));\n\nvar _verificationToken = _interopRequireDefault(require(\"./verificationToken\"));\n\nvar _role = _interopRequireDefault(require(\"./role\"));\n\nvar _permission = _interopRequireDefault(require(\"./permission\"));\n\nvar _color = _interopRequireDefault(require(\"./color\"));\n\nvar _manufacturer = _interopRequireDefault(require(\"./manufacturer\"));\n\nvar _device = _interopRequireDefault(require(\"./device\"));\n\nvar _productCategory = _interopRequireDefault(require(\"./productCategory\"));\n\nvar _repairCategory = _interopRequireDefault(require(\"./repairCategory\"));\n\nvar _vendor = _interopRequireDefault(require(\"./vendor\"));\n\nvar _physicalLocation = _interopRequireDefault(require(\"./physicalLocation\"));\n\nvar _inventory = _interopRequireDefault(require(\"./inventory\"));\n\nvar _inventoryStock = _interopRequireDefault(require(\"./inventoryStock\"));\n\nvar _tax = _interopRequireDefault(require(\"./tax\"));\n\nvar _estimate = _interopRequireDefault(require(\"./estimate\"));\n\nvar _client = _interopRequireDefault(require(\"./client\"));\n\nvar _invoice = _interopRequireDefault(require(\"./invoice\"));\n\nvar _job = _interopRequireDefault(require(\"./job\"));\n\n(0, _business[\"default\"])();\n(0, _store[\"default\"])();\n(0, _user[\"default\"])();\n(0, _verificationToken[\"default\"])();\n(0, _role[\"default\"])();\n(0, _permission[\"default\"])();\n(0, _color[\"default\"])();\n(0, _manufacturer[\"default\"])();\n(0, _device[\"default\"])();\n(0, _productCategory[\"default\"])();\n(0, _repairCategory[\"default\"])();\n(0, _vendor[\"default\"])();\n(0, _physicalLocation[\"default\"])();\n(0, _inventory[\"default\"])();\n(0, _inventoryStock[\"default\"])();\n(0, _tax[\"default\"])();\n(0, _estimate[\"default\"])();\n(0, _client[\"default\"])();\n(0, _invoice[\"default\"])();\n(0, _job[\"default\"])();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6Ii9hcHAvc3JjL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBidXNpbmVzc01vZGVsIGZyb20gJy4vYnVzaW5lc3MnXG5pbXBvcnQgc3RvcmVNb2RlbCBmcm9tICcuL3N0b3JlJ1xuaW1wb3J0IHVzZXJNb2RlbCBmcm9tICcuL3VzZXInXG5pbXBvcnQgdmVyaWZpY2F0aW9uVG9rZW5Nb2RlbCBmcm9tICcuL3ZlcmlmaWNhdGlvblRva2VuJ1xuaW1wb3J0IHJvbGVNb2RlbCBmcm9tICcuL3JvbGUnXG5pbXBvcnQgcGVybWlzc2lvbk1vZGVsIGZyb20gJy4vcGVybWlzc2lvbidcbmltcG9ydCBjb2xvck1vZGVsIGZyb20gJy4vY29sb3InXG5pbXBvcnQgbWFudWZhY3R1cmVyTW9kZWwgZnJvbSAnLi9tYW51ZmFjdHVyZXInXG5pbXBvcnQgZGV2aWNlTW9kZWwgZnJvbSAnLi9kZXZpY2UnXG5pbXBvcnQgcHJvZHVjdENhdGVnb3J5TW9kZWwgZnJvbSAnLi9wcm9kdWN0Q2F0ZWdvcnknXG5pbXBvcnQgcmVwYWlyQ2F0ZWdvcnlNb2RlbCBmcm9tICcuL3JlcGFpckNhdGVnb3J5J1xuaW1wb3J0IHZlbmRvck1vZGVsIGZyb20gJy4vdmVuZG9yJ1xuaW1wb3J0IHBoeXNpY2FsTG9jYXRpb25Nb2RlbCBmcm9tICcuL3BoeXNpY2FsTG9jYXRpb24nXG5pbXBvcnQgaW52ZW50b3J5TW9kZWwgZnJvbSAnLi9pbnZlbnRvcnknXG5pbXBvcnQgaW52ZW50b3J5U3RvY2tNb2RlbCBmcm9tICcuL2ludmVudG9yeVN0b2NrJ1xuaW1wb3J0IHRheE1vZGVsIGZyb20gJy4vdGF4J1xuaW1wb3J0IGVzdGltYXRlTW9kZWwgZnJvbSAnLi9lc3RpbWF0ZSdcbmltcG9ydCBjbGllbnRNb2RlbCBmcm9tICcuL2NsaWVudCdcbmltcG9ydCBpbnZvaWNlTW9kZWwgZnJvbSAnLi9pbnZvaWNlJ1xuaW1wb3J0IGpvYk1vZGVsIGZyb20gJy4vam9iJ1xuXG5idXNpbmVzc01vZGVsKClcbnN0b3JlTW9kZWwoKVxudXNlck1vZGVsKClcbnZlcmlmaWNhdGlvblRva2VuTW9kZWwoKVxucm9sZU1vZGVsKClcbnBlcm1pc3Npb25Nb2RlbCgpXG5jb2xvck1vZGVsKClcbm1hbnVmYWN0dXJlck1vZGVsKClcbmRldmljZU1vZGVsKClcbnByb2R1Y3RDYXRlZ29yeU1vZGVsKClcbnJlcGFpckNhdGVnb3J5TW9kZWwoKVxudmVuZG9yTW9kZWwoKVxucGh5c2ljYWxMb2NhdGlvbk1vZGVsKClcbmludmVudG9yeU1vZGVsKClcbmludmVudG9yeVN0b2NrTW9kZWwoKVxudGF4TW9kZWwoKVxuZXN0aW1hdGVNb2RlbCgpXG5jbGllbnRNb2RlbCgpXG5pbnZvaWNlTW9kZWwoKVxuam9iTW9kZWwoKVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [],
      "mappings": ";;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
      "sourceRoot": "/app/src/models",
      "sourcesContent": [
        "import businessModel from './business'\nimport storeModel from './store'\nimport userModel from './user'\nimport verificationTokenModel from './verificationToken'\nimport roleModel from './role'\nimport permissionModel from './permission'\nimport colorModel from './color'\nimport manufacturerModel from './manufacturer'\nimport deviceModel from './device'\nimport productCategoryModel from './productCategory'\nimport repairCategoryModel from './repairCategory'\nimport vendorModel from './vendor'\nimport physicalLocationModel from './physicalLocation'\nimport inventoryModel from './inventory'\nimport inventoryStockModel from './inventoryStock'\nimport taxModel from './tax'\nimport estimateModel from './estimate'\nimport clientModel from './client'\nimport invoiceModel from './invoice'\nimport jobModel from './job'\n\nbusinessModel()\nstoreModel()\nuserModel()\nverificationTokenModel()\nroleModel()\npermissionModel()\ncolorModel()\nmanufacturerModel()\ndeviceModel()\nproductCategoryModel()\nrepairCategoryModel()\nvendorModel()\nphysicalLocationModel()\ninventoryModel()\ninventoryStockModel()\ntaxModel()\nestimateModel()\nclientModel()\ninvoiceModel()\njobModel()\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1575001852206
  },
  "{\"sourceRoot\":\"/app/src/middlewares\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/middlewares/pagination.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/middlewares",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/middlewares/pagination.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/middlewares/pagination.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/middlewares/pagination.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/middlewares",
        "sourceFileName": "pagination.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.pagination = void 0;\n\nvar pagination = function pagination(options) {\n  return function (req, res, next) {\n    var page = parseInt(req.query.page);\n    var limit = parseInt(req.query.limit);\n    req.query.page = page || options.page;\n    req.query.limit = limit > options.maxLimit ? options.maxLimit : limit || options.limit;\n    next();\n  };\n};\n\nexports.pagination = pagination;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhZ2luYXRpb24uanMiXSwibmFtZXMiOlsicGFnaW5hdGlvbiIsIm9wdGlvbnMiLCJyZXEiLCJyZXMiLCJuZXh0IiwicGFnZSIsInBhcnNlSW50IiwicXVlcnkiLCJsaW1pdCIsIm1heExpbWl0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQU8sSUFBTUEsVUFBVSxHQUFHLFNBQWJBLFVBQWEsQ0FBQUMsT0FBTztBQUFBLFNBQUksVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsRUFBb0I7QUFDdkQsUUFBTUMsSUFBSSxHQUFHQyxRQUFRLENBQUNKLEdBQUcsQ0FBQ0ssS0FBSixDQUFVRixJQUFYLENBQXJCO0FBQ0EsUUFBTUcsS0FBSyxHQUFHRixRQUFRLENBQUNKLEdBQUcsQ0FBQ0ssS0FBSixDQUFVQyxLQUFYLENBQXRCO0FBRUFOLElBQUFBLEdBQUcsQ0FBQ0ssS0FBSixDQUFVRixJQUFWLEdBQWlCQSxJQUFJLElBQUlKLE9BQU8sQ0FBQ0ksSUFBakM7QUFDQUgsSUFBQUEsR0FBRyxDQUFDSyxLQUFKLENBQVVDLEtBQVYsR0FBa0JBLEtBQUssR0FBR1AsT0FBTyxDQUFDUSxRQUFoQixHQUEyQlIsT0FBTyxDQUFDUSxRQUFuQyxHQUE4Q0QsS0FBSyxJQUFJUCxPQUFPLENBQUNPLEtBQWpGO0FBRUFKLElBQUFBLElBQUk7QUFDTCxHQVJnQztBQUFBLENBQTFCIiwic291cmNlUm9vdCI6Ii9hcHAvc3JjL21pZGRsZXdhcmVzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IHBhZ2luYXRpb24gPSBvcHRpb25zID0+IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICBjb25zdCBwYWdlID0gcGFyc2VJbnQocmVxLnF1ZXJ5LnBhZ2UpXG4gIGNvbnN0IGxpbWl0ID0gcGFyc2VJbnQocmVxLnF1ZXJ5LmxpbWl0KVxuXG4gIHJlcS5xdWVyeS5wYWdlID0gcGFnZSB8fCBvcHRpb25zLnBhZ2VcbiAgcmVxLnF1ZXJ5LmxpbWl0ID0gbGltaXQgPiBvcHRpb25zLm1heExpbWl0ID8gb3B0aW9ucy5tYXhMaW1pdCA6IGxpbWl0IHx8IG9wdGlvbnMubGltaXRcblxuICBuZXh0KClcbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "pagination.js"
      ],
      "names": [
        "pagination",
        "options",
        "req",
        "res",
        "next",
        "page",
        "parseInt",
        "query",
        "limit",
        "maxLimit"
      ],
      "mappings": ";;;;;;;AAAO,IAAMA,UAAU,GAAG,SAAbA,UAAa,CAAAC,OAAO;AAAA,SAAI,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACvD,QAAMC,IAAI,GAAGC,QAAQ,CAACJ,GAAG,CAACK,KAAJ,CAAUF,IAAX,CAArB;AACA,QAAMG,KAAK,GAAGF,QAAQ,CAACJ,GAAG,CAACK,KAAJ,CAAUC,KAAX,CAAtB;AAEAN,IAAAA,GAAG,CAACK,KAAJ,CAAUF,IAAV,GAAiBA,IAAI,IAAIJ,OAAO,CAACI,IAAjC;AACAH,IAAAA,GAAG,CAACK,KAAJ,CAAUC,KAAV,GAAkBA,KAAK,GAAGP,OAAO,CAACQ,QAAhB,GAA2BR,OAAO,CAACQ,QAAnC,GAA8CD,KAAK,IAAIP,OAAO,CAACO,KAAjF;AAEAJ,IAAAA,IAAI;AACL,GARgC;AAAA,CAA1B",
      "sourceRoot": "/app/src/middlewares",
      "sourcesContent": [
        "export const pagination = options => (req, res, next) => {\n  const page = parseInt(req.query.page)\n  const limit = parseInt(req.query.limit)\n\n  req.query.page = page || options.page\n  req.query.limit = limit > options.maxLimit ? options.maxLimit : limit || options.limit\n\n  next()\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573021617939
  },
  "{\"sourceRoot\":\"/app/src/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/routes/estimates.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/routes/estimates.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/routes/estimates.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/routes/estimates.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/routes",
        "sourceFileName": "estimates.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _estimate = require(\"../controllers/estimate\");\n\nvar router = (0, _express.Router)();\nrouter.get('/', _estimate.getEstimates);\nrouter.get('/get_next_number', _estimate.getNextEstimateNumber);\nrouter.post('/create', _estimate.createEstimate);\nrouter.post('/delete', _estimate.deleteEstimates);\nrouter.post('/update', _estimate.updateEstimate);\nrouter.post('/update_status', _estimate.updateEsitmateStatus);\nrouter.post('/convert_estimate_to_job', _estimate.convertEstimateToJob);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVzdGltYXRlcy5qcyJdLCJuYW1lcyI6WyJyb3V0ZXIiLCJnZXQiLCJnZXRFc3RpbWF0ZXMiLCJnZXROZXh0RXN0aW1hdGVOdW1iZXIiLCJwb3N0IiwiY3JlYXRlRXN0aW1hdGUiLCJkZWxldGVFc3RpbWF0ZXMiLCJ1cGRhdGVFc3RpbWF0ZSIsInVwZGF0ZUVzaXRtYXRlU3RhdHVzIiwiY29udmVydEVzdGltYXRlVG9Kb2IiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFFQTs7QUFDQSxJQUFNQSxNQUFNLEdBQUcsc0JBQWY7QUFFQUEsTUFBTSxDQUFDQyxHQUFQLENBQVcsR0FBWCxFQUFnQkMsc0JBQWhCO0FBQ0FGLE1BQU0sQ0FBQ0MsR0FBUCxDQUFXLGtCQUFYLEVBQStCRSwrQkFBL0I7QUFDQUgsTUFBTSxDQUFDSSxJQUFQLENBQVksU0FBWixFQUF1QkMsd0JBQXZCO0FBQ0FMLE1BQU0sQ0FBQ0ksSUFBUCxDQUFZLFNBQVosRUFBdUJFLHlCQUF2QjtBQUNBTixNQUFNLENBQUNJLElBQVAsQ0FBWSxTQUFaLEVBQXVCRyx3QkFBdkI7QUFDQVAsTUFBTSxDQUFDSSxJQUFQLENBQVksZ0JBQVosRUFBOEJJLDhCQUE5QjtBQUNBUixNQUFNLENBQUNJLElBQVAsQ0FBWSwwQkFBWixFQUF3Q0ssOEJBQXhDO2VBRWVULE0iLCJzb3VyY2VSb290IjoiL2FwcC9zcmMvcm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUm91dGVyIH0gZnJvbSAnZXhwcmVzcydcblxuaW1wb3J0IHsgZ2V0RXN0aW1hdGVzLCBjcmVhdGVFc3RpbWF0ZSwgdXBkYXRlRXN0aW1hdGUsIGRlbGV0ZUVzdGltYXRlcywgZ2V0TmV4dEVzdGltYXRlTnVtYmVyLCB1cGRhdGVFc2l0bWF0ZVN0YXR1cywgY29udmVydEVzdGltYXRlVG9Kb2IgfSBmcm9tICcuLi9jb250cm9sbGVycy9lc3RpbWF0ZSdcbmNvbnN0IHJvdXRlciA9IFJvdXRlcigpXG5cbnJvdXRlci5nZXQoJy8nLCBnZXRFc3RpbWF0ZXMpXG5yb3V0ZXIuZ2V0KCcvZ2V0X25leHRfbnVtYmVyJywgZ2V0TmV4dEVzdGltYXRlTnVtYmVyKVxucm91dGVyLnBvc3QoJy9jcmVhdGUnLCBjcmVhdGVFc3RpbWF0ZSlcbnJvdXRlci5wb3N0KCcvZGVsZXRlJywgZGVsZXRlRXN0aW1hdGVzKVxucm91dGVyLnBvc3QoJy91cGRhdGUnLCB1cGRhdGVFc3RpbWF0ZSlcbnJvdXRlci5wb3N0KCcvdXBkYXRlX3N0YXR1cycsIHVwZGF0ZUVzaXRtYXRlU3RhdHVzKVxucm91dGVyLnBvc3QoJy9jb252ZXJ0X2VzdGltYXRlX3RvX2pvYicsIGNvbnZlcnRFc3RpbWF0ZVRvSm9iKVxuXG5leHBvcnQgZGVmYXVsdCByb3V0ZXJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "estimates.js"
      ],
      "names": [
        "router",
        "get",
        "getEstimates",
        "getNextEstimateNumber",
        "post",
        "createEstimate",
        "deleteEstimates",
        "updateEstimate",
        "updateEsitmateStatus",
        "convertEstimateToJob"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA;;AACA,IAAMA,MAAM,GAAG,sBAAf;AAEAA,MAAM,CAACC,GAAP,CAAW,GAAX,EAAgBC,sBAAhB;AACAF,MAAM,CAACC,GAAP,CAAW,kBAAX,EAA+BE,+BAA/B;AACAH,MAAM,CAACI,IAAP,CAAY,SAAZ,EAAuBC,wBAAvB;AACAL,MAAM,CAACI,IAAP,CAAY,SAAZ,EAAuBE,yBAAvB;AACAN,MAAM,CAACI,IAAP,CAAY,SAAZ,EAAuBG,wBAAvB;AACAP,MAAM,CAACI,IAAP,CAAY,gBAAZ,EAA8BI,8BAA9B;AACAR,MAAM,CAACI,IAAP,CAAY,0BAAZ,EAAwCK,8BAAxC;eAEeT,M",
      "sourceRoot": "/app/src/routes",
      "sourcesContent": [
        "import { Router } from 'express'\n\nimport { getEstimates, createEstimate, updateEstimate, deleteEstimates, getNextEstimateNumber, updateEsitmateStatus, convertEstimateToJob } from '../controllers/estimate'\nconst router = Router()\n\nrouter.get('/', getEstimates)\nrouter.get('/get_next_number', getNextEstimateNumber)\nrouter.post('/create', createEstimate)\nrouter.post('/delete', deleteEstimates)\nrouter.post('/update', updateEstimate)\nrouter.post('/update_status', updateEsitmateStatus)\nrouter.post('/convert_estimate_to_job', convertEstimateToJob)\n\nexport default router\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1575001852214
  },
  "{\"sourceRoot\":\"/app/src/controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/controllers/estimate.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/controllers/estimate.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/controllers/estimate.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/controllers/estimate.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/controllers",
        "sourceFileName": "estimate.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.convertEstimateToJob = exports.updateEsitmateStatus = exports.getNextEstimateNumber = exports.deleteEstimates = exports.updateEstimate = exports.createEstimate = exports.getEstimates = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _estimate = _interopRequireDefault(require(\"../models/estimate\"));\n\nvar _job = _interopRequireDefault(require(\"../models/job\"));\n\nvar _errors = _interopRequireDefault(require(\"../constants/errors\"));\n\nvar _joi = _interopRequireDefault(require(\"@hapi/joi\"));\n\nvar _flat = require(\"flat\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar createSchema = _joi[\"default\"].object({\n  estimateId: _joi[\"default\"].number().required(),\n  name: _joi[\"default\"].string().optional().allow(''),\n  client: _joi[\"default\"].string().optional().allow(''),\n  propertyAddress: _joi[\"default\"].object().required(),\n  lineItems: _joi[\"default\"].array().items({\n    item: _joi[\"default\"].string().required(),\n    qty: _joi[\"default\"].number().required(),\n    unitCost: _joi[\"default\"].number().required(),\n    description: _joi[\"default\"].string().allow('')\n  }).optional().allow([]),\n  discount: _joi[\"default\"].object({\n    type: _joi[\"default\"].string(),\n    value: _joi[\"default\"].number()\n  }).optional().allow({}),\n  tax: _joi[\"default\"].string().optional().allow(''),\n  poso: _joi[\"default\"].string().optional().allow(''),\n  issueDate: _joi[\"default\"].string().optional().allow(''),\n  clientMessage: _joi[\"default\"].string().optional().allow(''),\n  staffMessage: _joi[\"default\"].string().optional().allow(''),\n  deposit: _joi[\"default\"].optional(),\n  forceUpdate: _joi[\"default\"][\"boolean\"]().optional()\n});\n\nvar updateSchema = _joi[\"default\"].object({\n  id: _joi[\"default\"].string().required(),\n  estimateId: _joi[\"default\"].number().required(),\n  name: _joi[\"default\"].string().optional().allow(''),\n  client: _joi[\"default\"].string().optional().allow(''),\n  propertyAddress: _joi[\"default\"].object(),\n  lineItems: _joi[\"default\"].array().items({\n    item: _joi[\"default\"].string(),\n    qty: _joi[\"default\"].number(),\n    unitCost: _joi[\"default\"].number(),\n    description: _joi[\"default\"].string().allow('')\n  }).optional().allow([]),\n  discount: _joi[\"default\"].object({\n    type: _joi[\"default\"].string(),\n    value: _joi[\"default\"].number()\n  }).optional().allow({}),\n  tax: _joi[\"default\"].string().optional().allow(''),\n  poso: _joi[\"default\"].string().optional().allow(''),\n  issueDate: _joi[\"default\"].string().optional().allow(''),\n  clientMessage: _joi[\"default\"].string().optional().allow(''),\n  staffMessage: _joi[\"default\"].string().optional().allow(''),\n  deposit: _joi[\"default\"].optional(),\n  forceUpdate: _joi[\"default\"][\"boolean\"]().optional()\n});\n\nvar deleteSchema = _joi[\"default\"].object({\n  id: _joi[\"default\"].array().items(_joi[\"default\"].string()).required()\n});\n\nvar updateEsitmateStatusSchema = _joi[\"default\"].object({\n  id: _joi[\"default\"].string().required(),\n  status: _joi[\"default\"].string().valid('DRAFT', 'AWAITING', 'APPROVED', 'CONVERTED', 'ARCHIVED').required()\n});\n\nvar convertEstimateToJobSchema = _joi[\"default\"].object({\n  id: _joi[\"default\"].string().required()\n});\n\nvar formatSortData = function formatSortData() {\n  var sort = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  if (!sort || sort.length === 0) return {};\n  return sort.reduce(function (s, item) {\n    var _item$split = item.split('.'),\n        _item$split2 = (0, _slicedToArray2[\"default\"])(_item$split, 2),\n        key = _item$split2[0],\n        value = _item$split2[1];\n\n    switch (value) {\n      case 'asc':\n        return _objectSpread({}, s, (0, _defineProperty2[\"default\"])({}, key, 1));\n\n      case 'desc':\n        return _objectSpread({}, s, (0, _defineProperty2[\"default\"])({}, key, -1));\n\n      default:\n        return s;\n    }\n  }, {});\n};\n\nvar getNewJobNumber = function getNewJobNumber() {\n  var data;\n  return _regenerator[\"default\"].async(function getNewJobNumber$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regenerator[\"default\"].awrap((0, _job[\"default\"])().findOne({}, {}, {\n            sort: {\n              jobId: -1\n            }\n          }));\n\n        case 2:\n          data = _context.sent;\n\n          if (data) {\n            _context.next = 5;\n            break;\n          }\n\n          return _context.abrupt(\"return\", 1);\n\n        case 5:\n          return _context.abrupt(\"return\", parseInt(data.jobId) + 1);\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nvar getEstimates = function getEstimates(req, res) {\n  var _req$query, page, limit, _id, status, customerId, dateFrom, dateTo, text, _req$query$sort, sort, data, filter, sorts, _data;\n\n  return _regenerator[\"default\"].async(function getEstimates$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _req$query = req.query, page = _req$query.page, limit = _req$query.limit, _id = _req$query.id, status = _req$query.status, customerId = _req$query.customerId, dateFrom = _req$query.dateFrom, dateTo = _req$query.dateTo, text = _req$query.text, _req$query$sort = _req$query.sort, sort = _req$query$sort === void 0 ? [] : _req$query$sort;\n\n          if (!_id) {\n            _context2.next = 9;\n            break;\n          }\n\n          _context2.next = 5;\n          return _regenerator[\"default\"].awrap((0, _estimate[\"default\"])().findOne({\n            isDelete: false,\n            _id: _id\n          }).populate([{\n            path: 'client'\n          }, {\n            path: 'lineItems.item',\n            select: 'type name description taxExempt inventoryStock'\n          }, {\n            path: 'tax'\n          }]));\n\n        case 5:\n          data = _context2.sent;\n          return _context2.abrupt(\"return\", res.json({\n            data: data\n          }));\n\n        case 9:\n          /**\n           * Filters\n           */\n          filter = {\n            $and: []\n          };\n          /**\n           * Sorts\n           */\n\n          sorts = formatSortData(sort);\n          if (status) filter.$and.push({\n            status: status\n          });\n          if (customerId) filter.$and.push({\n            client: customerId\n          });\n          if (dateFrom) filter.$and.push({\n            createdAt: {\n              $gte: new Date(dateFrom)\n            }\n          });\n          if (dateTo) filter.$and.push({\n            createdAt: {\n              $lte: new Date(dateTo)\n            }\n          });\n          if (text) filter.$and.push({\n            $or: [{\n              estimateId: text\n            }, {\n              name: {\n                $regex: new RegExp(text.split(' ').join('|')),\n                $options: 'i'\n              }\n            }]\n          });\n          if (filter.$and.length === 0) filter = {};\n          _context2.next = 19;\n          return _regenerator[\"default\"].awrap((0, _estimate[\"default\"])().paginate(_objectSpread({\n            isDelete: false\n          }, filter), {\n            page: page,\n            limit: limit,\n            sort: _objectSpread({}, sorts),\n            populate: [{\n              path: 'client'\n            }, {\n              path: 'lineItems.item',\n              select: 'type name description taxExempt inventoryStock'\n            }, {\n              path: 'tax'\n            }]\n          }));\n\n        case 19:\n          _data = _context2.sent;\n          return _context2.abrupt(\"return\", res.json(_data));\n\n        case 21:\n          _context2.next = 27;\n          break;\n\n        case 23:\n          _context2.prev = 23;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0);\n          return _context2.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context2.t0.message\n          }));\n\n        case 27:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 23]]);\n};\n\nexports.getEstimates = getEstimates;\n\nvar createEstimate = function createEstimate(req, res) {\n  var validation, storeId, _req$body, forceUpdate, rest, existing, data;\n\n  return _regenerator[\"default\"].async(function createEstimate$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          validation = _joi[\"default\"].validate(req.body, createSchema);\n\n          if (!validation.error) {\n            _context3.next = 4;\n            break;\n          }\n\n          throw new Error(validation.error);\n\n        case 4:\n          storeId = req.storeId;\n          _req$body = req.body, forceUpdate = _req$body.forceUpdate, rest = (0, _objectWithoutProperties2[\"default\"])(_req$body, [\"forceUpdate\"]);\n\n          if (forceUpdate) {\n            _context3.next = 12;\n            break;\n          }\n\n          _context3.next = 9;\n          return _regenerator[\"default\"].awrap((0, _estimate[\"default\"])().findOne({\n            estimateId: rest.estimateId\n          }));\n\n        case 9:\n          existing = _context3.sent;\n\n          if (!existing) {\n            _context3.next = 12;\n            break;\n          }\n\n          throw new Error(_errors[\"default\"].RESOURCE_ALREADY_EXISTS);\n\n        case 12:\n          _context3.next = 14;\n          return _regenerator[\"default\"].awrap((0, _estimate[\"default\"])().create(_objectSpread({}, rest, {\n            storeId: storeId\n          })));\n\n        case 14:\n          data = _context3.sent;\n          return _context3.abrupt(\"return\", res.json({\n            data: data\n          }));\n\n        case 18:\n          _context3.prev = 18;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(_context3.t0);\n\n          if (!(_context3.t0.message === _errors[\"default\"].RESOURCE_ALREADY_EXISTS)) {\n            _context3.next = 23;\n            break;\n          }\n\n          return _context3.abrupt(\"return\", res.status(409).json({\n            error: true,\n            reason: _context3.t0.message\n          }));\n\n        case 23:\n          return _context3.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context3.t0.message\n          }));\n\n        case 24:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 18]]);\n};\n\nexports.createEstimate = createEstimate;\n\nvar updateEstimate = function updateEstimate(req, res) {\n  var validation, _req$body2, _id, forceUpdate, rest, found, data;\n\n  return _regenerator[\"default\"].async(function updateEstimate$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          validation = _joi[\"default\"].validate(req.body, updateSchema);\n\n          if (!validation.error) {\n            _context4.next = 4;\n            break;\n          }\n\n          throw new Error(validation.error);\n\n        case 4:\n          _req$body2 = req.body, _id = _req$body2.id, forceUpdate = _req$body2.forceUpdate, rest = (0, _objectWithoutProperties2[\"default\"])(_req$body2, [\"id\", \"forceUpdate\"]);\n\n          if (forceUpdate) {\n            _context4.next = 11;\n            break;\n          }\n\n          _context4.next = 8;\n          return _regenerator[\"default\"].awrap((0, _estimate[\"default\"])().findOne({\n            estimateId: rest.estimateId,\n            _id: {\n              $ne: _id\n            }\n          }));\n\n        case 8:\n          found = _context4.sent;\n\n          if (!found) {\n            _context4.next = 11;\n            break;\n          }\n\n          throw new Error(_errors[\"default\"].RESOURCE_ALREADY_EXISTS);\n\n        case 11:\n          _context4.next = 13;\n          return _regenerator[\"default\"].awrap((0, _estimate[\"default\"])().findOneAndUpdate({\n            _id: _id,\n            isDelete: false\n          }, {\n            $set: (0, _flat.flatten)(rest)\n          }, {\n            \"new\": true\n          }));\n\n        case 13:\n          data = _context4.sent;\n          return _context4.abrupt(\"return\", res.json({\n            data: data\n          }));\n\n        case 17:\n          _context4.prev = 17;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.log(_context4.t0);\n          return _context4.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context4.t0.message\n          }));\n\n        case 21:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, [[0, 17]]);\n};\n\nexports.updateEstimate = updateEstimate;\n\nvar deleteEstimates = function deleteEstimates(req, res) {\n  var validation, _id;\n\n  return _regenerator[\"default\"].async(function deleteEstimates$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          validation = _joi[\"default\"].validate(req.body, deleteSchema);\n\n          if (!validation.error) {\n            _context5.next = 4;\n            break;\n          }\n\n          throw new Error(validation.error);\n\n        case 4:\n          _id = req.body.id;\n          _context5.next = 7;\n          return _regenerator[\"default\"].awrap((0, _estimate[\"default\"])().updateMany({\n            _id: {\n              $in: _id\n            }\n          }, {\n            $set: {\n              isDelete: true\n            }\n          }));\n\n        case 7:\n          return _context5.abrupt(\"return\", res.json({\n            data: {}\n          }));\n\n        case 10:\n          _context5.prev = 10;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.log(_context5.t0);\n          return _context5.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context5.t0.message\n          }));\n\n        case 14:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, [[0, 10]]);\n};\n\nexports.deleteEstimates = deleteEstimates;\n\nvar getNextEstimateNumber = function getNextEstimateNumber(req, res) {\n  var result;\n  return _regenerator[\"default\"].async(function getNextEstimateNumber$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          _context6.next = 3;\n          return _regenerator[\"default\"].awrap((0, _estimate[\"default\"])().findOne({}, {}, {\n            sort: {\n              estimateId: -1\n            }\n          }));\n\n        case 3:\n          result = _context6.sent;\n\n          if (result) {\n            _context6.next = 6;\n            break;\n          }\n\n          return _context6.abrupt(\"return\", res.json({\n            data: {\n              estimateId: 1\n            }\n          }));\n\n        case 6:\n          return _context6.abrupt(\"return\", res.json({\n            data: {\n              estimateId: parseInt(result.estimateId) + 1\n            }\n          }));\n\n        case 9:\n          _context6.prev = 9;\n          _context6.t0 = _context6[\"catch\"](0);\n          console.log(_context6.t0);\n          return _context6.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context6.t0.message\n          }));\n\n        case 13:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, [[0, 9]]);\n};\n\nexports.getNextEstimateNumber = getNextEstimateNumber;\n\nvar updateEsitmateStatus = function updateEsitmateStatus(req, res) {\n  var validation, _req$body3, _id, status, result;\n\n  return _regenerator[\"default\"].async(function updateEsitmateStatus$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          validation = _joi[\"default\"].validate(req.body, updateEsitmateStatusSchema);\n\n          if (!validation.error) {\n            _context7.next = 4;\n            break;\n          }\n\n          throw new Error(validation.error);\n\n        case 4:\n          _req$body3 = req.body, _id = _req$body3.id, status = _req$body3.status;\n          _context7.next = 7;\n          return _regenerator[\"default\"].awrap((0, _estimate[\"default\"])().findOneAndUpdate({\n            _id: _id,\n            isDelete: false\n          }, {\n            $set: {\n              status: status\n            }\n          }, {\n            \"new\": true\n          }));\n\n        case 7:\n          result = _context7.sent;\n          return _context7.abrupt(\"return\", res.json({\n            data: result\n          }));\n\n        case 11:\n          _context7.prev = 11;\n          _context7.t0 = _context7[\"catch\"](0);\n          console.log(_context7.t0);\n          return _context7.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context7.t0.message\n          }));\n\n        case 15:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, null, null, [[0, 11]]);\n};\n\nexports.updateEsitmateStatus = updateEsitmateStatus;\n\nvar convertEstimateToJob = function convertEstimateToJob(req, res) {\n  var validation, _id, newJobNumber, result, client, lineItems, propertyAddress, storeId, expenses, data;\n\n  return _regenerator[\"default\"].async(function convertEstimateToJob$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.prev = 0;\n          validation = _joi[\"default\"].validate(req.body, convertEstimateToJobSchema);\n\n          if (!validation.error) {\n            _context8.next = 4;\n            break;\n          }\n\n          throw new Error(validation.error);\n\n        case 4:\n          _id = req.body.id;\n          _context8.next = 7;\n          return _regenerator[\"default\"].awrap(getNewJobNumber());\n\n        case 7:\n          newJobNumber = _context8.sent;\n          _context8.next = 10;\n          return _regenerator[\"default\"].awrap((0, _estimate[\"default\"])().findOneAndUpdate({\n            _id: _id,\n            isDelete: false,\n            status: {\n              $ne: 'CONVERTED'\n            }\n          }, {\n            $set: {\n              status: 'CONVERTED'\n            }\n          }, {\n            \"new\": true\n          }));\n\n        case 10:\n          result = _context8.sent;\n\n          if (result) {\n            _context8.next = 13;\n            break;\n          }\n\n          throw new Error(_errors[\"default\"].RESOURCE_NOT_FOUND);\n\n        case 13:\n          client = result.client, lineItems = result.lineItems, propertyAddress = result.propertyAddress, storeId = result.storeId;\n          expenses = lineItems.map(function (lineItem) {\n            var _lineItem$_doc = lineItem._doc,\n                _id = _lineItem$_doc._id,\n                rest = (0, _objectWithoutProperties2[\"default\"])(_lineItem$_doc, [\"_id\"]);\n            return {\n              lineItem: _objectSpread({}, rest)\n            };\n          });\n          _context8.next = 17;\n          return _regenerator[\"default\"].awrap((0, _job[\"default\"])().create({\n            jobId: newJobNumber,\n            title: 'From Estimate',\n            description: 'Estimate converted to Job',\n            client: client,\n            serviceAddress: _objectSpread({}, propertyAddress),\n            storeId: storeId,\n            expenses: expenses\n          }));\n\n        case 17:\n          data = _context8.sent;\n          return _context8.abrupt(\"return\", res.json({\n            data: data\n          }));\n\n        case 21:\n          _context8.prev = 21;\n          _context8.t0 = _context8[\"catch\"](0);\n          console.log(_context8.t0);\n          return _context8.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context8.t0.message\n          }));\n\n        case 25:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, null, null, [[0, 21]]);\n};\n\nexports.convertEstimateToJob = convertEstimateToJob;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "estimate.js"
      ],
      "names": [
        "createSchema",
        "Joi",
        "object",
        "estimateId",
        "number",
        "required",
        "name",
        "string",
        "optional",
        "allow",
        "client",
        "propertyAddress",
        "lineItems",
        "array",
        "items",
        "item",
        "qty",
        "unitCost",
        "description",
        "discount",
        "type",
        "value",
        "tax",
        "poso",
        "issueDate",
        "clientMessage",
        "staffMessage",
        "deposit",
        "forceUpdate",
        "updateSchema",
        "id",
        "deleteSchema",
        "updateEsitmateStatusSchema",
        "status",
        "valid",
        "convertEstimateToJobSchema",
        "formatSortData",
        "sort",
        "length",
        "reduce",
        "s",
        "split",
        "key",
        "getNewJobNumber",
        "findOne",
        "jobId",
        "data",
        "parseInt",
        "getEstimates",
        "req",
        "res",
        "query",
        "page",
        "limit",
        "_id",
        "customerId",
        "dateFrom",
        "dateTo",
        "text",
        "isDelete",
        "populate",
        "path",
        "select",
        "json",
        "filter",
        "$and",
        "sorts",
        "push",
        "createdAt",
        "$gte",
        "Date",
        "$lte",
        "$or",
        "$regex",
        "RegExp",
        "join",
        "$options",
        "paginate",
        "console",
        "log",
        "error",
        "reason",
        "message",
        "createEstimate",
        "validation",
        "validate",
        "body",
        "Error",
        "storeId",
        "rest",
        "existing",
        "ERRORS",
        "RESOURCE_ALREADY_EXISTS",
        "create",
        "updateEstimate",
        "$ne",
        "found",
        "findOneAndUpdate",
        "$set",
        "deleteEstimates",
        "updateMany",
        "$in",
        "getNextEstimateNumber",
        "result",
        "updateEsitmateStatus",
        "convertEstimateToJob",
        "newJobNumber",
        "RESOURCE_NOT_FOUND",
        "expenses",
        "map",
        "lineItem",
        "_doc",
        "title",
        "serviceAddress"
      ],
      "mappings": "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",
      "sourceRoot": "/app/src/controllers",
      "sourcesContent": [
        "import _EstimateModel from '../models/estimate'\nimport _JobModel from '../models/job'\nimport ERRORS from '../constants/errors';\nimport Joi from '@hapi/joi'\nimport { flatten } from 'flat'\n\nconst createSchema = Joi.object({\n  estimateId: Joi.number().required(),\n  name: Joi.string().optional().allow(''),\n  client: Joi.string().optional().allow(''),\n  propertyAddress: Joi.object().required(),\n  lineItems: Joi.array().items({\n    item: Joi.string().required(),\n    qty: Joi.number().required(),\n    unitCost: Joi.number().required(),\n    description: Joi.string().allow('')\n  }).optional().allow([]),\n  discount: Joi.object({\n    type: Joi.string(),\n    value: Joi.number()\n  }).optional().allow({}),\n  tax: Joi.string().optional().allow(''),\n  poso: Joi.string().optional().allow(''),\n  issueDate: Joi.string().optional().allow(''),\n  clientMessage: Joi.string().optional().allow(''),\n  staffMessage: Joi.string().optional().allow(''),\n  deposit: Joi.optional(),\n  forceUpdate: Joi.boolean().optional()\n})\n\nconst updateSchema = Joi.object({\n  id: Joi.string().required(),\n  estimateId: Joi.number().required(),\n  name: Joi.string().optional().allow(''),\n  client: Joi.string().optional().allow(''),\n  propertyAddress: Joi.object(),\n  lineItems: Joi.array().items({\n    item: Joi.string(),\n    qty: Joi.number(),\n    unitCost: Joi.number(),\n    description: Joi.string().allow('')\n  }).optional().allow([]),\n  discount: Joi.object({\n    type: Joi.string(),\n    value: Joi.number()\n  }).optional().allow({}),\n  tax: Joi.string().optional().allow(''),\n  poso: Joi.string().optional().allow(''),\n  issueDate: Joi.string().optional().allow(''),\n  clientMessage: Joi.string().optional().allow(''),\n  staffMessage: Joi.string().optional().allow(''),\n  deposit: Joi.optional(),\n  forceUpdate: Joi.boolean().optional()\n})\n\nconst deleteSchema = Joi.object({\n  id: Joi.array().items(Joi.string()).required()\n})\n\nconst updateEsitmateStatusSchema = Joi.object({\n  id: Joi.string().required(),\n  status: Joi.string().valid('DRAFT', 'AWAITING', 'APPROVED', 'CONVERTED', 'ARCHIVED').required()\n})\n\nconst convertEstimateToJobSchema = Joi.object({\n  id: Joi.string().required()\n})\n\nconst formatSortData = (sort = []) => {\n  if (!sort || sort.length === 0) return {};\n  return sort.reduce((s, item) => {\n    const [key, value] = item.split('.')\n    switch (value) {\n      case 'asc':\n        return { ...s, [key]: 1 }\n      case 'desc':\n        return { ...s, [key]: -1 }\n      default:\n        return s\n    }\n  }, {})\n}\n\nconst getNewJobNumber = async () => {\n  const data = await _JobModel().findOne({}, {}, { sort: { jobId: -1 } })\n  if (!data) return 1;\n  return (parseInt(data.jobId) + 1);\n}\n\nexport const getEstimates = async (req, res) => {\n  try {\n    const { page, limit, id: _id, status, customerId, dateFrom, dateTo, text, sort = [] } = req.query\n    if (_id) {\n      const data = await _EstimateModel().findOne({ isDelete: false, _id }).populate([{ path: 'client' }, { path: 'lineItems.item', select: 'type name description taxExempt inventoryStock' }, { path: 'tax' }])\n      return res.json({ data })\n    } else {\n      /**\n       * Filters\n       */\n      let filter = { $and: [] }\n      /**\n       * Sorts\n       */\n      let sorts = formatSortData(sort)\n\n      if (status) filter.$and.push({ status })\n      if (customerId) filter.$and.push({ client: customerId })\n      if (dateFrom) filter.$and.push({ createdAt: { $gte: new Date(dateFrom) } })\n      if (dateTo) filter.$and.push({ createdAt: { $lte: new Date(dateTo) } })\n      if (text) filter.$and.push({\n        $or: [\n          {\n            estimateId: text\n          },\n          {\n            name: {\n              $regex: new RegExp(text.split(' ').join('|')),\n              $options: 'i'\n            }\n          }\n        ]\n      })\n\n      if (filter.$and.length === 0) filter = {};\n\n      const data = await _EstimateModel().paginate({ isDelete: false, ...filter }, { page, limit, sort: { ...sorts }, populate: [{ path: 'client' }, { path: 'lineItems.item', select: 'type name description taxExempt inventoryStock' }, { path: 'tax' }] })\n      return res.json(data)\n    }\n  } catch (err) {\n    console.log(err)\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const createEstimate = async (req, res) => {\n  try {\n    const validation = Joi.validate(req.body, createSchema)\n    if (validation.error) throw new Error(validation.error)\n    const { storeId } = req\n    const { forceUpdate, ...rest } = req.body\n    if (!forceUpdate) {\n      const existing = await _EstimateModel().findOne({ estimateId: rest.estimateId })\n      if (existing) throw new Error(ERRORS.RESOURCE_ALREADY_EXISTS)\n    }\n\n    const data = await _EstimateModel().create({ ...rest, storeId })\n    return res.json({ data })\n  } catch (err) {\n    console.log(err)\n    if (err.message === ERRORS.RESOURCE_ALREADY_EXISTS) return res.status(409).json({ error: true, reason: err.message })\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const updateEstimate = async (req, res) => {\n  try {\n    const validation = Joi.validate(req.body, updateSchema)\n    if (validation.error) throw new Error(validation.error)\n\n    const { id: _id, forceUpdate, ...rest } = req.body\n    if (!forceUpdate) {\n      const found = await _EstimateModel().findOne({ estimateId: rest.estimateId, _id: { $ne: _id } })\n      if (found) {\n        throw new Error(ERRORS.RESOURCE_ALREADY_EXISTS)\n      }\n    }\n    const data = await _EstimateModel().findOneAndUpdate({ _id, isDelete: false }, { $set: flatten(rest) }, { new: true })\n    return res.json({ data })\n  } catch (err) {\n    console.log(err)\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const deleteEstimates = async (req, res) => {\n  try {\n    const validation = Joi.validate(req.body, deleteSchema)\n    if (validation.error) throw new Error(validation.error)\n\n    const { id: _id } = req.body\n    await _EstimateModel().updateMany({ _id: { $in: _id } }, { $set: { isDelete: true } })\n    return res.json({ data: {} })\n  } catch (err) {\n    console.log(err)\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const getNextEstimateNumber = async (req, res) => {\n  try {\n    const result = await _EstimateModel().findOne({}, {}, { sort: { estimateId: -1 } })\n    if (!result) return res.json({ data: { estimateId: 1 } })\n    return res.json({ data: { estimateId: parseInt(result.estimateId) + 1 } })\n  } catch (err) {\n    console.log(err)\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const updateEsitmateStatus = async (req, res) => {\n  try {\n    const validation = Joi.validate(req.body, updateEsitmateStatusSchema)\n    if (validation.error) throw new Error(validation.error)\n\n    const { id: _id, status } = req.body\n    const result = await _EstimateModel().findOneAndUpdate({ _id, isDelete: false }, { $set: { status } }, { new: true })\n    return res.json({ data: result })\n  } catch (err) {\n    console.log(err)\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const convertEstimateToJob = async (req, res) => {\n  try {\n    const validation = Joi.validate(req.body, convertEstimateToJobSchema)\n    if (validation.error) throw new Error(validation.error)\n\n    const { id: _id } = req.body\n\n    const newJobNumber = await getNewJobNumber()\n    const result = await _EstimateModel().findOneAndUpdate({ _id, isDelete: false, status: { $ne: 'CONVERTED' } }, { $set: { status: 'CONVERTED' } }, { new: true })\n    if (!result) throw new Error(ERRORS.RESOURCE_NOT_FOUND)\n\n    const { client, lineItems, propertyAddress, storeId } = result\n    const expenses = lineItems.map((lineItem) => {\n      const { _doc: { _id, ...rest } } = lineItem\n      return {\n        lineItem: {\n          ...rest\n        }\n      }\n    })\n\n    const data = await _JobModel().create({\n      jobId: newJobNumber,\n      title: 'From Estimate',\n      description: 'Estimate converted to Job',\n      client,\n      serviceAddress: { ...propertyAddress },\n      storeId,\n      expenses\n    })\n\n    return res.json({ data })\n  } catch (err) {\n    console.log(err)\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1575001852202
  },
  "{\"sourceRoot\":\"/app/src/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/models/estimate.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/models/estimate.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/models/estimate.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/models/estimate.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/models",
        "sourceFileName": "estimate.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongoose = require(\"mongoose\");\n\nvar _multiTenant = require(\"../lib/multiTenant\");\n\nvar estimateSchema = new _mongoose.Schema({\n  estimateId: {\n    type: Number\n  },\n  storeId: {\n    type: _mongoose.Schema.Types.ObjectId,\n    ref: 'Store'\n  },\n  name: {\n    type: String\n  },\n  client: {\n    type: _mongoose.Schema.Types.ObjectId,\n    ref: 'Client'\n  },\n  propertyAddress: {\n    type: Object\n  },\n  lineItems: [{\n    item: {\n      type: _mongoose.Schema.Types.ObjectId,\n      ref: 'Inventory'\n    },\n    qty: Number,\n    unitCost: Number,\n    description: String\n  }],\n  discount: {\n    type: {\n      type: String,\n      \"enum\": ['FLAT', 'PERCENTAGE']\n    },\n    value: Number\n  },\n  tax: {\n    type: _mongoose.Schema.Types.ObjectId,\n    ref: 'Tax'\n  },\n  deposit: Number,\n  issueDate: Date,\n  poso: String,\n  staffMessage: String,\n  clientMessage: String,\n  status: {\n    type: String,\n    \"enum\": ['DRAFT', 'AWAITING', 'APPROVED', 'CONVERTED', 'ARCHIVED'],\n    \"default\": 'DRAFT'\n  },\n  isDelete: {\n    type: Boolean,\n    \"default\": false\n  }\n}, {\n  timestamps: true,\n  skipVersioning: true\n});\n\nvar _default = (0, _multiTenant.tenantModel)('Estimate', estimateSchema);\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVzdGltYXRlLmpzIl0sIm5hbWVzIjpbImVzdGltYXRlU2NoZW1hIiwiU2NoZW1hIiwiZXN0aW1hdGVJZCIsInR5cGUiLCJOdW1iZXIiLCJzdG9yZUlkIiwiVHlwZXMiLCJPYmplY3RJZCIsInJlZiIsIm5hbWUiLCJTdHJpbmciLCJjbGllbnQiLCJwcm9wZXJ0eUFkZHJlc3MiLCJPYmplY3QiLCJsaW5lSXRlbXMiLCJpdGVtIiwicXR5IiwidW5pdENvc3QiLCJkZXNjcmlwdGlvbiIsImRpc2NvdW50IiwidmFsdWUiLCJ0YXgiLCJkZXBvc2l0IiwiaXNzdWVEYXRlIiwiRGF0ZSIsInBvc28iLCJzdGFmZk1lc3NhZ2UiLCJjbGllbnRNZXNzYWdlIiwic3RhdHVzIiwiaXNEZWxldGUiLCJCb29sZWFuIiwidGltZXN0YW1wcyIsInNraXBWZXJzaW9uaW5nIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBRUEsSUFBTUEsY0FBYyxHQUFHLElBQUlDLGdCQUFKLENBQVc7QUFDaENDLEVBQUFBLFVBQVUsRUFBRTtBQUNWQyxJQUFBQSxJQUFJLEVBQUVDO0FBREksR0FEb0I7QUFJaENDLEVBQUFBLE9BQU8sRUFBRTtBQUNQRixJQUFBQSxJQUFJLEVBQUVGLGlCQUFPSyxLQUFQLENBQWFDLFFBRFo7QUFFUEMsSUFBQUEsR0FBRyxFQUFFO0FBRkUsR0FKdUI7QUFRaENDLEVBQUFBLElBQUksRUFBRTtBQUNKTixJQUFBQSxJQUFJLEVBQUVPO0FBREYsR0FSMEI7QUFXaENDLEVBQUFBLE1BQU0sRUFBRTtBQUNOUixJQUFBQSxJQUFJLEVBQUVGLGlCQUFPSyxLQUFQLENBQWFDLFFBRGI7QUFFTkMsSUFBQUEsR0FBRyxFQUFFO0FBRkMsR0FYd0I7QUFlaENJLEVBQUFBLGVBQWUsRUFBRTtBQUNmVCxJQUFBQSxJQUFJLEVBQUVVO0FBRFMsR0FmZTtBQWtCaENDLEVBQUFBLFNBQVMsRUFBRSxDQUFDO0FBQ1ZDLElBQUFBLElBQUksRUFBRTtBQUNKWixNQUFBQSxJQUFJLEVBQUVGLGlCQUFPSyxLQUFQLENBQWFDLFFBRGY7QUFFSkMsTUFBQUEsR0FBRyxFQUFFO0FBRkQsS0FESTtBQUtWUSxJQUFBQSxHQUFHLEVBQUVaLE1BTEs7QUFNVmEsSUFBQUEsUUFBUSxFQUFFYixNQU5BO0FBT1ZjLElBQUFBLFdBQVcsRUFBRVI7QUFQSCxHQUFELENBbEJxQjtBQTJCaENTLEVBQUFBLFFBQVEsRUFBRTtBQUNSaEIsSUFBQUEsSUFBSSxFQUFFO0FBQ0pBLE1BQUFBLElBQUksRUFBRU8sTUFERjtBQUVKLGNBQU0sQ0FBQyxNQUFELEVBQVMsWUFBVDtBQUZGLEtBREU7QUFLUlUsSUFBQUEsS0FBSyxFQUFFaEI7QUFMQyxHQTNCc0I7QUFrQ2hDaUIsRUFBQUEsR0FBRyxFQUFFO0FBQ0hsQixJQUFBQSxJQUFJLEVBQUVGLGlCQUFPSyxLQUFQLENBQWFDLFFBRGhCO0FBRUhDLElBQUFBLEdBQUcsRUFBRTtBQUZGLEdBbEMyQjtBQXNDaENjLEVBQUFBLE9BQU8sRUFBRWxCLE1BdEN1QjtBQXVDaENtQixFQUFBQSxTQUFTLEVBQUVDLElBdkNxQjtBQXdDaENDLEVBQUFBLElBQUksRUFBRWYsTUF4QzBCO0FBeUNoQ2dCLEVBQUFBLFlBQVksRUFBRWhCLE1BekNrQjtBQTBDaENpQixFQUFBQSxhQUFhLEVBQUVqQixNQTFDaUI7QUEyQ2hDa0IsRUFBQUEsTUFBTSxFQUFFO0FBQ056QixJQUFBQSxJQUFJLEVBQUVPLE1BREE7QUFFTixZQUFNLENBQUMsT0FBRCxFQUFVLFVBQVYsRUFBc0IsVUFBdEIsRUFBa0MsV0FBbEMsRUFBK0MsVUFBL0MsQ0FGQTtBQUdOLGVBQVM7QUFISCxHQTNDd0I7QUFnRGhDbUIsRUFBQUEsUUFBUSxFQUFFO0FBQ1IxQixJQUFBQSxJQUFJLEVBQUUyQixPQURFO0FBRVIsZUFBUztBQUZEO0FBaERzQixDQUFYLEVBb0RwQjtBQUFFQyxFQUFBQSxVQUFVLEVBQUUsSUFBZDtBQUFvQkMsRUFBQUEsY0FBYyxFQUFFO0FBQXBDLENBcERvQixDQUF2Qjs7ZUFzRGUsOEJBQVksVUFBWixFQUF3QmhDLGNBQXhCLEMiLCJzb3VyY2VSb290IjoiL2FwcC9zcmMvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU2NoZW1hIH0gZnJvbSAnbW9uZ29vc2UnXG5pbXBvcnQgeyB0ZW5hbnRNb2RlbCB9IGZyb20gJy4uL2xpYi9tdWx0aVRlbmFudCdcblxuY29uc3QgZXN0aW1hdGVTY2hlbWEgPSBuZXcgU2NoZW1hKHtcbiAgZXN0aW1hdGVJZDoge1xuICAgIHR5cGU6IE51bWJlclxuICB9LFxuICBzdG9yZUlkOiB7XG4gICAgdHlwZTogU2NoZW1hLlR5cGVzLk9iamVjdElkLFxuICAgIHJlZjogJ1N0b3JlJ1xuICB9LFxuICBuYW1lOiB7XG4gICAgdHlwZTogU3RyaW5nLFxuICB9LFxuICBjbGllbnQ6IHtcbiAgICB0eXBlOiBTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG4gICAgcmVmOiAnQ2xpZW50J1xuICB9LFxuICBwcm9wZXJ0eUFkZHJlc3M6IHtcbiAgICB0eXBlOiBPYmplY3RcbiAgfSxcbiAgbGluZUl0ZW1zOiBbe1xuICAgIGl0ZW06IHtcbiAgICAgIHR5cGU6IFNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgICAgIHJlZjogJ0ludmVudG9yeSdcbiAgICB9LFxuICAgIHF0eTogTnVtYmVyLFxuICAgIHVuaXRDb3N0OiBOdW1iZXIsXG4gICAgZGVzY3JpcHRpb246IFN0cmluZ1xuICB9XSxcbiAgZGlzY291bnQ6IHtcbiAgICB0eXBlOiB7XG4gICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICBlbnVtOiBbJ0ZMQVQnLCAnUEVSQ0VOVEFHRSddXG4gICAgfSxcbiAgICB2YWx1ZTogTnVtYmVyXG4gIH0sXG4gIHRheDoge1xuICAgIHR5cGU6IFNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgICByZWY6ICdUYXgnXG4gIH0sXG4gIGRlcG9zaXQ6IE51bWJlcixcbiAgaXNzdWVEYXRlOiBEYXRlLFxuICBwb3NvOiBTdHJpbmcsXG4gIHN0YWZmTWVzc2FnZTogU3RyaW5nLFxuICBjbGllbnRNZXNzYWdlOiBTdHJpbmcsXG4gIHN0YXR1czoge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgICBlbnVtOiBbJ0RSQUZUJywgJ0FXQUlUSU5HJywgJ0FQUFJPVkVEJywgJ0NPTlZFUlRFRCcsICdBUkNISVZFRCddLFxuICAgIGRlZmF1bHQ6ICdEUkFGVCdcbiAgfSxcbiAgaXNEZWxldGU6IHtcbiAgICB0eXBlOiBCb29sZWFuLFxuICAgIGRlZmF1bHQ6IGZhbHNlXG4gIH1cbn0sIHsgdGltZXN0YW1wczogdHJ1ZSwgc2tpcFZlcnNpb25pbmc6IHRydWUgfSlcblxuZXhwb3J0IGRlZmF1bHQgdGVuYW50TW9kZWwoJ0VzdGltYXRlJywgZXN0aW1hdGVTY2hlbWEpXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "estimate.js"
      ],
      "names": [
        "estimateSchema",
        "Schema",
        "estimateId",
        "type",
        "Number",
        "storeId",
        "Types",
        "ObjectId",
        "ref",
        "name",
        "String",
        "client",
        "propertyAddress",
        "Object",
        "lineItems",
        "item",
        "qty",
        "unitCost",
        "description",
        "discount",
        "value",
        "tax",
        "deposit",
        "issueDate",
        "Date",
        "poso",
        "staffMessage",
        "clientMessage",
        "status",
        "isDelete",
        "Boolean",
        "timestamps",
        "skipVersioning"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AAEA,IAAMA,cAAc,GAAG,IAAIC,gBAAJ,CAAW;AAChCC,EAAAA,UAAU,EAAE;AACVC,IAAAA,IAAI,EAAEC;AADI,GADoB;AAIhCC,EAAAA,OAAO,EAAE;AACPF,IAAAA,IAAI,EAAEF,iBAAOK,KAAP,CAAaC,QADZ;AAEPC,IAAAA,GAAG,EAAE;AAFE,GAJuB;AAQhCC,EAAAA,IAAI,EAAE;AACJN,IAAAA,IAAI,EAAEO;AADF,GAR0B;AAWhCC,EAAAA,MAAM,EAAE;AACNR,IAAAA,IAAI,EAAEF,iBAAOK,KAAP,CAAaC,QADb;AAENC,IAAAA,GAAG,EAAE;AAFC,GAXwB;AAehCI,EAAAA,eAAe,EAAE;AACfT,IAAAA,IAAI,EAAEU;AADS,GAfe;AAkBhCC,EAAAA,SAAS,EAAE,CAAC;AACVC,IAAAA,IAAI,EAAE;AACJZ,MAAAA,IAAI,EAAEF,iBAAOK,KAAP,CAAaC,QADf;AAEJC,MAAAA,GAAG,EAAE;AAFD,KADI;AAKVQ,IAAAA,GAAG,EAAEZ,MALK;AAMVa,IAAAA,QAAQ,EAAEb,MANA;AAOVc,IAAAA,WAAW,EAAER;AAPH,GAAD,CAlBqB;AA2BhCS,EAAAA,QAAQ,EAAE;AACRhB,IAAAA,IAAI,EAAE;AACJA,MAAAA,IAAI,EAAEO,MADF;AAEJ,cAAM,CAAC,MAAD,EAAS,YAAT;AAFF,KADE;AAKRU,IAAAA,KAAK,EAAEhB;AALC,GA3BsB;AAkChCiB,EAAAA,GAAG,EAAE;AACHlB,IAAAA,IAAI,EAAEF,iBAAOK,KAAP,CAAaC,QADhB;AAEHC,IAAAA,GAAG,EAAE;AAFF,GAlC2B;AAsChCc,EAAAA,OAAO,EAAElB,MAtCuB;AAuChCmB,EAAAA,SAAS,EAAEC,IAvCqB;AAwChCC,EAAAA,IAAI,EAAEf,MAxC0B;AAyChCgB,EAAAA,YAAY,EAAEhB,MAzCkB;AA0ChCiB,EAAAA,aAAa,EAAEjB,MA1CiB;AA2ChCkB,EAAAA,MAAM,EAAE;AACNzB,IAAAA,IAAI,EAAEO,MADA;AAEN,YAAM,CAAC,OAAD,EAAU,UAAV,EAAsB,UAAtB,EAAkC,WAAlC,EAA+C,UAA/C,CAFA;AAGN,eAAS;AAHH,GA3CwB;AAgDhCmB,EAAAA,QAAQ,EAAE;AACR1B,IAAAA,IAAI,EAAE2B,OADE;AAER,eAAS;AAFD;AAhDsB,CAAX,EAoDpB;AAAEC,EAAAA,UAAU,EAAE,IAAd;AAAoBC,EAAAA,cAAc,EAAE;AAApC,CApDoB,CAAvB;;eAsDe,8BAAY,UAAZ,EAAwBhC,cAAxB,C",
      "sourceRoot": "/app/src/models",
      "sourcesContent": [
        "import { Schema } from 'mongoose'\nimport { tenantModel } from '../lib/multiTenant'\n\nconst estimateSchema = new Schema({\n  estimateId: {\n    type: Number\n  },\n  storeId: {\n    type: Schema.Types.ObjectId,\n    ref: 'Store'\n  },\n  name: {\n    type: String,\n  },\n  client: {\n    type: Schema.Types.ObjectId,\n    ref: 'Client'\n  },\n  propertyAddress: {\n    type: Object\n  },\n  lineItems: [{\n    item: {\n      type: Schema.Types.ObjectId,\n      ref: 'Inventory'\n    },\n    qty: Number,\n    unitCost: Number,\n    description: String\n  }],\n  discount: {\n    type: {\n      type: String,\n      enum: ['FLAT', 'PERCENTAGE']\n    },\n    value: Number\n  },\n  tax: {\n    type: Schema.Types.ObjectId,\n    ref: 'Tax'\n  },\n  deposit: Number,\n  issueDate: Date,\n  poso: String,\n  staffMessage: String,\n  clientMessage: String,\n  status: {\n    type: String,\n    enum: ['DRAFT', 'AWAITING', 'APPROVED', 'CONVERTED', 'ARCHIVED'],\n    default: 'DRAFT'\n  },\n  isDelete: {\n    type: Boolean,\n    default: false\n  }\n}, { timestamps: true, skipVersioning: true })\n\nexport default tenantModel('Estimate', estimateSchema)\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1574924198763
  },
  "{\"sourceRoot\":\"/app/src/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/routes/invoices.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/routes/invoices.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/routes/invoices.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/routes/invoices.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/routes",
        "sourceFileName": "invoices.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _invoice = require(\"../controllers/invoice\");\n\nvar router = (0, _express.Router)();\nrouter.get('/', _invoice.getInvoices);\nrouter.post('/create', _invoice.createInvoice);\nrouter.post('/delete', _invoice.deleteInvoice);\nrouter.post('/update', _invoice.updateInvoice);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImludm9pY2VzLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsImdldCIsImdldEludm9pY2VzIiwicG9zdCIsImNyZWF0ZUludm9pY2UiLCJkZWxldGVJbnZvaWNlIiwidXBkYXRlSW52b2ljZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUVBOztBQUNBLElBQU1BLE1BQU0sR0FBRyxzQkFBZjtBQUVBQSxNQUFNLENBQUNDLEdBQVAsQ0FBVyxHQUFYLEVBQWdCQyxvQkFBaEI7QUFDQUYsTUFBTSxDQUFDRyxJQUFQLENBQVksU0FBWixFQUF1QkMsc0JBQXZCO0FBQ0FKLE1BQU0sQ0FBQ0csSUFBUCxDQUFZLFNBQVosRUFBdUJFLHNCQUF2QjtBQUNBTCxNQUFNLENBQUNHLElBQVAsQ0FBWSxTQUFaLEVBQXVCRyxzQkFBdkI7ZUFFZU4sTSIsInNvdXJjZVJvb3QiOiIvYXBwL3NyYy9yb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSb3V0ZXIgfSBmcm9tICdleHByZXNzJ1xuXG5pbXBvcnQgeyBnZXRJbnZvaWNlcywgY3JlYXRlSW52b2ljZSwgdXBkYXRlSW52b2ljZSwgZGVsZXRlSW52b2ljZSB9IGZyb20gJy4uL2NvbnRyb2xsZXJzL2ludm9pY2UnXG5jb25zdCByb3V0ZXIgPSBSb3V0ZXIoKVxuXG5yb3V0ZXIuZ2V0KCcvJywgZ2V0SW52b2ljZXMpXG5yb3V0ZXIucG9zdCgnL2NyZWF0ZScsIGNyZWF0ZUludm9pY2UpXG5yb3V0ZXIucG9zdCgnL2RlbGV0ZScsIGRlbGV0ZUludm9pY2UpXG5yb3V0ZXIucG9zdCgnL3VwZGF0ZScsIHVwZGF0ZUludm9pY2UpXG5cbmV4cG9ydCBkZWZhdWx0IHJvdXRlclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "invoices.js"
      ],
      "names": [
        "router",
        "get",
        "getInvoices",
        "post",
        "createInvoice",
        "deleteInvoice",
        "updateInvoice"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA;;AACA,IAAMA,MAAM,GAAG,sBAAf;AAEAA,MAAM,CAACC,GAAP,CAAW,GAAX,EAAgBC,oBAAhB;AACAF,MAAM,CAACG,IAAP,CAAY,SAAZ,EAAuBC,sBAAvB;AACAJ,MAAM,CAACG,IAAP,CAAY,SAAZ,EAAuBE,sBAAvB;AACAL,MAAM,CAACG,IAAP,CAAY,SAAZ,EAAuBG,sBAAvB;eAEeN,M",
      "sourceRoot": "/app/src/routes",
      "sourcesContent": [
        "import { Router } from 'express'\n\nimport { getInvoices, createInvoice, updateInvoice, deleteInvoice } from '../controllers/invoice'\nconst router = Router()\n\nrouter.get('/', getInvoices)\nrouter.post('/create', createInvoice)\nrouter.post('/delete', deleteInvoice)\nrouter.post('/update', updateInvoice)\n\nexport default router\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1574924198763
  },
  "{\"sourceRoot\":\"/app/src/controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/controllers/invoice.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/controllers/invoice.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/controllers/invoice.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/controllers/invoice.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/controllers",
        "sourceFileName": "invoice.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deleteInvoice = exports.updateInvoice = exports.createInvoice = exports.getInvoices = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _invoice = _interopRequireDefault(require(\"../models/invoice\"));\n\nvar _joi = _interopRequireDefault(require(\"@hapi/joi\"));\n\nvar _flat = require(\"flat\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar createSchema = _joi[\"default\"].object({\n  invoiceNumber: _joi[\"default\"].number().required(),\n  estimateId: _joi[\"default\"].number().optional().allow(''),\n  name: _joi[\"default\"].string().required(),\n  client: _joi[\"default\"].string().required(),\n  propertyAddress: _joi[\"default\"].object().required(),\n  lineItems: _joi[\"default\"].array().items({\n    item: _joi[\"default\"].string().required(),\n    qty: _joi[\"default\"].number().required(),\n    unitCost: _joi[\"default\"].number().required()\n  }).optional().allow([]),\n  discount: _joi[\"default\"].object({\n    type: _joi[\"default\"].string(),\n    value: _joi[\"default\"].number()\n  }).optional().allow({}),\n  tax: _joi[\"default\"].string().optional().allow(''),\n  clientMessage: _joi[\"default\"].string().optional().allow('')\n});\n\nvar updateSchema = _joi[\"default\"].object({\n  id: _joi[\"default\"].string().required(),\n  invoiceNumber: _joi[\"default\"].number(),\n  estimateId: _joi[\"default\"].number(),\n  name: _joi[\"default\"].string(),\n  client: _joi[\"default\"].string(),\n  propertyAddress: _joi[\"default\"].object(),\n  lineItems: _joi[\"default\"].array().items({\n    item: _joi[\"default\"].string(),\n    qty: _joi[\"default\"].number(),\n    unitCost: _joi[\"default\"].number()\n  }).optional().allow([]),\n  discount: _joi[\"default\"].object({\n    type: _joi[\"default\"].string(),\n    value: _joi[\"default\"].number()\n  }).optional().allow({}),\n  tax: _joi[\"default\"].string().optional().allow(''),\n  clientMessage: _joi[\"default\"].string().optional().allow('')\n});\n\nvar deleteSchema = _joi[\"default\"].object({\n  id: _joi[\"default\"].array().items(_joi[\"default\"].string()).required()\n});\n\nvar getInvoices = function getInvoices(req, res) {\n  var _req$query, page, limit, _id, data, _data;\n\n  return _regenerator[\"default\"].async(function getInvoices$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _req$query = req.query, page = _req$query.page, limit = _req$query.limit, _id = _req$query.id;\n\n          if (!_id) {\n            _context.next = 9;\n            break;\n          }\n\n          _context.next = 5;\n          return _regenerator[\"default\"].awrap((0, _invoice[\"default\"])().findOne({\n            isDelete: false,\n            _id: _id\n          }).populate([{\n            path: 'client',\n            select: 'firstName lastName email'\n          }, {\n            path: 'lineItems.item',\n            select: 'type name description taxExempt inventoryStock'\n          }, {\n            path: 'tax'\n          }]));\n\n        case 5:\n          data = _context.sent;\n          return _context.abrupt(\"return\", res.json({\n            data: data\n          }));\n\n        case 9:\n          _context.next = 11;\n          return _regenerator[\"default\"].awrap((0, _invoice[\"default\"])().paginate({\n            isDelete: false\n          }, {\n            page: page,\n            limit: limit,\n            populate: [{\n              path: 'client',\n              select: 'firstName lastName email'\n            }, {\n              path: 'lineItems.item',\n              select: 'type name description taxExempt inventoryStock'\n            }, {\n              path: 'tax'\n            }]\n          }));\n\n        case 11:\n          _data = _context.sent;\n          return _context.abrupt(\"return\", res.json(_data));\n\n        case 13:\n          _context.next = 19;\n          break;\n\n        case 15:\n          _context.prev = 15;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n          return _context.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context.t0.message\n          }));\n\n        case 19:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 15]]);\n};\n\nexports.getInvoices = getInvoices;\n\nvar createInvoice = function createInvoice(req, res) {\n  var validation, storeId, data;\n  return _regenerator[\"default\"].async(function createInvoice$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          validation = _joi[\"default\"].validate(req.body, createSchema);\n\n          if (!validation.error) {\n            _context2.next = 4;\n            break;\n          }\n\n          throw new Error(validation.error);\n\n        case 4:\n          storeId = req.storeId;\n          _context2.next = 7;\n          return _regenerator[\"default\"].awrap((0, _invoice[\"default\"])().create(_objectSpread({}, req.body, {\n            storeId: storeId\n          })));\n\n        case 7:\n          data = _context2.sent;\n          return _context2.abrupt(\"return\", res.json({\n            data: data\n          }));\n\n        case 11:\n          _context2.prev = 11;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0);\n          return _context2.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context2.t0.message\n          }));\n\n        case 15:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 11]]);\n};\n\nexports.createInvoice = createInvoice;\n\nvar updateInvoice = function updateInvoice(req, res) {\n  var validation, _req$body, _id, rest, data;\n\n  return _regenerator[\"default\"].async(function updateInvoice$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          validation = _joi[\"default\"].validate(req.body, updateSchema);\n\n          if (!validation.error) {\n            _context3.next = 4;\n            break;\n          }\n\n          throw new Error(validation.error);\n\n        case 4:\n          _req$body = req.body, _id = _req$body.id, rest = (0, _objectWithoutProperties2[\"default\"])(_req$body, [\"id\"]);\n          _context3.next = 7;\n          return _regenerator[\"default\"].awrap((0, _invoice[\"default\"])().findOneAndUpdate({\n            _id: _id,\n            isDelete: false\n          }, {\n            $set: (0, _flat.flatten)(rest)\n          }, {\n            \"new\": true\n          }));\n\n        case 7:\n          data = _context3.sent;\n          return _context3.abrupt(\"return\", res.json({\n            data: data\n          }));\n\n        case 11:\n          _context3.prev = 11;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(_context3.t0);\n          return _context3.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context3.t0.message\n          }));\n\n        case 15:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 11]]);\n};\n\nexports.updateInvoice = updateInvoice;\n\nvar deleteInvoice = function deleteInvoice(req, res) {\n  var validation, _id;\n\n  return _regenerator[\"default\"].async(function deleteInvoice$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          validation = _joi[\"default\"].validate(req.body, deleteSchema);\n\n          if (!validation.error) {\n            _context4.next = 4;\n            break;\n          }\n\n          throw new Error(validation.error);\n\n        case 4:\n          _id = req.body.id;\n          _context4.next = 7;\n          return _regenerator[\"default\"].awrap((0, _invoice[\"default\"])().updateMany({\n            _id: {\n              $in: _id\n            }\n          }, {\n            $set: {\n              isDelete: true\n            }\n          }));\n\n        case 7:\n          return _context4.abrupt(\"return\", res.json({\n            data: {}\n          }));\n\n        case 10:\n          _context4.prev = 10;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.log(_context4.t0);\n          return _context4.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context4.t0.message\n          }));\n\n        case 14:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, [[0, 10]]);\n};\n\nexports.deleteInvoice = deleteInvoice;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "invoice.js"
      ],
      "names": [
        "createSchema",
        "Joi",
        "object",
        "invoiceNumber",
        "number",
        "required",
        "estimateId",
        "optional",
        "allow",
        "name",
        "string",
        "client",
        "propertyAddress",
        "lineItems",
        "array",
        "items",
        "item",
        "qty",
        "unitCost",
        "discount",
        "type",
        "value",
        "tax",
        "clientMessage",
        "updateSchema",
        "id",
        "deleteSchema",
        "getInvoices",
        "req",
        "res",
        "query",
        "page",
        "limit",
        "_id",
        "findOne",
        "isDelete",
        "populate",
        "path",
        "select",
        "data",
        "json",
        "paginate",
        "console",
        "log",
        "status",
        "error",
        "reason",
        "message",
        "createInvoice",
        "validation",
        "validate",
        "body",
        "Error",
        "storeId",
        "create",
        "updateInvoice",
        "rest",
        "findOneAndUpdate",
        "$set",
        "deleteInvoice",
        "updateMany",
        "$in"
      ],
      "mappings": "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",
      "sourceRoot": "/app/src/controllers",
      "sourcesContent": [
        "import _InvoiceModel from '../models/invoice'\nimport Joi from '@hapi/joi'\nimport { flatten } from 'flat'\n\nconst createSchema = Joi.object({\n  invoiceNumber: Joi.number().required(),\n  estimateId: Joi.number().optional().allow(''),\n  name: Joi.string().required(),\n  client: Joi.string().required(),\n  propertyAddress: Joi.object().required(),\n  lineItems: Joi.array().items({\n    item: Joi.string().required(),\n    qty: Joi.number().required(),\n    unitCost: Joi.number().required()\n  }).optional().allow([]),\n  discount: Joi.object({\n    type: Joi.string(),\n    value: Joi.number()\n  }).optional().allow({}),\n  tax: Joi.string().optional().allow(''),\n  clientMessage: Joi.string().optional().allow('')\n})\n\nconst updateSchema = Joi.object({\n  id: Joi.string().required(),\n  invoiceNumber: Joi.number(),\n  estimateId: Joi.number(),\n  name: Joi.string(),\n  client: Joi.string(),\n  propertyAddress: Joi.object(),\n  lineItems: Joi.array().items({\n    item: Joi.string(),\n    qty: Joi.number(),\n    unitCost: Joi.number()\n  }).optional().allow([]),\n  discount: Joi.object({\n    type: Joi.string(),\n    value: Joi.number()\n  }).optional().allow({}),\n  tax: Joi.string().optional().allow(''),\n  clientMessage: Joi.string().optional().allow('')\n})\n\nconst deleteSchema = Joi.object({\n  id: Joi.array().items(Joi.string()).required()\n})\n\nexport const getInvoices = async (req, res) => {\n  try {\n    const { page, limit, id: _id } = req.query\n    if (_id) {\n      const data = await _InvoiceModel().findOne({ isDelete: false, _id }).populate([{ path: 'client', select: 'firstName lastName email' }, { path: 'lineItems.item', select: 'type name description taxExempt inventoryStock' }, { path: 'tax' }])\n      return res.json({ data })\n    } else {\n      const data = await _InvoiceModel().paginate({ isDelete: false }, { page, limit, populate: [{ path: 'client', select: 'firstName lastName email' }, { path: 'lineItems.item', select: 'type name description taxExempt inventoryStock' }, { path: 'tax' }] })\n      return res.json(data)\n    }\n  } catch (err) {\n    console.log(err)\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const createInvoice = async (req, res) => {\n  try {\n    const validation = Joi.validate(req.body, createSchema)\n    if (validation.error) throw new Error(validation.error)\n    const { storeId } = req;\n\n    const data = await _InvoiceModel().create({ ...req.body, storeId })\n    return res.json({ data })\n  } catch (err) {\n    console.log(err)\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const updateInvoice = async (req, res) => {\n  try {\n    const validation = Joi.validate(req.body, updateSchema)\n    if (validation.error) throw new Error(validation.error)\n    const { id: _id, ...rest } = req.body\n    const data = await _InvoiceModel().findOneAndUpdate({ _id, isDelete: false }, { $set: flatten(rest) }, { new: true })\n    return res.json({ data })\n  } catch (err) {\n    console.log(err)\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const deleteInvoice = async (req, res) => {\n  try {\n    const validation = Joi.validate(req.body, deleteSchema)\n    if (validation.error) throw new Error(validation.error)\n\n    const { id: _id } = req.body\n    await _InvoiceModel().updateMany({ _id: { $in: _id } }, { $set: { isDelete: true } })\n    return res.json({ data: {} })\n  } catch (err) {\n    console.log(err)\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1574924198759
  },
  "{\"sourceRoot\":\"/app/src/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/models/invoice.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/models/invoice.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/models/invoice.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/models/invoice.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/models",
        "sourceFileName": "invoice.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongoose = require(\"mongoose\");\n\nvar _multiTenant = require(\"../lib/multiTenant\");\n\nvar invoiceSchema = new _mongoose.Schema({\n  estimateId: {\n    type: _mongoose.Schema.Types.ObjectId,\n    ref: 'Estimate'\n  },\n  invoiceNumber: {\n    type: Number\n  },\n  storeId: {\n    type: _mongoose.Schema.Types.ObjectId,\n    ref: 'Store'\n  },\n  name: {\n    type: String,\n    required: true\n  },\n  client: {\n    type: _mongoose.Schema.Types.ObjectId,\n    ref: 'Client'\n  },\n  propertyAddress: {\n    type: Object\n  },\n  lineItems: [{\n    item: {\n      type: _mongoose.Schema.Types.ObjectId,\n      ref: 'Inventory'\n    },\n    qty: Number,\n    unitCost: Number\n  }],\n  discount: {\n    type: {\n      type: String,\n      \"enum\": ['FLAT', 'PERCENTAGE']\n    },\n    value: Number\n  },\n  tax: {\n    type: _mongoose.Schema.Types.ObjectId,\n    ref: 'Tax'\n  },\n  clientMessage: String,\n  isDelete: {\n    type: Boolean,\n    \"default\": false\n  }\n}, {\n  timestamps: true,\n  skipVersioning: true\n});\n\nvar _default = (0, _multiTenant.tenantModel)('Invoice', invoiceSchema);\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImludm9pY2UuanMiXSwibmFtZXMiOlsiaW52b2ljZVNjaGVtYSIsIlNjaGVtYSIsImVzdGltYXRlSWQiLCJ0eXBlIiwiVHlwZXMiLCJPYmplY3RJZCIsInJlZiIsImludm9pY2VOdW1iZXIiLCJOdW1iZXIiLCJzdG9yZUlkIiwibmFtZSIsIlN0cmluZyIsInJlcXVpcmVkIiwiY2xpZW50IiwicHJvcGVydHlBZGRyZXNzIiwiT2JqZWN0IiwibGluZUl0ZW1zIiwiaXRlbSIsInF0eSIsInVuaXRDb3N0IiwiZGlzY291bnQiLCJ2YWx1ZSIsInRheCIsImNsaWVudE1lc3NhZ2UiLCJpc0RlbGV0ZSIsIkJvb2xlYW4iLCJ0aW1lc3RhbXBzIiwic2tpcFZlcnNpb25pbmciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFFQSxJQUFNQSxhQUFhLEdBQUcsSUFBSUMsZ0JBQUosQ0FBVztBQUMvQkMsRUFBQUEsVUFBVSxFQUFFO0FBQ1ZDLElBQUFBLElBQUksRUFBRUYsaUJBQU9HLEtBQVAsQ0FBYUMsUUFEVDtBQUVWQyxJQUFBQSxHQUFHLEVBQUU7QUFGSyxHQURtQjtBQUsvQkMsRUFBQUEsYUFBYSxFQUFFO0FBQ2JKLElBQUFBLElBQUksRUFBRUs7QUFETyxHQUxnQjtBQVEvQkMsRUFBQUEsT0FBTyxFQUFFO0FBQ1BOLElBQUFBLElBQUksRUFBRUYsaUJBQU9HLEtBQVAsQ0FBYUMsUUFEWjtBQUVQQyxJQUFBQSxHQUFHLEVBQUU7QUFGRSxHQVJzQjtBQVkvQkksRUFBQUEsSUFBSSxFQUFFO0FBQ0pQLElBQUFBLElBQUksRUFBRVEsTUFERjtBQUVKQyxJQUFBQSxRQUFRLEVBQUU7QUFGTixHQVp5QjtBQWdCL0JDLEVBQUFBLE1BQU0sRUFBRTtBQUNOVixJQUFBQSxJQUFJLEVBQUVGLGlCQUFPRyxLQUFQLENBQWFDLFFBRGI7QUFFTkMsSUFBQUEsR0FBRyxFQUFFO0FBRkMsR0FoQnVCO0FBb0IvQlEsRUFBQUEsZUFBZSxFQUFFO0FBQ2ZYLElBQUFBLElBQUksRUFBRVk7QUFEUyxHQXBCYztBQXVCL0JDLEVBQUFBLFNBQVMsRUFBRSxDQUFDO0FBQ1ZDLElBQUFBLElBQUksRUFBRTtBQUNKZCxNQUFBQSxJQUFJLEVBQUVGLGlCQUFPRyxLQUFQLENBQWFDLFFBRGY7QUFFSkMsTUFBQUEsR0FBRyxFQUFFO0FBRkQsS0FESTtBQUtWWSxJQUFBQSxHQUFHLEVBQUVWLE1BTEs7QUFNVlcsSUFBQUEsUUFBUSxFQUFFWDtBQU5BLEdBQUQsQ0F2Qm9CO0FBK0IvQlksRUFBQUEsUUFBUSxFQUFFO0FBQ1JqQixJQUFBQSxJQUFJLEVBQUU7QUFDSkEsTUFBQUEsSUFBSSxFQUFFUSxNQURGO0FBRUosY0FBTSxDQUFDLE1BQUQsRUFBUyxZQUFUO0FBRkYsS0FERTtBQUtSVSxJQUFBQSxLQUFLLEVBQUViO0FBTEMsR0EvQnFCO0FBc0MvQmMsRUFBQUEsR0FBRyxFQUFFO0FBQ0huQixJQUFBQSxJQUFJLEVBQUVGLGlCQUFPRyxLQUFQLENBQWFDLFFBRGhCO0FBRUhDLElBQUFBLEdBQUcsRUFBRTtBQUZGLEdBdEMwQjtBQTBDL0JpQixFQUFBQSxhQUFhLEVBQUVaLE1BMUNnQjtBQTJDL0JhLEVBQUFBLFFBQVEsRUFBRTtBQUNSckIsSUFBQUEsSUFBSSxFQUFFc0IsT0FERTtBQUVSLGVBQVM7QUFGRDtBQTNDcUIsQ0FBWCxFQStDbkI7QUFBRUMsRUFBQUEsVUFBVSxFQUFFLElBQWQ7QUFBb0JDLEVBQUFBLGNBQWMsRUFBRTtBQUFwQyxDQS9DbUIsQ0FBdEI7O2VBaURlLDhCQUFZLFNBQVosRUFBdUIzQixhQUF2QixDIiwic291cmNlUm9vdCI6Ii9hcHAvc3JjL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNjaGVtYSB9IGZyb20gJ21vbmdvb3NlJ1xuaW1wb3J0IHsgdGVuYW50TW9kZWwgfSBmcm9tICcuLi9saWIvbXVsdGlUZW5hbnQnXG5cbmNvbnN0IGludm9pY2VTY2hlbWEgPSBuZXcgU2NoZW1hKHtcbiAgZXN0aW1hdGVJZDoge1xuICAgIHR5cGU6IFNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgICByZWY6ICdFc3RpbWF0ZSdcbiAgfSxcbiAgaW52b2ljZU51bWJlcjoge1xuICAgIHR5cGU6IE51bWJlclxuICB9LFxuICBzdG9yZUlkOiB7XG4gICAgdHlwZTogU2NoZW1hLlR5cGVzLk9iamVjdElkLFxuICAgIHJlZjogJ1N0b3JlJ1xuICB9LFxuICBuYW1lOiB7XG4gICAgdHlwZTogU3RyaW5nLFxuICAgIHJlcXVpcmVkOiB0cnVlXG4gIH0sXG4gIGNsaWVudDoge1xuICAgIHR5cGU6IFNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgICByZWY6ICdDbGllbnQnXG4gIH0sXG4gIHByb3BlcnR5QWRkcmVzczoge1xuICAgIHR5cGU6IE9iamVjdFxuICB9LFxuICBsaW5lSXRlbXM6IFt7XG4gICAgaXRlbToge1xuICAgICAgdHlwZTogU2NoZW1hLlR5cGVzLk9iamVjdElkLFxuICAgICAgcmVmOiAnSW52ZW50b3J5J1xuICAgIH0sXG4gICAgcXR5OiBOdW1iZXIsXG4gICAgdW5pdENvc3Q6IE51bWJlclxuICB9XSxcbiAgZGlzY291bnQ6IHtcbiAgICB0eXBlOiB7XG4gICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICBlbnVtOiBbJ0ZMQVQnLCAnUEVSQ0VOVEFHRSddXG4gICAgfSxcbiAgICB2YWx1ZTogTnVtYmVyXG4gIH0sXG4gIHRheDoge1xuICAgIHR5cGU6IFNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgICByZWY6ICdUYXgnXG4gIH0sXG4gIGNsaWVudE1lc3NhZ2U6IFN0cmluZyxcbiAgaXNEZWxldGU6IHtcbiAgICB0eXBlOiBCb29sZWFuLFxuICAgIGRlZmF1bHQ6IGZhbHNlXG4gIH1cbn0sIHsgdGltZXN0YW1wczogdHJ1ZSwgc2tpcFZlcnNpb25pbmc6IHRydWUgfSlcblxuZXhwb3J0IGRlZmF1bHQgdGVuYW50TW9kZWwoJ0ludm9pY2UnLCBpbnZvaWNlU2NoZW1hKVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "invoice.js"
      ],
      "names": [
        "invoiceSchema",
        "Schema",
        "estimateId",
        "type",
        "Types",
        "ObjectId",
        "ref",
        "invoiceNumber",
        "Number",
        "storeId",
        "name",
        "String",
        "required",
        "client",
        "propertyAddress",
        "Object",
        "lineItems",
        "item",
        "qty",
        "unitCost",
        "discount",
        "value",
        "tax",
        "clientMessage",
        "isDelete",
        "Boolean",
        "timestamps",
        "skipVersioning"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AAEA,IAAMA,aAAa,GAAG,IAAIC,gBAAJ,CAAW;AAC/BC,EAAAA,UAAU,EAAE;AACVC,IAAAA,IAAI,EAAEF,iBAAOG,KAAP,CAAaC,QADT;AAEVC,IAAAA,GAAG,EAAE;AAFK,GADmB;AAK/BC,EAAAA,aAAa,EAAE;AACbJ,IAAAA,IAAI,EAAEK;AADO,GALgB;AAQ/BC,EAAAA,OAAO,EAAE;AACPN,IAAAA,IAAI,EAAEF,iBAAOG,KAAP,CAAaC,QADZ;AAEPC,IAAAA,GAAG,EAAE;AAFE,GARsB;AAY/BI,EAAAA,IAAI,EAAE;AACJP,IAAAA,IAAI,EAAEQ,MADF;AAEJC,IAAAA,QAAQ,EAAE;AAFN,GAZyB;AAgB/BC,EAAAA,MAAM,EAAE;AACNV,IAAAA,IAAI,EAAEF,iBAAOG,KAAP,CAAaC,QADb;AAENC,IAAAA,GAAG,EAAE;AAFC,GAhBuB;AAoB/BQ,EAAAA,eAAe,EAAE;AACfX,IAAAA,IAAI,EAAEY;AADS,GApBc;AAuB/BC,EAAAA,SAAS,EAAE,CAAC;AACVC,IAAAA,IAAI,EAAE;AACJd,MAAAA,IAAI,EAAEF,iBAAOG,KAAP,CAAaC,QADf;AAEJC,MAAAA,GAAG,EAAE;AAFD,KADI;AAKVY,IAAAA,GAAG,EAAEV,MALK;AAMVW,IAAAA,QAAQ,EAAEX;AANA,GAAD,CAvBoB;AA+B/BY,EAAAA,QAAQ,EAAE;AACRjB,IAAAA,IAAI,EAAE;AACJA,MAAAA,IAAI,EAAEQ,MADF;AAEJ,cAAM,CAAC,MAAD,EAAS,YAAT;AAFF,KADE;AAKRU,IAAAA,KAAK,EAAEb;AALC,GA/BqB;AAsC/Bc,EAAAA,GAAG,EAAE;AACHnB,IAAAA,IAAI,EAAEF,iBAAOG,KAAP,CAAaC,QADhB;AAEHC,IAAAA,GAAG,EAAE;AAFF,GAtC0B;AA0C/BiB,EAAAA,aAAa,EAAEZ,MA1CgB;AA2C/Ba,EAAAA,QAAQ,EAAE;AACRrB,IAAAA,IAAI,EAAEsB,OADE;AAER,eAAS;AAFD;AA3CqB,CAAX,EA+CnB;AAAEC,EAAAA,UAAU,EAAE,IAAd;AAAoBC,EAAAA,cAAc,EAAE;AAApC,CA/CmB,CAAtB;;eAiDe,8BAAY,SAAZ,EAAuB3B,aAAvB,C",
      "sourceRoot": "/app/src/models",
      "sourcesContent": [
        "import { Schema } from 'mongoose'\nimport { tenantModel } from '../lib/multiTenant'\n\nconst invoiceSchema = new Schema({\n  estimateId: {\n    type: Schema.Types.ObjectId,\n    ref: 'Estimate'\n  },\n  invoiceNumber: {\n    type: Number\n  },\n  storeId: {\n    type: Schema.Types.ObjectId,\n    ref: 'Store'\n  },\n  name: {\n    type: String,\n    required: true\n  },\n  client: {\n    type: Schema.Types.ObjectId,\n    ref: 'Client'\n  },\n  propertyAddress: {\n    type: Object\n  },\n  lineItems: [{\n    item: {\n      type: Schema.Types.ObjectId,\n      ref: 'Inventory'\n    },\n    qty: Number,\n    unitCost: Number\n  }],\n  discount: {\n    type: {\n      type: String,\n      enum: ['FLAT', 'PERCENTAGE']\n    },\n    value: Number\n  },\n  tax: {\n    type: Schema.Types.ObjectId,\n    ref: 'Tax'\n  },\n  clientMessage: String,\n  isDelete: {\n    type: Boolean,\n    default: false\n  }\n}, { timestamps: true, skipVersioning: true })\n\nexport default tenantModel('Invoice', invoiceSchema)\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1574924198763
  },
  "{\"sourceRoot\":\"/app/src/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/models/job.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/models/job.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/models/job.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/models/job.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/models",
        "sourceFileName": "job.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongoose = require(\"mongoose\");\n\nvar _multiTenant = require(\"../lib/multiTenant\");\n\nvar jobSchema = new _mongoose.Schema({\n  storeId: {\n    type: _mongoose.Schema.Types.ObjectId,\n    ref: 'Store'\n  },\n  jobId: {\n    type: Number,\n    required: true\n  },\n  title: {\n    type: String,\n    required: true\n  },\n  description: {\n    type: String,\n    required: true\n  },\n  client: {\n    type: _mongoose.Schema.Types.ObjectId,\n    ref: 'Client',\n    required: true\n  },\n  jobType: {\n    type: String,\n    \"enum\": ['non-recurring', 'recurring'],\n    \"default\": 'non-recurring'\n  },\n  serviceAddress: {\n    type: Object\n  },\n  status: {\n    type: String,\n    \"enum\": ['scheduled', 'unscheduled', 'inprogress', 'completed', 'onhold', 'cancelled', 'no-invoice'],\n    \"default\": 'unscheduled'\n  },\n  expenses: [{\n    chargeType: {\n      type: String,\n      \"enum\": ['time-expense', 'expense-against-casual-items', 'casual'],\n      \"default\": 'casual'\n    },\n    supplier: {\n      type: _mongoose.Schema.Types.ObjectId,\n      ref: 'Vendor'\n    },\n    technician: {\n      type: _mongoose.Schema.Types.ObjectId,\n      ref: 'User'\n    },\n    description: String,\n    date: Date,\n    purchaseOrder: String,\n    receipt: String,\n    paymentType: {\n      type: String,\n      \"enum\": ['cash', 'credit-card']\n    },\n    qty: Number,\n    amount: Number,\n    //amount is actually cost price of item\n    chargeToCustomer: {\n      type: Boolean,\n      \"default\": false //its value effect only for time-expense and expense against casual items\n\n    },\n    lineItem: {\n      item: {\n        type: _mongoose.Schema.Types.ObjectId,\n        ref: 'Inventory'\n      },\n      description: String,\n      //Description === Notes if chargeType === time-expense\n      unitCost: Number,\n      qty: Number\n    }\n  }],\n  technicians: [{\n    technician: {\n      type: _mongoose.Schema.Types.ObjectId,\n      ref: 'User'\n    },\n    status: {\n      type: String,\n      \"enum\": ['on-way']\n    },\n    checkIn: Date,\n    checkOut: Date,\n    timeLogs: [{\n      checkIn: Date,\n      checkOut: Date\n    }]\n  }],\n  // preferences: {\n  //   hourlyRate: Number,\n  //   labourFee: Number\n  // },\n  schedule: [{\n    title: String,\n    instructions: String,\n    startDateTime: Date,\n    endDateTime: Date,\n    assignedTo: [{\n      technician: {\n        type: _mongoose.Schema.Types.ObjectId,\n        ref: 'User'\n      }\n    }]\n  }],\n  attachments: [{\n    fileName: String,\n    mimeType: String,\n    location: String\n  }],\n  reminder: {\n    type: {\n      type: String,\n      \"enum\": ['call', 'email', 'visit'],\n      \"default\": 'call'\n    },\n    subject: String,\n    dateTime: Date,\n    assignedTo: [{\n      technician: {\n        type: _mongoose.Schema.Types.ObjectId,\n        ref: 'User'\n      }\n    }],\n    comments: String\n  },\n  internalNotes: {\n    to: {\n      type: _mongoose.Schema.Types.ObjectId,\n      ref: 'User'\n    },\n    via: {\n      type: String,\n      \"enum\": ['sms', 'email']\n    },\n    subject: String,\n    comments: String\n  },\n  clientsPreferences: {\n    to: {\n      type: _mongoose.Schema.Types.ObjectId,\n      ref: 'Client'\n    },\n    via: {\n      type: String,\n      \"enum\": ['sms', 'email']\n    },\n    subject: String,\n    message: String\n  },\n  preJobTechnicianReminder: {\n    // before 1 hour of JOB\n    email: {\n      type: Boolean,\n      \"default\": false\n    },\n    sms: {\n      type: Boolean,\n      \"default\": false\n    }\n  },\n  preJobCustomerReminder: {\n    // before 1 hour of JOB\n    email: {\n      type: Boolean,\n      \"default\": false\n    },\n    sms: {\n      type: Boolean,\n      \"default\": false\n    }\n  },\n  notifyCustmer: {\n    // techStatus === OnWay\n    sms: {\n      type: Boolean,\n      \"default\": false\n    },\n    email: {\n      type: Boolean,\n      \"default\": false\n    }\n  },\n  isDelete: {\n    type: Boolean,\n    \"default\": false\n  }\n}, {\n  timestamps: true,\n  skipVersioning: true\n});\n\nvar _default = (0, _multiTenant.tenantModel)('Job', jobSchema);\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "job.js"
      ],
      "names": [
        "jobSchema",
        "Schema",
        "storeId",
        "type",
        "Types",
        "ObjectId",
        "ref",
        "jobId",
        "Number",
        "required",
        "title",
        "String",
        "description",
        "client",
        "jobType",
        "serviceAddress",
        "Object",
        "status",
        "expenses",
        "chargeType",
        "supplier",
        "technician",
        "date",
        "Date",
        "purchaseOrder",
        "receipt",
        "paymentType",
        "qty",
        "amount",
        "chargeToCustomer",
        "Boolean",
        "lineItem",
        "item",
        "unitCost",
        "technicians",
        "checkIn",
        "checkOut",
        "timeLogs",
        "schedule",
        "instructions",
        "startDateTime",
        "endDateTime",
        "assignedTo",
        "attachments",
        "fileName",
        "mimeType",
        "location",
        "reminder",
        "subject",
        "dateTime",
        "comments",
        "internalNotes",
        "to",
        "via",
        "clientsPreferences",
        "message",
        "preJobTechnicianReminder",
        "email",
        "sms",
        "preJobCustomerReminder",
        "notifyCustmer",
        "isDelete",
        "timestamps",
        "skipVersioning"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AAQA,IAAMA,SAAS,GAAG,IAAIC,gBAAJ,CAAW;AAC3BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAEF,iBAAOG,KAAP,CAAaC,QADZ;AAEPC,IAAAA,GAAG,EAAE;AAFE,GADkB;AAK3BC,EAAAA,KAAK,EAAE;AACLJ,IAAAA,IAAI,EAAEK,MADD;AAELC,IAAAA,QAAQ,EAAE;AAFL,GALoB;AAS3BC,EAAAA,KAAK,EAAE;AACLP,IAAAA,IAAI,EAAEQ,MADD;AAELF,IAAAA,QAAQ,EAAE;AAFL,GAToB;AAa3BG,EAAAA,WAAW,EAAE;AACXT,IAAAA,IAAI,EAAEQ,MADK;AAEXF,IAAAA,QAAQ,EAAE;AAFC,GAbc;AAiB3BI,EAAAA,MAAM,EAAE;AACNV,IAAAA,IAAI,EAAEF,iBAAOG,KAAP,CAAaC,QADb;AAENC,IAAAA,GAAG,EAAE,QAFC;AAGNG,IAAAA,QAAQ,EAAE;AAHJ,GAjBmB;AAsB3BK,EAAAA,OAAO,EAAE;AACPX,IAAAA,IAAI,EAAEQ,MADC;AAEP,YAAM,CAAC,eAAD,EAAkB,WAAlB,CAFC;AAGP,eAAS;AAHF,GAtBkB;AA2B3BI,EAAAA,cAAc,EAAE;AACdZ,IAAAA,IAAI,EAAEa;AADQ,GA3BW;AA8B3BC,EAAAA,MAAM,EAAE;AACNd,IAAAA,IAAI,EAAEQ,MADA;AAEN,YAAM,CAAC,WAAD,EAAc,aAAd,EAA6B,YAA7B,EAA2C,WAA3C,EAAwD,QAAxD,EAAkE,WAAlE,EAA+E,YAA/E,CAFA;AAGN,eAAS;AAHH,GA9BmB;AAmC3BO,EAAAA,QAAQ,EAAE,CAAC;AACTC,IAAAA,UAAU,EAAE;AACVhB,MAAAA,IAAI,EAAEQ,MADI;AAEV,cAAM,CAAC,cAAD,EAAiB,8BAAjB,EAAiD,QAAjD,CAFI;AAGV,iBAAS;AAHC,KADH;AAMTS,IAAAA,QAAQ,EAAE;AACRjB,MAAAA,IAAI,EAAEF,iBAAOG,KAAP,CAAaC,QADX;AAERC,MAAAA,GAAG,EAAE;AAFG,KAND;AAUTe,IAAAA,UAAU,EAAE;AACVlB,MAAAA,IAAI,EAAEF,iBAAOG,KAAP,CAAaC,QADT;AAEVC,MAAAA,GAAG,EAAE;AAFK,KAVH;AAcTM,IAAAA,WAAW,EAAED,MAdJ;AAeTW,IAAAA,IAAI,EAAEC,IAfG;AAgBTC,IAAAA,aAAa,EAAEb,MAhBN;AAiBTc,IAAAA,OAAO,EAAEd,MAjBA;AAkBTe,IAAAA,WAAW,EAAE;AACXvB,MAAAA,IAAI,EAAEQ,MADK;AAEX,cAAM,CAAC,MAAD,EAAS,aAAT;AAFK,KAlBJ;AAsBTgB,IAAAA,GAAG,EAAEnB,MAtBI;AAuBToB,IAAAA,MAAM,EAAEpB,MAvBC;AAuBS;AAClBqB,IAAAA,gBAAgB,EAAE;AAChB1B,MAAAA,IAAI,EAAE2B,OADU;AAEhB,iBAAS,KAFO,CAEC;;AAFD,KAxBT;AA4BTC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,IAAI,EAAE;AACJ7B,QAAAA,IAAI,EAAEF,iBAAOG,KAAP,CAAaC,QADf;AAEJC,QAAAA,GAAG,EAAE;AAFD,OADE;AAKRM,MAAAA,WAAW,EAAED,MALL;AAKgB;AACxBsB,MAAAA,QAAQ,EAAEzB,MANF;AAORmB,MAAAA,GAAG,EAAEnB;AAPG;AA5BD,GAAD,CAnCiB;AAyE3B0B,EAAAA,WAAW,EAAE,CAAC;AACZb,IAAAA,UAAU,EAAE;AACVlB,MAAAA,IAAI,EAAEF,iBAAOG,KAAP,CAAaC,QADT;AAEVC,MAAAA,GAAG,EAAE;AAFK,KADA;AAKZW,IAAAA,MAAM,EAAE;AACNd,MAAAA,IAAI,EAAEQ,MADA;AAEN,cAAM,CAAC,QAAD;AAFA,KALI;AASZwB,IAAAA,OAAO,EAAEZ,IATG;AAUZa,IAAAA,QAAQ,EAAEb,IAVE;AAWZc,IAAAA,QAAQ,EAAE,CAAC;AAAEF,MAAAA,OAAO,EAAEZ,IAAX;AAAiBa,MAAAA,QAAQ,EAAEb;AAA3B,KAAD;AAXE,GAAD,CAzEc;AAsF3B;AACA;AACA;AACA;AACAe,EAAAA,QAAQ,EAAE,CAAC;AACT5B,IAAAA,KAAK,EAAEC,MADE;AAET4B,IAAAA,YAAY,EAAE5B,MAFL;AAGT6B,IAAAA,aAAa,EAAEjB,IAHN;AAITkB,IAAAA,WAAW,EAAElB,IAJJ;AAKTmB,IAAAA,UAAU,EAAE,CAAC;AACXrB,MAAAA,UAAU,EAAE;AACVlB,QAAAA,IAAI,EAAEF,iBAAOG,KAAP,CAAaC,QADT;AAEVC,QAAAA,GAAG,EAAE;AAFK;AADD,KAAD;AALH,GAAD,CA1FiB;AAsG3BqC,EAAAA,WAAW,EAAE,CAAC;AACZC,IAAAA,QAAQ,EAAEjC,MADE;AAEZkC,IAAAA,QAAQ,EAAElC,MAFE;AAGZmC,IAAAA,QAAQ,EAAEnC;AAHE,GAAD,CAtGc;AA2G3BoC,EAAAA,QAAQ,EAAE;AACR5C,IAAAA,IAAI,EAAE;AACJA,MAAAA,IAAI,EAAEQ,MADF;AAEJ,cAAM,CAAC,MAAD,EAAS,OAAT,EAAkB,OAAlB,CAFF;AAGJ,iBAAS;AAHL,KADE;AAMRqC,IAAAA,OAAO,EAAErC,MAND;AAORsC,IAAAA,QAAQ,EAAE1B,IAPF;AAQRmB,IAAAA,UAAU,EAAE,CAAC;AACXrB,MAAAA,UAAU,EAAE;AACVlB,QAAAA,IAAI,EAAEF,iBAAOG,KAAP,CAAaC,QADT;AAEVC,QAAAA,GAAG,EAAE;AAFK;AADD,KAAD,CARJ;AAcR4C,IAAAA,QAAQ,EAAEvC;AAdF,GA3GiB;AA2H3BwC,EAAAA,aAAa,EAAE;AACbC,IAAAA,EAAE,EAAE;AACFjD,MAAAA,IAAI,EAAEF,iBAAOG,KAAP,CAAaC,QADjB;AAEFC,MAAAA,GAAG,EAAE;AAFH,KADS;AAKb+C,IAAAA,GAAG,EAAE;AACHlD,MAAAA,IAAI,EAAEQ,MADH;AAEH,cAAM,CAAC,KAAD,EAAQ,OAAR;AAFH,KALQ;AASbqC,IAAAA,OAAO,EAAErC,MATI;AAUbuC,IAAAA,QAAQ,EAAEvC;AAVG,GA3HY;AAuI3B2C,EAAAA,kBAAkB,EAAE;AAClBF,IAAAA,EAAE,EAAE;AACFjD,MAAAA,IAAI,EAAEF,iBAAOG,KAAP,CAAaC,QADjB;AAEFC,MAAAA,GAAG,EAAE;AAFH,KADc;AAKlB+C,IAAAA,GAAG,EAAE;AACHlD,MAAAA,IAAI,EAAEQ,MADH;AAEH,cAAM,CAAC,KAAD,EAAQ,OAAR;AAFH,KALa;AASlBqC,IAAAA,OAAO,EAAErC,MATS;AAUlB4C,IAAAA,OAAO,EAAE5C;AAVS,GAvIO;AAmJ3B6C,EAAAA,wBAAwB,EAAE;AACxB;AACAC,IAAAA,KAAK,EAAE;AACLtD,MAAAA,IAAI,EAAE2B,OADD;AAEL,iBAAS;AAFJ,KAFiB;AAMxB4B,IAAAA,GAAG,EAAE;AACHvD,MAAAA,IAAI,EAAE2B,OADH;AAEH,iBAAS;AAFN;AANmB,GAnJC;AA8J3B6B,EAAAA,sBAAsB,EAAE;AACtB;AACAF,IAAAA,KAAK,EAAE;AACLtD,MAAAA,IAAI,EAAE2B,OADD;AAEL,iBAAS;AAFJ,KAFe;AAMtB4B,IAAAA,GAAG,EAAE;AACHvD,MAAAA,IAAI,EAAE2B,OADH;AAEH,iBAAS;AAFN;AANiB,GA9JG;AAyK3B8B,EAAAA,aAAa,EAAE;AACb;AACAF,IAAAA,GAAG,EAAE;AACHvD,MAAAA,IAAI,EAAE2B,OADH;AAEH,iBAAS;AAFN,KAFQ;AAMb2B,IAAAA,KAAK,EAAE;AACLtD,MAAAA,IAAI,EAAE2B,OADD;AAEL,iBAAS;AAFJ;AANM,GAzKY;AAoL3B+B,EAAAA,QAAQ,EAAE;AACR1D,IAAAA,IAAI,EAAE2B,OADE;AAER,eAAS;AAFD;AApLiB,CAAX,EAwLf;AAAEgC,EAAAA,UAAU,EAAE,IAAd;AAAoBC,EAAAA,cAAc,EAAE;AAApC,CAxLe,CAAlB;;eA0Le,8BAAY,KAAZ,EAAmB/D,SAAnB,C",
      "sourceRoot": "/app/src/models",
      "sourcesContent": [
        "import { Schema } from 'mongoose'\nimport { tenantModel } from '../lib/multiTenant'\n\n/**\n * #casual items - item that are direct line items of a job\n * #time expense - item that calculates the cost based on hours spent\n * #expense against casual item - item that refers to the line item or in-house cost keeping\n */\n\nconst jobSchema = new Schema({\n  storeId: {\n    type: Schema.Types.ObjectId,\n    ref: 'Store'\n  },\n  jobId: {\n    type: Number,\n    required: true\n  },\n  title: {\n    type: String,\n    required: true\n  },\n  description: {\n    type: String,\n    required: true\n  },\n  client: {\n    type: Schema.Types.ObjectId,\n    ref: 'Client',\n    required: true\n  },\n  jobType: {\n    type: String,\n    enum: ['non-recurring', 'recurring'],\n    default: 'non-recurring'\n  },\n  serviceAddress: {\n    type: Object,\n  },\n  status: {\n    type: String,\n    enum: ['scheduled', 'unscheduled', 'inprogress', 'completed', 'onhold', 'cancelled', 'no-invoice'],\n    default: 'unscheduled'\n  },\n  expenses: [{\n    chargeType: {\n      type: String,\n      enum: ['time-expense', 'expense-against-casual-items', 'casual'],\n      default: 'casual'\n    },\n    supplier: {\n      type: Schema.Types.ObjectId,\n      ref: 'Vendor'\n    },\n    technician: {\n      type: Schema.Types.ObjectId,\n      ref: 'User'\n    },\n    description: String,\n    date: Date,\n    purchaseOrder: String,\n    receipt: String,\n    paymentType: {\n      type: String,\n      enum: ['cash', 'credit-card']\n    },\n    qty: Number,\n    amount: Number,   //amount is actually cost price of item\n    chargeToCustomer: {\n      type: Boolean,\n      default: false   //its value effect only for time-expense and expense against casual items\n    },\n    lineItem: {\n      item: {\n        type: Schema.Types.ObjectId,\n        ref: 'Inventory'\n      },\n      description: String,    //Description === Notes if chargeType === time-expense\n      unitCost: Number,\n      qty: Number\n    }\n  }],\n  technicians: [{\n    technician: {\n      type: Schema.Types.ObjectId,\n      ref: 'User'\n    },\n    status: {\n      type: String,\n      enum: ['on-way']\n    },\n    checkIn: Date,\n    checkOut: Date,\n    timeLogs: [{ checkIn: Date, checkOut: Date }]\n  }],\n  // preferences: {\n  //   hourlyRate: Number,\n  //   labourFee: Number\n  // },\n  schedule: [{\n    title: String,\n    instructions: String,\n    startDateTime: Date,\n    endDateTime: Date,\n    assignedTo: [{\n      technician: {\n        type: Schema.Types.ObjectId,\n        ref: 'User'\n      }\n    }]\n  }],\n  attachments: [{\n    fileName: String,\n    mimeType: String,\n    location: String\n  }],\n  reminder: {\n    type: {\n      type: String,\n      enum: ['call', 'email', 'visit'],\n      default: 'call'\n    },\n    subject: String,\n    dateTime: Date,\n    assignedTo: [{\n      technician: {\n        type: Schema.Types.ObjectId,\n        ref: 'User'\n      }\n    }],\n    comments: String\n  },\n  internalNotes: {\n    to: {\n      type: Schema.Types.ObjectId,\n      ref: 'User'\n    },\n    via: {\n      type: String,\n      enum: ['sms', 'email']\n    },\n    subject: String,\n    comments: String\n  },\n  clientsPreferences: {\n    to: {\n      type: Schema.Types.ObjectId,\n      ref: 'Client'\n    },\n    via: {\n      type: String,\n      enum: ['sms', 'email']\n    },\n    subject: String,\n    message: String\n  },\n  preJobTechnicianReminder: {\n    // before 1 hour of JOB\n    email: {\n      type: Boolean,\n      default: false\n    },\n    sms: {\n      type: Boolean,\n      default: false\n    }\n  },\n  preJobCustomerReminder: {\n    // before 1 hour of JOB\n    email: {\n      type: Boolean,\n      default: false\n    },\n    sms: {\n      type: Boolean,\n      default: false\n    }\n  },\n  notifyCustmer: {\n    // techStatus === OnWay\n    sms: {\n      type: Boolean,\n      default: false\n    },\n    email: {\n      type: Boolean,\n      default: false\n    }\n  },\n  isDelete: {\n    type: Boolean,\n    default: false\n  }\n}, { timestamps: true, skipVersioning: true })\n\nexport default tenantModel('Job', jobSchema)\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1575001852206
  },
  "{\"sourceRoot\":\"/app/src/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/routes/job.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/routes/job.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/routes/job.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/routes/job.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/routes",
        "sourceFileName": "job.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _job = require(\"../controllers/job\");\n\nvar router = (0, _express.Router)();\nrouter.get('/', _job.getJobs);\nrouter.post('/create', _job.createJob);\nrouter.get('/get_next_number', _job.getNextJobNumber);\nrouter.post('/delete', _job.deleteJobs);\nrouter.post('/update', _job.updateJob);\nrouter.post('/update_status', _job.updateJobStatus);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImpvYi5qcyJdLCJuYW1lcyI6WyJyb3V0ZXIiLCJnZXQiLCJnZXRKb2JzIiwicG9zdCIsImNyZWF0ZUpvYiIsImdldE5leHRKb2JOdW1iZXIiLCJkZWxldGVKb2JzIiwidXBkYXRlSm9iIiwidXBkYXRlSm9iU3RhdHVzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBRUEsSUFBTUEsTUFBTSxHQUFHLHNCQUFmO0FBRUFBLE1BQU0sQ0FBQ0MsR0FBUCxDQUFXLEdBQVgsRUFBZ0JDLFlBQWhCO0FBQ0FGLE1BQU0sQ0FBQ0csSUFBUCxDQUFZLFNBQVosRUFBdUJDLGNBQXZCO0FBQ0FKLE1BQU0sQ0FBQ0MsR0FBUCxDQUFXLGtCQUFYLEVBQStCSSxxQkFBL0I7QUFDQUwsTUFBTSxDQUFDRyxJQUFQLENBQVksU0FBWixFQUF1QkcsZUFBdkI7QUFDQU4sTUFBTSxDQUFDRyxJQUFQLENBQVksU0FBWixFQUF1QkksY0FBdkI7QUFDQVAsTUFBTSxDQUFDRyxJQUFQLENBQVksZ0JBQVosRUFBOEJLLG9CQUE5QjtlQUVlUixNIiwic291cmNlUm9vdCI6Ii9hcHAvc3JjL3JvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJvdXRlciB9IGZyb20gJ2V4cHJlc3MnXG5pbXBvcnQgeyBjcmVhdGVKb2IsIGdldE5leHRKb2JOdW1iZXIsIHVwZGF0ZUpvYlN0YXR1cywgZGVsZXRlSm9icywgdXBkYXRlSm9iLCBnZXRKb2JzIH0gZnJvbSAnLi4vY29udHJvbGxlcnMvam9iJ1xuXG5jb25zdCByb3V0ZXIgPSBSb3V0ZXIoKVxuXG5yb3V0ZXIuZ2V0KCcvJywgZ2V0Sm9icylcbnJvdXRlci5wb3N0KCcvY3JlYXRlJywgY3JlYXRlSm9iKVxucm91dGVyLmdldCgnL2dldF9uZXh0X251bWJlcicsIGdldE5leHRKb2JOdW1iZXIpXG5yb3V0ZXIucG9zdCgnL2RlbGV0ZScsIGRlbGV0ZUpvYnMpXG5yb3V0ZXIucG9zdCgnL3VwZGF0ZScsIHVwZGF0ZUpvYilcbnJvdXRlci5wb3N0KCcvdXBkYXRlX3N0YXR1cycsIHVwZGF0ZUpvYlN0YXR1cylcblxuZXhwb3J0IGRlZmF1bHQgcm91dGVyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "job.js"
      ],
      "names": [
        "router",
        "get",
        "getJobs",
        "post",
        "createJob",
        "getNextJobNumber",
        "deleteJobs",
        "updateJob",
        "updateJobStatus"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AAEA,IAAMA,MAAM,GAAG,sBAAf;AAEAA,MAAM,CAACC,GAAP,CAAW,GAAX,EAAgBC,YAAhB;AACAF,MAAM,CAACG,IAAP,CAAY,SAAZ,EAAuBC,cAAvB;AACAJ,MAAM,CAACC,GAAP,CAAW,kBAAX,EAA+BI,qBAA/B;AACAL,MAAM,CAACG,IAAP,CAAY,SAAZ,EAAuBG,eAAvB;AACAN,MAAM,CAACG,IAAP,CAAY,SAAZ,EAAuBI,cAAvB;AACAP,MAAM,CAACG,IAAP,CAAY,gBAAZ,EAA8BK,oBAA9B;eAEeR,M",
      "sourceRoot": "/app/src/routes",
      "sourcesContent": [
        "import { Router } from 'express'\nimport { createJob, getNextJobNumber, updateJobStatus, deleteJobs, updateJob, getJobs } from '../controllers/job'\n\nconst router = Router()\n\nrouter.get('/', getJobs)\nrouter.post('/create', createJob)\nrouter.get('/get_next_number', getNextJobNumber)\nrouter.post('/delete', deleteJobs)\nrouter.post('/update', updateJob)\nrouter.post('/update_status', updateJobStatus)\n\nexport default router\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1575001852214
  },
  "{\"sourceRoot\":\"/app/src/controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/controllers/job.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src/controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/controllers/job.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/controllers/job.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/controllers/job.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src/controllers",
        "sourceFileName": "job.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deleteJobs = exports.updateJobStatus = exports.getNextJobNumber = exports.getJobs = exports.updateJob = exports.createJob = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _job = _interopRequireDefault(require(\"../models/job\"));\n\nvar _errors = _interopRequireDefault(require(\"../constants/errors\"));\n\nvar _joi = _interopRequireDefault(require(\"@hapi/joi\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar createSchema = _joi[\"default\"].object({\n  jobId: _joi[\"default\"].number().required(),\n  title: _joi[\"default\"].string().required(),\n  description: _joi[\"default\"].string().required(),\n  jobType: _joi[\"default\"].string().valid('non-recurring', 'recurring').optional(),\n  client: _joi[\"default\"].string().required(),\n  serviceAddress: _joi[\"default\"].object().optional().allow({}),\n  status: _joi[\"default\"].string().valid('scheduled', 'unscheduled', 'inprogress', 'completed', 'onhold', 'cancelled', 'no-invoice').optional(),\n  expenses: _joi[\"default\"].array().items({\n    supplier: _joi[\"default\"].string().optional(),\n    technician: _joi[\"default\"].string().optional(),\n    description: _joi[\"default\"].string().optional().allow(''),\n    date: _joi[\"default\"].string().optional().allow(''),\n    purchaseOrder: _joi[\"default\"].string().optional().allow(''),\n    receipt: _joi[\"default\"].string().optional().allow(''),\n    paymentType: _joi[\"default\"].string().valid('cash', 'credit-card'),\n    qty: _joi[\"default\"].number().optional().allow(''),\n    amount: _joi[\"default\"].number().optional().allow(''),\n    chargeToCustomer: _joi[\"default\"][\"boolean\"]().optional(),\n    chargeType: _joi[\"default\"].string().valid('time-expense', 'expense-against-casual-items', 'casual').optional(),\n    lineItem: _joi[\"default\"].object({\n      item: _joi[\"default\"].string().required(),\n      description: _joi[\"default\"].string().required(),\n      unitCost: _joi[\"default\"].number().required(),\n      qty: _joi[\"default\"].number().required()\n    }).required()\n  }),\n  technicians: _joi[\"default\"].array().items({\n    technician: _joi[\"default\"].string().required(),\n    status: _joi[\"default\"].string().valid('on-way').optional(),\n    checkIn: _joi[\"default\"].string().optional().allow(''),\n    checkOut: _joi[\"default\"].string().optional().allow('')\n  }).optional().allow([]),\n  schedule: _joi[\"default\"].array().items({\n    title: _joi[\"default\"].string().optional().allow(''),\n    instructions: _joi[\"default\"].string().optional().allow(''),\n    startDateTime: _joi[\"default\"].string().optional().allow(''),\n    endDatetime: _joi[\"default\"].string().optional().allow(''),\n    assignedTo: _joi[\"default\"].array().items({\n      technician: _joi[\"default\"].string().required()\n    }).optional().allow([])\n  }).optional().allow([]),\n  attachments: _joi[\"default\"].array().items({\n    fileName: _joi[\"default\"].string().optional(),\n    mimeType: _joi[\"default\"].string().optional(),\n    location: _joi[\"default\"].string().optional()\n  }).optional().allow([]),\n  reminder: _joi[\"default\"].object({\n    type: _joi[\"default\"].string().valid('call', 'email', 'visit').required(),\n    subject: _joi[\"default\"].string().optional().allow(''),\n    dateTime: _joi[\"default\"].string().optional().allow(''),\n    assignedTo: _joi[\"default\"].array().items({\n      technician: _joi[\"default\"].string().optional()\n    }),\n    comments: _joi[\"default\"].string().optional().allow('')\n  }).optional().allow({}),\n  internalNotes: _joi[\"default\"].object({\n    to: _joi[\"default\"].string().optional(),\n    via: _joi[\"default\"].string().valid('sms', 'email').required(),\n    subject: _joi[\"default\"].string().optional().allow(''),\n    comments: _joi[\"default\"].string().optional().allow('')\n  }).optional().allow({}),\n  clientsPreferences: _joi[\"default\"].object({\n    to: _joi[\"default\"].string().optional(),\n    via: _joi[\"default\"].string().valid('sms', 'email').required(),\n    subject: _joi[\"default\"].string().optional().allow(''),\n    message: _joi[\"default\"].string().optional().allow('')\n  }).optional().allow({})\n});\n\nvar updateSchema = _joi[\"default\"].object({\n  id: _joi[\"default\"].string().required(),\n  jobId: _joi[\"default\"].number().required(),\n  title: _joi[\"default\"].string().required(),\n  description: _joi[\"default\"].string().required(),\n  jobType: _joi[\"default\"].string().valid('non-recurring', 'recurring').optional(),\n  client: _joi[\"default\"].string().required(),\n  serviceAddress: _joi[\"default\"].object().optional().allow({}),\n  status: _joi[\"default\"].string().valid('scheduled', 'unscheduled', 'inprogress', 'completed', 'onhold', 'cancelled', 'no-invoice').optional(),\n  expenses: _joi[\"default\"].array().items({\n    supplier: _joi[\"default\"].string().optional(),\n    technician: _joi[\"default\"].string().optional(),\n    description: _joi[\"default\"].string().optional().allow(''),\n    date: _joi[\"default\"].string().optional().allow(''),\n    purchaseOrder: _joi[\"default\"].string().optional().allow(''),\n    receipt: _joi[\"default\"].string().optional().allow(''),\n    paymentType: _joi[\"default\"].string().valid('cash', 'credit-card'),\n    qty: _joi[\"default\"].number().optional().allow(''),\n    amount: _joi[\"default\"].number().optional().allow(''),\n    chargeToCustomer: _joi[\"default\"][\"boolean\"]().optional(),\n    chargeType: _joi[\"default\"].string().valid('time-expense', 'expense-against-casual-items', 'casual').optional(),\n    lineItem: _joi[\"default\"].object({\n      item: _joi[\"default\"].string().required(),\n      description: _joi[\"default\"].string().required(),\n      unitCost: _joi[\"default\"].number().required(),\n      qty: _joi[\"default\"].number().required()\n    }).required()\n  }),\n  technicians: _joi[\"default\"].array().items({\n    technician: _joi[\"default\"].string().required(),\n    status: _joi[\"default\"].string().valid('on-way').optional(),\n    checkIn: _joi[\"default\"].string().optional().allow(''),\n    checkOut: _joi[\"default\"].string().optional().allow('')\n  }).optional().allow([]),\n  schedule: _joi[\"default\"].array().items({\n    title: _joi[\"default\"].string().optional().allow(''),\n    instructions: _joi[\"default\"].string().optional().allow(''),\n    startDateTime: _joi[\"default\"].string().optional().allow(''),\n    endDatetime: _joi[\"default\"].string().optional().allow(''),\n    assignedTo: _joi[\"default\"].array().items({\n      technician: _joi[\"default\"].string().required()\n    }).optional().allow([])\n  }).optional().allow([]),\n  attachments: _joi[\"default\"].array().items({\n    fileName: _joi[\"default\"].string().optional(),\n    mimeType: _joi[\"default\"].string().optional(),\n    location: _joi[\"default\"].string().optional()\n  }).optional().allow([]),\n  reminder: _joi[\"default\"].object({\n    type: _joi[\"default\"].string().valid('call', 'email', 'visit').required(),\n    subject: _joi[\"default\"].string().optional().allow(''),\n    dateTime: _joi[\"default\"].string().optional().allow(''),\n    assignedTo: _joi[\"default\"].array().items({\n      technician: _joi[\"default\"].string().optional()\n    }),\n    comments: _joi[\"default\"].string().optional().allow('')\n  }).optional().allow({}),\n  internalNotes: _joi[\"default\"].object({\n    to: _joi[\"default\"].string().optional(),\n    via: _joi[\"default\"].string().valid('sms', 'email').required(),\n    subject: _joi[\"default\"].string().optional().allow(''),\n    comments: _joi[\"default\"].string().optional().allow('')\n  }).optional().allow({}),\n  clientsPreferences: _joi[\"default\"].object({\n    to: _joi[\"default\"].string().optional(),\n    via: _joi[\"default\"].string().valid('sms', 'email').required(),\n    subject: _joi[\"default\"].string().optional().allow(''),\n    message: _joi[\"default\"].string().optional().allow('')\n  }).optional().allow({})\n});\n\nvar updateStatusSchema = _joi[\"default\"].object({\n  id: _joi[\"default\"].string().required(),\n  status: _joi[\"default\"].string().valid('scheduled', 'un-scheduled', 'in-progress', 'completed', 'on-hold', 'cancelled', 'no-invoice').required()\n});\n\nvar deleteSchema = _joi[\"default\"].object({\n  id: _joi[\"default\"].array().items(_joi[\"default\"].string()).required()\n});\n\nvar formatSortData = function formatSortData() {\n  var sort = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  if (!sort || sort.length === 0) return {};\n  return sort.reduce(function (s, item) {\n    var _item$split = item.split('.'),\n        _item$split2 = (0, _slicedToArray2[\"default\"])(_item$split, 2),\n        key = _item$split2[0],\n        value = _item$split2[1];\n\n    switch (value) {\n      case 'asc':\n        return _objectSpread({}, s, (0, _defineProperty2[\"default\"])({}, key, 1));\n\n      case 'desc':\n        return _objectSpread({}, s, (0, _defineProperty2[\"default\"])({}, key, -1));\n\n      default:\n        return s;\n    }\n  }, {});\n};\n\nvar isNumber = function isNumber(text) {\n  var data = parseInt(text);\n  if (typeof data === 'number' && !Number.isNaN(data)) return data;\n  return '';\n};\n\nvar createJob = function createJob(req, res) {\n  var validation, storeId, _req$body, forceUpdate, rest, found, data;\n\n  return _regenerator[\"default\"].async(function createJob$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          validation = _joi[\"default\"].validate(req.body, createSchema);\n\n          if (!validation.error) {\n            _context.next = 4;\n            break;\n          }\n\n          throw new Error(validation.error);\n\n        case 4:\n          storeId = req.storeId;\n          _req$body = req.body, forceUpdate = _req$body.forceUpdate, rest = (0, _objectWithoutProperties2[\"default\"])(_req$body, [\"forceUpdate\"]);\n\n          if (forceUpdate) {\n            _context.next = 12;\n            break;\n          }\n\n          _context.next = 9;\n          return _regenerator[\"default\"].awrap((0, _job[\"default\"])().findOne({\n            jobId: rest.jobId\n          }));\n\n        case 9:\n          found = _context.sent;\n\n          if (!found) {\n            _context.next = 12;\n            break;\n          }\n\n          throw new Error(_errors[\"default\"].RESOURCE_ALREADY_EXISTS);\n\n        case 12:\n          _context.next = 14;\n          return _regenerator[\"default\"].awrap((0, _job[\"default\"])().create(_objectSpread({}, rest, {\n            storeId: storeId\n          })));\n\n        case 14:\n          data = _context.sent;\n          return _context.abrupt(\"return\", res.status(200).json({\n            data: data\n          }));\n\n        case 18:\n          _context.prev = 18;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n\n          if (!(_context.t0.message === _errors[\"default\"].RESOURCE_ALREADY_EXISTS)) {\n            _context.next = 23;\n            break;\n          }\n\n          return _context.abrupt(\"return\", res.status(409).json({\n            error: true,\n            reason: _context.t0.message\n          }));\n\n        case 23:\n          return _context.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context.t0.message\n          }));\n\n        case 24:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 18]]);\n};\n\nexports.createJob = createJob;\n\nvar updateJob = function updateJob(req, res) {\n  var validation, _req$body2, forceUpdate, _id, rest, _result, result;\n\n  return _regenerator[\"default\"].async(function updateJob$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          validation = _joi[\"default\"].validate(req.body, updateSchema);\n\n          if (!validation.error) {\n            _context2.next = 4;\n            break;\n          }\n\n          throw new Error(validation.error);\n\n        case 4:\n          _req$body2 = req.body, forceUpdate = _req$body2.forceUpdate, _id = _req$body2.id, rest = (0, _objectWithoutProperties2[\"default\"])(_req$body2, [\"forceUpdate\", \"id\"]);\n\n          if (forceUpdate) {\n            _context2.next = 11;\n            break;\n          }\n\n          _context2.next = 8;\n          return _regenerator[\"default\"].awrap((0, _job[\"default\"])().findOne({\n            jobId: rest.jobId,\n            _id: {\n              $ne: _id\n            }\n          }));\n\n        case 8:\n          _result = _context2.sent;\n\n          if (!_result) {\n            _context2.next = 11;\n            break;\n          }\n\n          throw new Error(_errors[\"default\"].RESOURCE_ALREADY_EXISTS);\n\n        case 11:\n          _context2.next = 13;\n          return _regenerator[\"default\"].awrap((0, _job[\"default\"])().findOneAndUpdate({\n            _id: _id,\n            isDelete: false\n          }, {\n            $set: _objectSpread({}, rest)\n          }, {\n            \"new\": true\n          }));\n\n        case 13:\n          result = _context2.sent;\n          return _context2.abrupt(\"return\", res.json({\n            data: result\n          }));\n\n        case 17:\n          _context2.prev = 17;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0);\n          return _context2.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context2.t0.message\n          }));\n\n        case 21:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 17]]);\n};\n\nexports.updateJob = updateJob;\n\nvar getJobs = function getJobs(req, res) {\n  var _req$query, page, limit, _id, text, status, customerId, dateFrom, dateTo, _req$query$sort, sort, result, filter, sorts, data;\n\n  return _regenerator[\"default\"].async(function getJobs$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _req$query = req.query, page = _req$query.page, limit = _req$query.limit, _id = _req$query.id, text = _req$query.text, status = _req$query.status, customerId = _req$query.customerId, dateFrom = _req$query.dateFrom, dateTo = _req$query.dateTo, _req$query$sort = _req$query.sort, sort = _req$query$sort === void 0 ? [] : _req$query$sort;\n\n          if (!_id) {\n            _context3.next = 9;\n            break;\n          }\n\n          _context3.next = 5;\n          return _regenerator[\"default\"].awrap((0, _job[\"default\"])().findOne({\n            _id: _id,\n            isDelete: false\n          }).populate([{\n            path: 'client'\n          }, {\n            path: 'expenses.lineItem.item',\n            select: 'type name description taxExempt inventoryStock'\n          }, {\n            path: 'technicians.technician'\n          }]));\n\n        case 5:\n          result = _context3.sent;\n          return _context3.abrupt(\"return\", res.json({\n            data: result\n          }));\n\n        case 9:\n          filter = {\n            $and: []\n          };\n          sorts = formatSortData(sort);\n          if (status) filter.$and.push({\n            status: status\n          });\n          if (customerId) filter.$and.push({\n            client: customerId\n          });\n          if (dateFrom) filter.$and.push({\n            createdAt: {\n              $gte: new Date(dateFrom)\n            }\n          });\n          if (dateTo) filter.$and.push({\n            createdAt: {\n              $lte: new Date(dateTo)\n            }\n          });\n\n          if (text) {\n            filter.$and.push({\n              $or: [{\n                jobId: isNumber(text)\n              }, {\n                title: {\n                  $regex: new RegExp(text.split(' ').join('|')),\n                  $options: 'i'\n                }\n              }]\n            });\n          }\n\n          if (filter.$and.length === 0) filter = {};\n          _context3.next = 19;\n          return _regenerator[\"default\"].awrap((0, _job[\"default\"])().paginate(_objectSpread({\n            isDelete: false\n          }, filter), {\n            page: page,\n            limit: limit,\n            sort: _objectSpread({}, sorts),\n            populate: [{\n              path: 'client'\n            }, {\n              path: 'lineItems.item',\n              select: 'type name description taxExempt inventoryStock'\n            }, {\n              path: 'technicians.technician'\n            }]\n          }));\n\n        case 19:\n          data = _context3.sent;\n          return _context3.abrupt(\"return\", res.json(data));\n\n        case 21:\n          _context3.next = 27;\n          break;\n\n        case 23:\n          _context3.prev = 23;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(_context3.t0);\n          return _context3.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context3.t0.message\n          }));\n\n        case 27:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 23]]);\n};\n\nexports.getJobs = getJobs;\n\nvar getNextJobNumber = function getNextJobNumber(req, res) {\n  var result;\n  return _regenerator[\"default\"].async(function getNextJobNumber$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return _regenerator[\"default\"].awrap((0, _job[\"default\"])().findOne({}, {}, {\n            sort: {\n              jobId: -1\n            }\n          }));\n\n        case 3:\n          result = _context4.sent;\n\n          if (result) {\n            _context4.next = 6;\n            break;\n          }\n\n          return _context4.abrupt(\"return\", res.json({\n            data: {\n              jobId: 1\n            }\n          }));\n\n        case 6:\n          return _context4.abrupt(\"return\", res.json({\n            data: {\n              jobId: parseInt(result.jobId) + 1\n            }\n          }));\n\n        case 9:\n          _context4.prev = 9;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.log(_context4.t0);\n          return _context4.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context4.t0.message\n          }));\n\n        case 13:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, [[0, 9]]);\n};\n\nexports.getNextJobNumber = getNextJobNumber;\n\nvar updateJobStatus = function updateJobStatus(req, res) {\n  var validation, _req$body3, _id, status, result;\n\n  return _regenerator[\"default\"].async(function updateJobStatus$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          validation = _joi[\"default\"].validate(req.body, updateStatusSchema);\n\n          if (!validation.error) {\n            _context5.next = 4;\n            break;\n          }\n\n          throw new Error(validation.error);\n\n        case 4:\n          _req$body3 = req.body, _id = _req$body3.id, status = _req$body3.status;\n          _context5.next = 7;\n          return _regenerator[\"default\"].awrap((0, _job[\"default\"])().findOneAndUpdate({\n            _id: _id,\n            isDelete: false\n          }, {\n            $set: {\n              status: status\n            }\n          }, {\n            \"new\": true\n          }));\n\n        case 7:\n          result = _context5.sent;\n          return _context5.abrupt(\"return\", res.json({\n            data: result\n          }));\n\n        case 11:\n          _context5.prev = 11;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.log(_context5.t0);\n          return _context5.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context5.t0.message\n          }));\n\n        case 15:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, [[0, 11]]);\n};\n\nexports.updateJobStatus = updateJobStatus;\n\nvar deleteJobs = function deleteJobs(req, res) {\n  var validation, _id, result;\n\n  return _regenerator[\"default\"].async(function deleteJobs$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          validation = _joi[\"default\"].validate(req.body, deleteSchema);\n\n          if (!validation.error) {\n            _context6.next = 4;\n            break;\n          }\n\n          throw new Error(validation.error);\n\n        case 4:\n          _id = req.body.id;\n          _context6.next = 7;\n          return _regenerator[\"default\"].awrap((0, _job[\"default\"])().updateMany({\n            _id: {\n              $in: _id\n            }\n          }, {\n            $set: {\n              isDelete: true\n            }\n          }));\n\n        case 7:\n          result = _context6.sent;\n          return _context6.abrupt(\"return\", res.json({\n            data: result\n          }));\n\n        case 11:\n          _context6.prev = 11;\n          _context6.t0 = _context6[\"catch\"](0);\n          console.log(_context6.t0);\n          return _context6.abrupt(\"return\", res.status(500).json({\n            error: true,\n            reason: _context6.t0.message\n          }));\n\n        case 15:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, [[0, 11]]);\n};\n\nexports.deleteJobs = deleteJobs;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "job.js"
      ],
      "names": [
        "createSchema",
        "Joi",
        "object",
        "jobId",
        "number",
        "required",
        "title",
        "string",
        "description",
        "jobType",
        "valid",
        "optional",
        "client",
        "serviceAddress",
        "allow",
        "status",
        "expenses",
        "array",
        "items",
        "supplier",
        "technician",
        "date",
        "purchaseOrder",
        "receipt",
        "paymentType",
        "qty",
        "amount",
        "chargeToCustomer",
        "chargeType",
        "lineItem",
        "item",
        "unitCost",
        "technicians",
        "checkIn",
        "checkOut",
        "schedule",
        "instructions",
        "startDateTime",
        "endDatetime",
        "assignedTo",
        "attachments",
        "fileName",
        "mimeType",
        "location",
        "reminder",
        "type",
        "subject",
        "dateTime",
        "comments",
        "internalNotes",
        "to",
        "via",
        "clientsPreferences",
        "message",
        "updateSchema",
        "id",
        "updateStatusSchema",
        "deleteSchema",
        "formatSortData",
        "sort",
        "length",
        "reduce",
        "s",
        "split",
        "key",
        "value",
        "isNumber",
        "text",
        "data",
        "parseInt",
        "Number",
        "isNaN",
        "createJob",
        "req",
        "res",
        "validation",
        "validate",
        "body",
        "error",
        "Error",
        "storeId",
        "forceUpdate",
        "rest",
        "findOne",
        "found",
        "ERRORS",
        "RESOURCE_ALREADY_EXISTS",
        "create",
        "json",
        "console",
        "log",
        "reason",
        "updateJob",
        "_id",
        "$ne",
        "result",
        "findOneAndUpdate",
        "isDelete",
        "$set",
        "getJobs",
        "query",
        "page",
        "limit",
        "customerId",
        "dateFrom",
        "dateTo",
        "populate",
        "path",
        "select",
        "filter",
        "$and",
        "sorts",
        "push",
        "createdAt",
        "$gte",
        "Date",
        "$lte",
        "$or",
        "$regex",
        "RegExp",
        "join",
        "$options",
        "paginate",
        "getNextJobNumber",
        "updateJobStatus",
        "deleteJobs",
        "updateMany",
        "$in"
      ],
      "mappings": "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",
      "sourceRoot": "/app/src/controllers",
      "sourcesContent": [
        "import _JobModel from '../models/job'\nimport ERRORS from '../constants/errors'\nimport Joi from '@hapi/joi'\n\nconst createSchema = Joi.object({\n  jobId: Joi.number().required(),\n  title: Joi.string().required(),\n  description: Joi.string().required(),\n  jobType: Joi.string().valid('non-recurring', 'recurring').optional(),\n  client: Joi.string().required(),\n  serviceAddress: Joi.object().optional().allow({}),\n  status: Joi.string().valid('scheduled', 'unscheduled', 'inprogress', 'completed', 'onhold', 'cancelled', 'no-invoice').optional(),\n  expenses: Joi.array().items({\n    supplier: Joi.string().optional(),\n    technician: Joi.string().optional(),\n    description: Joi.string().optional().allow(''),\n    date: Joi.string().optional().allow(''),\n    purchaseOrder: Joi.string().optional().allow(''),\n    receipt: Joi.string().optional().allow(''),\n    paymentType: Joi.string().valid('cash', 'credit-card'),\n    qty: Joi.number().optional().allow(''),\n    amount: Joi.number().optional().allow(''),\n    chargeToCustomer: Joi.boolean().optional(),\n    chargeType: Joi.string().valid('time-expense', 'expense-against-casual-items', 'casual').optional(),\n    lineItem: Joi.object({\n      item: Joi.string().required(),\n      description: Joi.string().required(),\n      unitCost: Joi.number().required(),\n      qty: Joi.number().required()\n    }).required()\n  }),\n  technicians: Joi.array().items({\n    technician: Joi.string().required(),\n    status: Joi.string().valid('on-way').optional(),\n    checkIn: Joi.string().optional().allow(''),\n    checkOut: Joi.string().optional().allow('')\n  }).optional().allow([]),\n  schedule: Joi.array().items({\n    title: Joi.string().optional().allow(''),\n    instructions: Joi.string().optional().allow(''),\n    startDateTime: Joi.string().optional().allow(''),\n    endDatetime: Joi.string().optional().allow(''),\n    assignedTo: Joi.array().items({\n      technician: Joi.string().required()\n    }).optional().allow([])\n  }).optional().allow([]),\n  attachments: Joi.array().items({\n    fileName: Joi.string().optional(),\n    mimeType: Joi.string().optional(),\n    location: Joi.string().optional()\n  }).optional().allow([]),\n  reminder: Joi.object({\n    type: Joi.string().valid('call', 'email', 'visit').required(),\n    subject: Joi.string().optional().allow(''),\n    dateTime: Joi.string().optional().allow(''),\n    assignedTo: Joi.array().items({\n      technician: Joi.string().optional()\n    }),\n    comments: Joi.string().optional().allow('')\n  }).optional().allow({}),\n  internalNotes: Joi.object({\n    to: Joi.string().optional(),\n    via: Joi.string().valid('sms', 'email').required(),\n    subject: Joi.string().optional().allow(''),\n    comments: Joi.string().optional().allow('')\n  }).optional().allow({}),\n  clientsPreferences: Joi.object({\n    to: Joi.string().optional(),\n    via: Joi.string().valid('sms', 'email').required(),\n    subject: Joi.string().optional().allow(''),\n    message: Joi.string().optional().allow('')\n  }).optional().allow({})\n})\n\nconst updateSchema = Joi.object({\n  id: Joi.string().required(),\n  jobId: Joi.number().required(),\n  title: Joi.string().required(),\n  description: Joi.string().required(),\n  jobType: Joi.string().valid('non-recurring', 'recurring').optional(),\n  client: Joi.string().required(),\n  serviceAddress: Joi.object().optional().allow({}),\n  status: Joi.string().valid('scheduled', 'unscheduled', 'inprogress', 'completed', 'onhold', 'cancelled', 'no-invoice').optional(),\n  expenses: Joi.array().items({\n    supplier: Joi.string().optional(),\n    technician: Joi.string().optional(),\n    description: Joi.string().optional().allow(''),\n    date: Joi.string().optional().allow(''),\n    purchaseOrder: Joi.string().optional().allow(''),\n    receipt: Joi.string().optional().allow(''),\n    paymentType: Joi.string().valid('cash', 'credit-card'),\n    qty: Joi.number().optional().allow(''),\n    amount: Joi.number().optional().allow(''),\n    chargeToCustomer: Joi.boolean().optional(),\n    chargeType: Joi.string().valid('time-expense', 'expense-against-casual-items', 'casual').optional(),\n    lineItem: Joi.object({\n      item: Joi.string().required(),\n      description: Joi.string().required(),\n      unitCost: Joi.number().required(),\n      qty: Joi.number().required()\n    }).required()\n  }),\n  technicians: Joi.array().items({\n    technician: Joi.string().required(),\n    status: Joi.string().valid('on-way').optional(),\n    checkIn: Joi.string().optional().allow(''),\n    checkOut: Joi.string().optional().allow('')\n  }).optional().allow([]),\n  schedule: Joi.array().items({\n    title: Joi.string().optional().allow(''),\n    instructions: Joi.string().optional().allow(''),\n    startDateTime: Joi.string().optional().allow(''),\n    endDatetime: Joi.string().optional().allow(''),\n    assignedTo: Joi.array().items({\n      technician: Joi.string().required()\n    }).optional().allow([])\n  }).optional().allow([]),\n  attachments: Joi.array().items({\n    fileName: Joi.string().optional(),\n    mimeType: Joi.string().optional(),\n    location: Joi.string().optional()\n  }).optional().allow([]),\n  reminder: Joi.object({\n    type: Joi.string().valid('call', 'email', 'visit').required(),\n    subject: Joi.string().optional().allow(''),\n    dateTime: Joi.string().optional().allow(''),\n    assignedTo: Joi.array().items({\n      technician: Joi.string().optional()\n    }),\n    comments: Joi.string().optional().allow('')\n  }).optional().allow({}),\n  internalNotes: Joi.object({\n    to: Joi.string().optional(),\n    via: Joi.string().valid('sms', 'email').required(),\n    subject: Joi.string().optional().allow(''),\n    comments: Joi.string().optional().allow('')\n  }).optional().allow({}),\n  clientsPreferences: Joi.object({\n    to: Joi.string().optional(),\n    via: Joi.string().valid('sms', 'email').required(),\n    subject: Joi.string().optional().allow(''),\n    message: Joi.string().optional().allow('')\n  }).optional().allow({})\n})\n\nconst updateStatusSchema = Joi.object({\n  id: Joi.string().required(),\n  status: Joi.string().valid('scheduled', 'un-scheduled', 'in-progress', 'completed', 'on-hold', 'cancelled', 'no-invoice').required()\n})\n\nconst deleteSchema = Joi.object({\n  id: Joi.array().items(Joi.string()).required()\n})\n\nconst formatSortData = (sort = []) => {\n  if (!sort || sort.length === 0) return {};\n  return sort.reduce((s, item) => {\n    const [key, value] = item.split('.')\n    switch (value) {\n      case 'asc':\n        return { ...s, [key]: 1 }\n      case 'desc':\n        return { ...s, [key]: -1 }\n      default:\n        return s\n    }\n  }, {})\n}\n\nconst isNumber = (text) => {\n  const data = parseInt(text)\n  if (typeof data === 'number' && !Number.isNaN(data)) return data\n\n  return ''\n}\n\nexport const createJob = async (req, res) => {\n  try {\n    const validation = Joi.validate(req.body, createSchema)\n    if (validation.error) throw new Error(validation.error)\n\n    const { storeId } = req\n    const { forceUpdate, ...rest } = req.body\n    if (!forceUpdate) {\n      const found = await _JobModel().findOne({ jobId: rest.jobId })\n      if (found) throw new Error(ERRORS.RESOURCE_ALREADY_EXISTS)\n    }\n\n    const data = await _JobModel().create({ ...rest, storeId })\n    return res.status(200).json({ data })\n  } catch (err) {\n    console.log(err)\n    if (err.message === ERRORS.RESOURCE_ALREADY_EXISTS) return res.status(409).json({ error: true, reason: err.message })\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const updateJob = async (req, res) => {\n  try {\n    const validation = Joi.validate(req.body, updateSchema)\n    if (validation.error) throw new Error(validation.error)\n\n    const { forceUpdate, id: _id, ...rest } = req.body\n    if (!forceUpdate) {\n      const result = await _JobModel().findOne({ jobId: rest.jobId, _id: { $ne: _id } })\n      if (result) throw new Error(ERRORS.RESOURCE_ALREADY_EXISTS)\n    }\n\n    const result = await _JobModel().findOneAndUpdate({ _id, isDelete: false }, { $set: { ...rest } }, { new: true })\n    return res.json({ data: result })\n  } catch (err) {\n    console.log(err)\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const getJobs = async (req, res) => {\n  try {\n    const { page, limit, id: _id, text, status, customerId, dateFrom, dateTo, sort = [] } = req.query\n\n    if (_id) {\n      const result = await _JobModel().findOne({ _id, isDelete: false }).populate([{ path: 'client' }, { path: 'expenses.lineItem.item', select: 'type name description taxExempt inventoryStock' }, { path: 'technicians.technician' }])\n      return res.json({ data: result })\n    } else {\n\n      let filter = { $and: [] }\n\n      let sorts = formatSortData(sort)\n\n      if (status) filter.$and.push({ status })\n      if (customerId) filter.$and.push({ client: customerId })\n      if (dateFrom) filter.$and.push({ createdAt: { $gte: new Date(dateFrom) } })\n      if (dateTo) filter.$and.push({ createdAt: { $lte: new Date(dateTo) } })\n      if (text) {\n        filter.$and.push({\n          $or: [\n            {\n              jobId: isNumber(text)\n            },\n            {\n              title: {\n                $regex: new RegExp(text.split(' ').join('|')),\n                $options: 'i'\n              }\n            }\n          ]\n        })\n      }\n\n      if (filter.$and.length === 0) filter = {};\n\n      const data = await _JobModel().paginate({ isDelete: false, ...filter }, { page, limit, sort: { ...sorts }, populate: [{ path: 'client' }, { path: 'lineItems.item', select: 'type name description taxExempt inventoryStock' }, { path: 'technicians.technician' }] })\n      return res.json(data)\n    }\n  } catch (err) {\n    console.log(err)\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const getNextJobNumber = async (req, res) => {\n  try {\n    const result = await _JobModel().findOne({}, {}, { sort: { jobId: -1 } })\n    if (!result) return res.json({ data: { jobId: 1 } })\n    return res.json({ data: { jobId: parseInt(result.jobId) + 1 } })\n  } catch (err) {\n    console.log(err)\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const updateJobStatus = async (req, res) => {\n  try {\n    const validation = Joi.validate(req.body, updateStatusSchema)\n    if (validation.error) throw new Error(validation.error)\n\n    const { id: _id, status } = req.body\n    const result = await _JobModel().findOneAndUpdate({ _id, isDelete: false }, { $set: { status } }, { new: true })\n\n    return res.json({ data: result })\n  } catch (err) {\n    console.log(err)\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\nexport const deleteJobs = async (req, res) => {\n  try {\n    const validation = Joi.validate(req.body, deleteSchema)\n    if (validation.error) throw new Error(validation.error)\n\n    const { id: _id } = req.body\n    const result = await _JobModel().updateMany({ _id: { $in: _id } }, { $set: { isDelete: true } })\n    return res.json({ data: result })\n  } catch (err) {\n    console.log(err)\n    return res.status(500).json({ error: true, reason: err.message })\n  }\n}\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1575001852206
  }
}